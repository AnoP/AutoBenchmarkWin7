import platform
import getpass
import time
import LocalPolicies
import AccountPolicies
import AdministrativeTemplatesComputer
import AdministrativeTemplatesUser
import AdvancedAuditPolicyConfiguration
import FirewallDomainProfile
import FirewallPrivateProfile
import FirewallPublicProfile
import CountWarning

def html():
	temp = a = b = c = d = [0]
	if (AccountPolicies.PasswordHistorySize() == 'WARNING') ==1 :
		temp.append("Account Policies \ Password Policy \ Enforce password history")
		a.append("(L1) Ensure 'Enforce password history' is set to '24 or more password(s)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the number of renewed, unique passwords that have to be associated with a user account before you can reuse an old password. The value for this policy setting must be between 0 and 24 passwords. The default value for Windows Vista is 0 passwords, but the default setting in a domain is 24 passwords. To maintain the effectiveness of this policy setting, use the Minimum password age setting to prevent users from repeatedly changing their password.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 24 or more password(s): Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Enforce password history")
	if (AccountPolicies.MaximumPasswordAge() == 'WARNING') ==1 :
		temp.append("Account Policies \ Password Policy \ Maximum password age")
		a.append("(L1) Ensure 'Maximum password age' is set to '60 or fewer days, but not 0'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting defines how long a user can use their password before it expires. Values for this policy setting range from 0 to 999 days. If you set the value to 0, the password will never expire. Because attackers can crack passwords, the more frequently you change the password the less opportunity an attacker has to use a cracked password. However, the lower this value is set, the higher the potential for an increase in calls to help desk support due to users having to change their password or forgetting which password is current.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 60 or fewer days, but not 0: Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Maximum password age")
	if (AccountPolicies.MinimumPasswordAge() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Password Policy \ Minimum password age")
		a.append("(L1) Ensure 'Minimum password age' is set to '1 or more day(s)")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the number of days that you must use a password before you can change it. The range of values for this policy setting is between 1 and 999 days. (You may also set the value to 0 to allow immediate password changes.) The default value for this setting is 0 days.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 1 or more day(s): Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Minimum password age ")
	if (AccountPolicies.MinimumPasswordLength() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Password Policy \ Minimum password length")
		a.append("(L1) Ensure 'Minimum password length' is set to '14 or more character(s)")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting determines the least number of characters that make up a password for a user account. There are many different theories about how to determine the best password length for an organization, but perhaps "pass phrase" is a better term than "password." In Microsoft Windows 2000 or later, pass phrases can be quite long and can include spaces. Therefore, a phrase such as "I want to drink a $5 milkshake" is a valid pass phrase; it is a considerably stronger password than an 8 or 10 character string of random numbers and letters, and yet is easier to remember. Users must be educated about the proper selection and maintenance of passwords, especially with regard to password length. ''')
		d.append("To establish the recommended configuration via GP, set the following UI path to 14 or more character(s): Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Minimum password length")
	if (AccountPolicies.PasswordComplexity() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Password Policy \  Password must meet complexity requirements")
		a.append("(L1) Ensure 'Password must meet complexity requirements' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting checks all new passwords to ensure that they meet basic requirements for strong passwords. <br /> When this policy is enabled, passwords must meet the following minimum requirements: <br /> - Not contain the user's account name or parts of the user's full name that exceed two consecutive characters <br /> - Be at least six characters in length <br /> - Contain characters from three of the following four categories: <br /> - English uppercase characters (A through Z) <br /> - English lowercase characters (a through z) <br /> - Base 10 digits (0 through 9) <br /> - Non-alphabetic characters (for example, !, $, #, %) <br /> - A catch-all category of any Unicode character that does not fall under the previous four categories. This fifth category can be regionally specific. <br /> Each additional character in a password increases its complexity exponentially. For instance, a seven-character, all lower-case alphabetic password would have 267 (approximately 8 x 109 or 8 billion) possible combinations. At 1,000,000 attempts per second (a capability of many password-cracking utilities), it would only take 133 minutes to crack. A seven-character alphabetic password with case sensitivity has 527 combinations. A seven-character case-sensitive alphanumeric password without punctuation has 627 combinations. An eight-character password has 268 (or 2 x 1011) possible combinations. Although this might seem to be a large number, at 1,000,000 attempts per second it would take only 59 hours to try all possible passwords. Remember, these times will significantly increase for passwords that use ALT characters and other special keyboard characters such as "!" or "@". Proper use of the password settings can help make it difficult to mount a brute force attack.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Password must meet complexity requirements ")
	if (AccountPolicies.ClearTextPassword() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Password Policy \  Store passwords using reversible encryption")
		a.append("(L1) Ensure 'Store passwords using reversible encryption' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the operating system stores passwords in a way that uses reversible encryption, which provides support for application protocols that require knowledge of the user's password for authentication purposes. Passwords that are stored with reversible encryption are essentially the same as plaintext versions of the passwords.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption")
	if (AccountPolicies.LockoutDuration() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Account Lockout Policy \ Account lockout duration")
		a.append("(L1) Ensure 'Account lockout duration' is set to '15 or more minute(s)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
 		c.append("This policy setting determines the length of time that must pass before a locked account is unlocked and a user can try to log on again. The setting does this by specifying the number of minutes a locked out account will remain unavailable. If the value for this policy setting is configured to 0, locked out accounts will remain locked out until an administrator manually unlocks them. <br /> Although it might seem like a good idea to configure the value for this policy setting to a high value, such a configuration will likely increase the number of calls that the help desk receives to unlock accounts locked by mistake. Users should be aware of the length of time a lock remains in place, so that they realize they only need to call the help desk if they have an extremely urgent need to regain access to their computer. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to 15 or more minute(s): Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Account Lockout Policy\Account lockout duration")
	if (AccountPolicies.LockoutBadCount() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Account Lockout Policy \ Account lockout threshold ")
		a.append("(L1) Ensure 'Account lockout threshold' is set to '10 or fewer invalid logon attempt(s), but not 0'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the number of failed logon attempts before the account is locked. Setting this policy to 0 does not conform with the benchmark as doing so disables the account lockout threshold.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 10 or fewer invalid login attempt(s), but not 0: Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Account Lockout Policy\Account lockout threshold")
	if (AccountPolicies.ResetLockoutCount() == 'WARNING') ==1 :  
		temp.append("Account Policies \ Account Lockout Policy \ Reset account lockout counter after")
		a.append("(L1) Ensure 'Reset account lockout counter after' is set to '15 or more minute(s)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the length of time before the Account lockout threshold resets to zero. The default value for this policy setting is Not Defined. If the Account lockout threshold is defined, this reset time must be less than or equal to the value for the Account lockout duration setting. <br /> If you leave this policy setting at its default value or configure the value to an interval that is too long, your environment could be vulnerable to a DoS attack. An attacker could maliciously perform a number of failed logon attempts on all users in the organization, which will lock out their accounts. If no policy were determined to reset the account lockout, it would be a manual task for administrators. Conversely, if a reasonable time value is configured for this policy setting, users would be locked out for a set period until all of the accounts are unlocked automatically.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 15 or more minute(s): Computer Configuration\Policies\Windows Settings\Security Settings\Account Policies\Account Lockout Policy\Reset account lockout counter after")
	if (LocalPolicies.SeTrustedCredManAccessPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Access Credential Manager as a trusted caller")
		a.append("(L1) Ensure 'Access Credential Manager as a trusted caller' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This security setting is used by Credential Manager during Backup and Restore. No accounts should have this user right, as it is only assigned to Winlogon. Users' saved credentials might be compromised if this user right is assigned to other entities.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Access Credential Manager as a trusted caller")
	if (LocalPolicies.SeNetworkLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Access this computer from the network")
		a.append("(L1) Ensure 'Access this computer from the network' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows other users on the network to connect to the computer and is required by various network protocols that include Server Message Block (SMB)-based protocols, NetBIOS, Common Internet File System (CIFS), and Component Object Model Plus (COM+).")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Access this computer from the network")
	if (LocalPolicies.SeTcbPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Act as part of the operating system")
		a.append("(L1) Ensure 'Act as part of the operating system' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows a process to assume the identity of any user and thus gain access to the resources that the user is authorized to access.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Act as part of the operating system")
	if (LocalPolicies.SeIncreaseQuotaPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Adjust memory quotas for a process")
		a.append("(L1) Ensure 'Adjust memory quotas for a process' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows a user to adjust the maximum amount of memory that is available to a process. The ability to adjust memory quotas is useful for system tuning, but it can be abused. In the wrong hands, it could be used to launch a denial of service (DoS) attack.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, LOCAL SERVICE, NETWORK SERVICE: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Adjust memory quotas for a process")
	if (LocalPolicies.SeInteractiveLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Allow log on locally")
		a.append("(L1) Ensure 'Allow log on locally' is set to 'Administrators, Users'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users can interactively log on to computers in your environment. Logons that are initiated by pressing the CTRL+ALT+DEL key sequence on the client computer keyboard require this user right. Users who attempt to log on through Terminal Services or IIS also require this user right. <br /> The Guest account is assigned this user right by default. Although this account is disabled by default, it's recommended that you enable this setting through Group Policy. However, this user right should generally be restricted to the Administrators and Users groups. Assign this user right to the Backup Operators group if your organization requires that they have this capability.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, Users: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Allow log on locally")
	if (LocalPolicies.SeRemoteInteractiveLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Allow log on through Remote Desktop Services")
		a.append("(L1) Ensure 'Allow log on through Remote Desktop Services' is set to 'Administrators, Remote Desktop Users'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users or groups have the right to log on as a Terminal Services client. Remote desktop users require this user right. If your organization uses Remote Assistance as part of its help desk strategy, create a group and assign it this user right through Group Policy. If the help desk in your organization does not use Remote Assistance, assign this user right only to the Administrators group or use the restricted groups feature to ensure that no user accounts are part of the Remote Desktop Users group. <br /> Restrict this user right to the Administrators group, and possibly the Remote Desktop Users group, to prevent unwanted users from gaining access to computers on your network by means of the Remote Assistance feature.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, Remote Desktop Users: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Allow log on through Remote Desktop Services")
	if (LocalPolicies.SeBackupPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Back up files and directories")
		a.append("(L1) Ensure 'Back up files and directories' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to circumvent file and directory permissions to back up the system. This user right is enabled only when an application (such as NTBACKUP) attempts to access a file or directory through the NTFS file system backup application programming interface (API). Otherwise, the assigned file and directory permissions apply.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators : Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Back up files and directories")
	if (LocalPolicies.SeSystemtimePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Change the system time")
		a.append("(L1) Ensure 'Change the system time' is set to 'Administrators, 'LOCAL SERVICE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users and groups can change the time and date on the internal clock of the computers in your environment. Users who are assigned this user right can affect the appearance of event logs. When a computer's time setting is changed, logged events reflect the new time, not the actual time that the events occurred. <br /> When configuring a user right in the SCM enter a comma delimited list of accounts. Accounts can be either local or located in Active Directory, they can be groups, users, or computers. <br /> Note: Discrepancies between the time on the local computer and on the domain controllers in your environment may cause problems for the Kerberos authentication protocol, which could make it impossible for users to log on to the domain or obtain authorization to access domain resources after they are logged on. Also, problems will occur when Group Policy is applied to client computers if the system time is not synchronized with the domain controllers.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, LOCAL SERVICE: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Change the system time")
	if (LocalPolicies.SeTimeZonePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Change the time zone")
		a.append("(L1) Ensure 'Change the time zone' is set to 'Administrators, LOCAL SERVICE, Users'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines which users can change the time zone of the computer. This ability holds no great danger for the computer and may be useful for mobile workers.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, LOCAL SERVICE, Users: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Change the time zone")
	if (LocalPolicies.SeCreatePagefilePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Create a pagefile ")
		a.append("(L1) Ensure 'Create a pagefile' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to change the size of the pagefile. By making the pagefile extremely large or extremely small, an attacker could easily affect the performance of a compromised computer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Create a pagefile")
	if (LocalPolicies.SeCreateTokenPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Create a token object")
		a.append("(L1) Ensure 'Create a token object' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows a process to create an access token, which may provide elevated rights to access sensitive data.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Create a token object")
	if (LocalPolicies.SeCreateGlobalPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Create global objects")
		a.append("(L1) Ensure 'Create global objects' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether users can create global objects that are available to all sessions. Users can still create objects that are specific to their own session if they do not have this user right. <br /> Users who can create global objects could affect processes that run under other users' sessions. This capability could lead to a variety of problems, such as application failure or data corruption.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Create global objects")
	if (LocalPolicies.SeCreatePermanentPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Create permanent shared objects ")
		a.append("Ensure 'Create permanent shared objects' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This user right is useful to kernel-mode components that extend the object namespace. However, components that run in kernel mode have this user right inherently. Therefore, it is typically not necessary to specifically assign this user right.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Create permanent shared objects")
	if (LocalPolicies.SeCreateSymbolicLinkPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Create symbolic links")
		a.append("(L1) Ensure 'Create symbolic links' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users can create symbolic links. In Windows Vista, existing NTFS file system objects, such as files and folders, can be accessed by referring to a new kind of file system object called a symbolic link. A symbolic link is a pointer (much like a shortcut or .lnk file) to another file system object, which can be a file, folder, shortcut or another symbolic link. The difference between a shortcut and a symbolic link is that a shortcut only works from within the Windows shell. To other programs and applications, shortcuts are just another file, whereas with symbolic links, the concept of a shortcut is implemented as a feature of the NTFS file system. <br /> Symbolic links can potentially expose security vulnerabilities in applications that are not designed to use them. For this reason, the privilege for creating symbolic links should only be assigned to trusted users. By default, only Administrators can create symbolic links.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Create symbolic links")
	if (LocalPolicies.SeDebugPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Debug programs")
		a.append("(L1) Ensure 'Debug programs' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which user accounts will have the right to attach a debugger to any process or to the kernel, which provides complete access to sensitive and critical operating system components. Developers who are debugging their own applications do not need to be assigned this user right; however, developers who are debugging new system components will need it.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Debug programs")
	if (LocalPolicies.SeDenyNetworkLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Deny access to this computer from the network")
		a.append("(L1) Ensure 'Deny access to this computer from the network' to include 'Guests, Local account'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting prohibits users from connecting to a computer from across the network, which would allow users to access and potentially modify data remotely. In high security environments, there should be no need for remote users to access data on a computer. Instead, file sharing should be accomplished through the use of network servers.")
		d.append("To establish the recommended configuration via GP, set the following UI path to include Guests, Local account: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Deny access to this computer from the network")
	if (LocalPolicies.SeDenyBatchLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Deny log on as a batch job")
		a.append("(L1) Ensure 'Deny log on as a batch job' to include 'Guests'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which accounts will not be able to log on to the computer as a batch job. A batch job is not a batch (.bat) file, but rather a batch-queue facility. Accounts that use the Task Scheduler to schedule jobs need this user right. <br /> The Deny log on as a batch job user right overrides the Log on as a batch job user right, which could be used to allow accounts to schedule jobs that consume excessive system resources. Such an occurrence could cause a DoS condition. Failure to assign this user right to the recommended accounts can be a security risk.")
		d.append("To establish the recommended configuration via GP, set the following UI path to include Guests: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Deny log on as a batch job")
	if (LocalPolicies.SeDenyServiceLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Deny log on as a service")
		a.append("(L1) Ensure 'Deny log on as a service' to include 'Guests'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This security setting determines which service accounts are prevented from registering a process as a service. This policy setting supersedes the Log on as a service policy setting if an account is subject to both policies. <br /> Note: This security setting does not apply to the System, Local Service, or Network Service accounts.")
		d.append("To establish the recommended configuration via GP, set the following UI path to include Guests: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Deny log on as a service")
	if (LocalPolicies.SeDenyInteractiveLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Deny log on locally")
		a.append("(L1) Ensure 'Deny log on locally' to include 'Guests'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This security setting determines which users are prevented from logging on at the computer. This policy setting supersedes the Allow log on locally policy setting if an account is subject to both policies. <br /> Important: If you apply this security policy to the Everyone group, no one will be able to log on locally.")
		d.append("To establish the recommended configuration via GP, set the following UI path to include Guests: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Deny log on locally")
	if (LocalPolicies.SeDenyRemoteInteractiveLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Deny log on through Remote Desktop Services")
		a.append("(L1) Ensure 'Deny log on through Remote Desktop Services' to include 'Guests, Local account'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether users can log on as Terminal Services clients. After the baseline workstation is joined to a domain environment, there is no need to use local accounts to access the workstation from the network. Domain accounts can access the server for administration and end-user processing. <br /> Caution: Configuring a standalone (non-domain-joined) workstation as described above may result in an inability to remotely administer the workstation.")
		d.append("To establish the recommended configuration via GP, set the following UI path to include Guests, Local account: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Deny log on through Remote Desktop Services")
	if (LocalPolicies.SeEnableDelegationPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Enable computer and user accounts to be trusted for delegation")
		a.append("(L1) Ensure 'Enable computer and user accounts to be trusted for delegation' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to change the Trusted for Delegation setting on a computer object in Active Directory. Abuse of this privilege could allow unauthorized users to impersonate other users on the network.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Enable computer and user accounts to be trusted for delegation")
	if (LocalPolicies.SeRemoteShutdownPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Force shutdown from a remote system")
		a.append("(L1) Ensure 'Force shutdown from a remote system' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to shut down Windows Vista-based computers from remote locations on the network. Anyone who has been assigned this user right can cause a denial of service (DoS) condition, which would make the computer unavailable to service user requests. Therefore, it is recommended that only highly trusted administrators be assigned this user right.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Force shutdown from a remote system")
	if (LocalPolicies.SeAuditPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Generate security audits")
		a.append("(L1) Ensure 'Generate security audits' is set to 'LOCAL SERVICE, NETWORK SERVICE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users or processes can generate audit records in the Security log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to LOCAL SERVICE, NETWORK SERVICE: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Generate security audits")
	if (LocalPolicies.SeImpersonatePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Impersonate a client after authentication")
		a.append("(L1) Ensure 'Impersonate a client after authentication' is set to 'Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''The policy setting allows programs that run on behalf of a user to impersonate that user (or another specified account) so that they can act on behalf of the user. If this user right is required for this kind of impersonation, an unauthorized user will not be able to convince a client to connect-for example, by remote procedure call (RPC) or named pipes-to a service that they have created to impersonate that client, which could elevate the unauthorized user's permissions to administrative or system levels. <br /> Services that are started by the Service Control Manager have the built-in Service group added by default to their access tokens. COM servers that are started by the COM infrastructure and configured to run under a specific account also have the Service group added to their access tokens. As a result, these processes are assigned this user right when they are started. <br /> Also, a user can impersonate an access token if any of the following conditions exist: <br />- The access token that is being impersonated is for this user. <br /> - The user, in this logon session, logged on to the network with explicit credentials to create the access token. <br /> - The requested level is less than Impersonate, such as Anonymous or Identify. <br /> An attacker with the Impersonate a client after authentication user right could create a service, trick a client to make them connect to the service, and then impersonate that client to elevate the attacker's level of access to that of the client.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, LOCAL SERVICE, NETWORK SERVICE, SERVICE: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Impersonate a client after authentication")
	if (LocalPolicies.SeIncreaseBasePriorityPrivilege() == 'WARNING') ==1 :  	
		temp.append("Local Policies \ User Rights Assignment \ Increase scheduling priority")
		a.append("(L1) Ensure 'Increase scheduling priority' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether users can increase the base priority class of a process. (It is not a privileged operation to increase relative priority within a priority class.) This user right is not required by administrative tools that are supplied with the operating system but might be required by software development tools.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Increase scheduling priority")
	if (LocalPolicies.SeLoadDriverPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Load and unload device drivers")
		a.append("(L1) Ensure 'Load and unload device drivers' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to dynamically load a new device driver on a system. An attacker could potentially use this capability to install malicious code that appears to be a device driver. This user right is required for users to add local printers or printer drivers in Windows Vista.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Load and unload device drivers")
	if (LocalPolicies.SeLockMemoryPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Lock pages in memory")
		a.append("(L1) Ensure 'Lock pages in memory' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows a process to keep data in physical memory, which prevents the system from paging the data to virtual memory on disk. If this user right is assigned, significant degradation of system performance can occur.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Lock pages in memory")
	if (LocalPolicies.SeBatchLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Log on as a batch job")
		a.append("(L2) Ensure 'Log on as a batch job' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows accounts to log on using the task scheduler service. Because the task scheduler is often used for administrative purposes, it may be needed in enterprise environments. However, its use should be restricted in high security environments to prevent misuse of system resources or to prevent attackers from using the right to launch malicious code after gaining user level access to a computer. <br /> When configuring a user right in the SCM enter a comma delimited list of accounts. Accounts can be either local or located in Active Directory, they can be groups, users, or computers.")
		d.append("To implement the recommended configuration state, set the following Group Policy setting to Administrators: Computer Configuration\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Log on as a batch job")
	if (LocalPolicies.SeServiceLogonRight() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Log on as a service")
		a.append("(L2) Ensure 'Log on as a service' is set to 'No One'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows accounts to launch network services or to register a process as a service running on the system. This user right should be restricted on any computer in a high security environment, but because many applications may require this privilege, it should be carefully evaluated and tested before configuring it in an enterprise environment. On Windows Vista-based computers, no users or groups have this privilege by default. <br /> When configuring a user right in the SCM enter a comma delimited list of accounts. Accounts can be either local or located in Active Directory, they can be groups, users, or computers.")
		d.append("To implement the recommended configuration state, set the following Group Policy setting to No One: Computer Configuration\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Log on as a service")
	if (LocalPolicies.SeSecurityPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Manage auditing and security log")
		a.append("(L1) Ensure 'Manage auditing and security log' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users can change the auditing options for files and directories and clear the Security log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Manage auditing and security log")
	if (LocalPolicies.SeRelabelPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Modify an object label")
		a.append("(L1) Ensure 'Modify an object label' is set to 'No One'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This privilege determines which user accounts can modify the integrity label of objects, such as files, registry keys, or processes owned by other users. Processes running under a user account can modify the label of an object owned by that user to a lower level without this privilege.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No One: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Modify an object label")
	if (LocalPolicies.SeSystemEnvironmentPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Modify firmware environment values")
		a.append("(L1) Ensure 'Modify firmware environment values' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to configure the system-wide environment variables that affect hardware configuration. This information is typically stored in the Last Known Good Configuration. Modification of these values and could lead to a hardware failure that would result in a denial of service condition.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Modify firmware environment values")
	if (LocalPolicies.SeManageVolumePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Perform volume maintenance tasks")
		a.append("(L1) Ensure 'Perform volume maintenance tasks' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to manage the system's volume or disk configuration, which could allow a user to delete a volume and cause data loss as well as a denial-of-service condition.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Perform volume maintenance tasks")
	if (LocalPolicies.SeProfileSingleProcessPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Profile single process")
		a.append("(L1) Ensure 'Profile single process' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users can use tools to monitor the performance of non-system processes. Typically, you do not need to configure this user right to use the Microsoft Management Console (MMC) Performance snap-in. However, you do need this user right if System Monitor is configured to collect data using Windows Management Instrumentation (WMI). Restricting the Profile single process user right prevents intruders from gaining additional information that could be used to mount an attack on the system.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Profile single process")
	if (LocalPolicies.SeSystemProfilePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Profile system performance")
		a.append("(L1) Ensure 'Profile system performance' is set to 'Administrators, NT SERVICE\WdiServiceHost'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to use tools to view the performance of different system processes, which could be abused to allow attackers to determine a system's active processes and provide insight into the potential attack surface of the computer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, NT SERVICE\WdiServiceHost: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Profile system performance")
	if (LocalPolicies.SeAssignPrimaryTokenPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Replace a process level token")
		a.append("(L1) Ensure 'Replace a process level token' is set to 'LOCAL SERVICE, NETWORK SERVICE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows one process or service to start another service or process with a different security access token, which can be used to modify the security access token of that sub-process and result in the escalation of privileges.")
		d.append("To establish the recommended configuration via GP, set the following UI path to LOCAL SERVICE, NETWORK SERVICE: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Replace a process level token")
	if (LocalPolicies.SeRestorePrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Restore files and directories")
		a.append("(L1) Ensure 'Restore files and directories' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users can bypass file, directory, registry, and other persistent object permissions when restoring backed up files and directories on computers that run Windows Vista in your environment. This user right also determines which users can set valid security principals as object owners; it is similar to the Back up files and directories user right.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Restore files and directories")
	if (LocalPolicies.SeShutdownPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Shut down the system")
		a.append("(L1) Ensure 'Shut down the system' is set to 'Administrators, Users'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which users who are logged on locally to the computers in your environment can shut down the operating system with the Shut Down command. Misuse of this user right can result in a denial of service condition.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators, Users: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Shut down the system")
	if (LocalPolicies.SeTakeOwnershipPrivilege() == 'WARNING') ==1 :  
		temp.append("Local Policies \ User Rights Assignment \ Take ownership of files or other objects")
		a.append("(L1) Ensure 'Take ownership of files or other objects' is set to 'Administrators'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows users to take ownership of files, folders, registry keys, processes, or threads. This user right bypasses any permissions that are in place to protect objects to give ownership to the specified user.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Take ownership of files or other objects")
	if (LocalPolicies.EnableAdminAccount() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Accounts \ Accounts: Administrator account status")
		a.append("(L1) Ensure 'Accounts: Administrator account status' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting enables or disables the Administrator account during normal operation. When a computer is booted into safe mode, the Administrator account is always enabled, regardless of how this setting is configured. Note that this setting will have no impact when applied to the domain controller organizational unit via group policy because domain controllers have no local account database. It can be configured at the domain level via group policy, similar to account lockout and password policy settings.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Accounts: Administrator account status")
	if (LocalPolicies.EnableGuestAccount() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Accounts \ Accounts: Guest account status")
		a.append("(L1) Ensure 'Accounts: Guest account status' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the Guest account is enabled or disabled. The Guest account allows unauthenticated network users to gain access to the system. Note that this setting will have no impact when applied to the domain controller organizational unit via group policy because domain controllers have no local account database. It can be configured at the domain level via group policy, similar to account lockout and password policy settings.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Accounts: Guest account status")
	if (LocalPolicies.LimitBlankPasswordUse() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Accounts \ Accounts: Limit local account use of blank passwords to console logon only")
		a.append("(L1) Ensure 'Accounts: Limit local account use of blank passwords to console logon only' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether local accounts that are not password protected can be used to log on from locations other than the physical computer console. If you enable this policy setting, local accounts that have blank passwords will not be able to log on to the network from remote client computers. Such accounts will only be able to log on at the keyboard of the computer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Accounts: Limit local account use of blank passwords to console logon only")
	if (LocalPolicies.NewAdministratorName() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Accounts \ Accounts: Rename administrator account")
		a.append("(L1) Configure 'Accounts: Rename administrator account'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("The built-in local administrator account is a well-known account name that attackers will target. It is recommended to choose another name for this account, and to avoid names that denote administrative or elevated access accounts. Be sure to also change the default description for the local administrator (through the Computer Management console).")
		d.append("To establish the recommended configuration via GP, configure the following UI path: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Accounts: Rename administrator account")
	if (LocalPolicies.NewGuestName() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Accounts \ Accounts: Rename guest account")
		a.append("(L1) Configure 'Accounts: Rename guest account'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("The built-in local guest account is another well-known name to attackers. It is recommended to rename this account to something that does not indicate its purpose. Even if you disable this account, which is recommended, ensure that you rename it for added security.")
		d.append("To establish the recommended configuration via GP, configure the following UI path: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Accounts: Rename guest account")
	if (LocalPolicies.SCENoApplyLegacyAuditPolicy() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Audit \ Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings")
		a.append("(L1) Ensure 'Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows administrators to enable the more precise auditing capabilities present in Windows Vista. <br /> The Audit Policy settings available in Windows Server 2003 Active Directory do not yet contain settings for managing the new auditing subcategories. To properly apply the auditing policies prescribed in this baseline, the Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings setting needs to be configured to Enabled.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings")
	if (LocalPolicies.crashonauditfail() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Audit \ Audit: Shut down system immediately if unable to log security audits")
		a.append("(L1) Ensure 'Audit: Shut down system immediately if unable to log security audits' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the system shuts down if it is unable to log Security events. It is a requirement for Trusted Computer System Evaluation Criteria (TCSEC)-C2 and Common Criteria certification to prevent auditable events from occurring if the audit system is unable to log them. Microsoft has chosen to meet this requirement by halting the system and displaying a stop message if the auditing system experiences a failure. When this policy setting is enabled, the system will be shut down if a security audit cannot be logged for any reason. <br /> If the Audit: Shut down system immediately if unable to log security audits setting is enabled, unplanned system failures can occur. Therefore, this policy setting is configured to Not Defined for both of the environments that are discussed in this chapter.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Audit: Shut down system immediately if unable to log security audits")
	if (LocalPolicies.AllocateDASD() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Devices \ Devices: Allowed to format and eject removable media")
		a.append("(L1) Ensure 'Devices: Allowed to format and eject removable media' is set to 'Administrators and Interactive Users'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines who is allowed to format and eject removable NTFS media. You can use this policy setting to prevent unauthorized users from removing data on one computer to access it on another computer on which they have local administrator privileges.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Administrators and Interactive Users: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Devices: Allowed to format and eject removable media")
	if (LocalPolicies.AddPrinterDriver() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Devices \ Devices: Prevent users from installing printer drivers")
		a.append("(L2) Ensure 'Devices: Prevent users from installing printer drivers' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("For a computer to print to a shared printer, the driver for that shared printer must be installed on the local computer. This security setting determines who is allowed to install a printer driver as part of connecting to a shared printer. If this setting is enabled, only Administrators can install a printer driver as part of connecting to a shared printer. If this setting is disabled, any user can install a printer driver as part of connecting to a shared printer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Devices: Prevent users from installing printer drivers")
	if (LocalPolicies.RequireSignOrSeal() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Domain member \ Domain member: Digitally encrypt or sign secure channel data (always)")
		a.append("(L1) Ensure 'Domain member: Digitally encrypt or sign secure channel data (always)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether all secure channel traffic that is initiated by the domain member must be signed or encrypted. If a system is set to always encrypt or sign secure channel data, it cannot establish a secure channel with a domain controller that is not capable of signing or encrypting all secure channel traffic, because all secure channel data must be signed and encrypted.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Domain member: Digitally encrypt or sign secure channel data (always)")
	if (LocalPolicies.SealSecureChannel() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Domain member \ Domain member: Digitally encrypt secure channel data (when possible)")
		a.append("(L1) Ensure 'Domain member: Digitally encrypt secure channel data (when possible)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether a domain member should attempt to negotiate encryption for all secure channel traffic that it initiates. If you enable this policy setting, the domain member will request encryption of all secure channel traffic. If you disable this policy setting, the domain member will be prevented from negotiating secure channel encryption.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Domain member: Digitally encrypt secure channel data (when possible)")
	if (LocalPolicies.SignSecureChannel() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Domain member \ Domain member: Digitally sign secure channel data (when possible)")
		a.append("(L1) Ensure 'Domain member: Digitally sign secure channel data (when possible)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether a domain member should attempt to negotiate whether all secure channel traffic that it initiates must be digitally signed. Digital signatures protect the traffic from being modified by anyone who captures the data as it traverses the network.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Domain member: Digitally sign secure channel data (when possible)")
	if (LocalPolicies.DisablePasswordChange() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Domain member \ Domain member: Disable machine account password changes")
		a.append("(L1) Ensure 'Domain member: Disable machine account password changes' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether a domain member can periodically change its computer account password. If you enable this policy setting, the domain member will be prevented from changing its computer account password. If you disable this policy setting, the domain member can change its computer account password as specified by the Domain Member: Maximum machine account password age setting, which by default is every 30 days. Computers that cannot automatically change their account passwords are potentially vulnerable, because an attacker might be able to determine the password for the system's domain account.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Domain member: Disable machine account password changes")
	if (LocalPolicies.MaximumPasswordAge() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Domain member \ Domain member: Maximum machine account password age ")
		a.append("(L1) Ensure 'Domain member: Maximum machine account password age' is set to '30 or fewer days, but not 0'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the maximum allowable age for a computer account password. By default, domain members automatically change their domain passwords every 30 days. If you increase this interval significantly so that the computers no longer change their passwords, an attacker would have more time to undertake a brute force attack against one of the computer accounts. <br /> Note: A value of 0 does not conform to the benchmark as it disables maximum password age.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 30 or fewer days, but not 0: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Domain member: Maximum machine account password age")
	if (LocalPolicies.RequireStrongKey() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Domain member \ Domain member: Require strong (Windows 2000 or later) session key")
		a.append("(L1) Ensure 'Domain member: Require strong (Windows 2000 or later) session key' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("When this policy setting is enabled, a secure channel can only be established with domain controllers that are capable of encrypting secure channel data with a strong (128-bit) session key. <br /> To enable this policy setting, all domain controllers in the domain must be able to encrypt secure channel data with a strong key, which means all domain controllers must be running Microsoft Windows 2000 or later.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Domain member: Require strong (Windows 2000 or later) session key")
	if (LocalPolicies.DontDisplayLastUserName() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Do not display last user name")
		a.append("(L1) Ensure 'Interactive logon: Do not display last user name' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the account name of the last user to log on to the client computers in your organization will be displayed in each computer's respective Windows logon screen. Enable this policy setting to prevent intruders from collecting account names visually from the screens of desktop or laptop computers in your organization.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Do not display last user name")
	if (LocalPolicies.DisableCAD() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Do not require CTRL+ALT+DEL")
		a.append("(L1) Ensure 'Interactive logon: Do not require CTRL+ALT+DEL' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether users must press CTRL+ALT+DEL before they log on. If you enable this policy setting, users can log on without this key combination. If you disable this policy setting, users must press CTRL+ALT+DEL before they log on to Windows unless they use a smart card for Windows logon. A smart card is a tamper-proof device that stores security information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Do not require CTRL+ALT+DEL")
	if (LocalPolicies.LegalNoticeText() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Message text for users attempting to log on")
		a.append("(L1) Configure 'Interactive logon: Message text for users attempting to log on'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Displaying a warning message before logon may help prevent an attack by warning the attacker about the consequences of their misconduct before it happens. It may also help to reinforce corporate policy by notifying employees of the appropriate policy during the logon process. This text is often used for legal reasons-for example, to warn users about the ramifications of misusing company information or to warn them that their actions may be audited.")
		d.append("To establish the recommended configuration via GP, configure the following UI path to a value that is consistent with the security and operational requirements of your organization: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Message text for users attempting to log on")
	if (LocalPolicies.LegalNoticeCaption() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Message title for users attempting to log on")
		a.append("(L1) Configure 'Interactive logon: Message title for users attempting to log on'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies the text displayed in the title bar of the window that users see when they log on to the system. Configure this setting in a manner that is consistent with the security and operational requirements of your organization.")
		d.append("To establish the recommended configuration via GP, configure the following UI path to a value that is consistent with the security and operational requirements of your organization: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Message title for users attempting to log on")
	if (LocalPolicies.CachedLogonsCount() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Number of previous logons to cache (in case domain controller is not available")
		a.append("(L2) Ensure 'Interactive logon: Number of previous logons to cache (in case domain controller is not available)' is set to '4 or fewer logon(s)'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting determines whether a user can log on to a Windows domain using cached account information. Logon information for domain accounts can be cached locally to allow users to log on even if a domain controller cannot be contacted. This policy setting determines the number of unique users for whom logon information is cached locally. If this value is set to 0, the logon cache feature is disabled. An attacker who is able to access the file system of the server could locate this cached information and use a brute force attack to determine user passwords.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 4 or fewer logon(s): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Number of previous logons to cache (in case domain controller is not available)")
	if (LocalPolicies.PasswordExpiryWARNING() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Prompt user to change password before expiration")
		a.append("(L1) Ensure 'Interactive logon: Prompt user to change password before expiration' is set to 'between 5 and 14 days'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines how far in advance users are warned that their password will expire. It is recommended that you configure this policy setting to at least 5 days but no more than 14 days to sufficiently warn users when their passwords will expire.")
		d.append("To establish the recommended configuration via GP, set the following UI path to a value between 5 and 14 days: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Prompt user to change password before expiration")
	if (LocalPolicies.ScRemoveOption() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Interactive logon \ Interactive logon: Smart card removal behavior")
		a.append("(L1) Ensure 'Interactive logon: Smart card removal behavior' is set to 'Lock Workstation' or higher")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines what happens when the smart card for a logged-on user is removed from the smart card reader.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Lock Workstation (or, if applicable for your environment, Force Logoff or Disconnect if a Remote Desktop Services session): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Interactive logon: Smart card removal behavior")
	if (LocalPolicies.RequireSecuritySignature() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network client \ Microsoft network client: Digitally sign communications (always)")
		a.append("(L1) Ensure 'Microsoft network client: Digitally sign communications (always)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting determines whether packet signing is required by the SMB client component. If you enable this policy setting, the Microsoft network client computer cannot communicate with a Microsoft network server unless that server agrees to sign SMB packets. In mixed environments with legacy client computers, set this option to Disabled because these computers will not be able to authenticate or gain access to domain controllers. However, you can use this policy setting in Windows 2000 or later environments. <br /> Note: When Windows Vista-based computers have this policy setting enabled and they connect to file or print shares on remote servers, it is important that the setting is synchronized with its companion setting, Microsoft network server: Digitally sign communications (always), on those servers. For more information about these settings, see the "Microsoft network client and server: Digitally sign communications (four related settings)" section in Chapter 5 of the Threats and Countermeasures guide.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network client: Digitally sign communications (always)")
	if (LocalPolicies.EnableSecuritySignature() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network client \ Microsoft network client: Digitally sign communications (if server agrees)")
		a.append("(L1) Ensure 'Microsoft network client: Digitally sign communications (if server agrees)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the SMB client will attempt to negotiate SMB packet signing. The implementation of digital signing in Windows-based networks helps to prevent sessions from being hijacked. If you enable this policy setting, the Microsoft network client will use signing only if the server with which it communicates accepts digitally signed communication. <br /> Note: Enabling this policy setting on SMB clients on your network makes them fully effective for packet signing with all clients and servers in your environment.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network client: Digitally sign communications (if server agrees)")
	if (LocalPolicies.EnablePlainTextPassword() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network client \ Microsoft network client: Send unencrypted password to third-party SMB servers")
		a.append("(L1) Ensure 'Microsoft network client: Send unencrypted password to third-party SMB servers' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Disable this policy setting to prevent the SMB redirector from sending plaintext passwords during authentication to third-party SMB servers that do not support password encryption. It is recommended that you disable this policy setting unless there is a strong business case to enable it. If this policy setting is enabled, unencrypted passwords will be allowed across the network.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network client: Send unencrypted password to third-party SMB servers")
	if (LocalPolicies.autodisconnect() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network server \ Microsoft network server: Amount of idle time required before suspending session")
		a.append("(L1) Ensure 'Microsoft network server: Amount of idle time required before suspending session' is set to '15 or fewer minute(s), but not 0'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to specify the amount of continuous idle time that must pass in an SMB session before the session is suspended because of inactivity. Administrators can use this policy setting to control when a computer suspends an inactive SMB session. If client activity resumes, the session is automatically reestablished. <br /> A value of 0 appears to allow sessions to persist indefinitely. The maximum value is 99999, which is over 69 days; in effect, this value disables the setting.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 15 or fewer minute(s), but not 0: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network server: Amount of idle time required before suspending session")
	if (LocalPolicies.RequireSecuritySignatureServer() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network server \ Microsoft network server: Digitally sign communications (always)")
		a.append("(L1) Ensure 'Microsoft network server: Digitally sign communications (always)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines if the server side SMB service is required to perform SMB packet signing. Enable this policy setting in a mixed environment to prevent downstream clients from using the workstation as a network server. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network server: Digitally sign communications (always)")
	if (LocalPolicies.EnableSecuritySignatureServer() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network server \ Microsoft network server: Digitally sign communications (if client agrees)")
		a.append("(L1) Ensure 'Microsoft network server: Digitally sign communications (if client agrees)' is set to 'Enabled' (Scored)")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines if the server side SMB service is able to sign SMB packets if it is requested to do so by a client that attempts to establish a connection. If no signing request comes from the client, a connection will be allowed without a signature if the Microsoft network server: Digitally sign communications (always) setting is not enabled. <br / > Note: Enable this policy setting on SMB clients on your network to make them fully effective for packet signing with all clients and servers in your environment.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network server: Digitally sign communications (if client agrees)")
	if (LocalPolicies.enableforcedlogoff() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network server \ Microsoft network server: Disconnect clients when logon hours expire")
		a.append("L1) Ensure 'Microsoft network server: Disconnect clients when logon hours expire' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether to disconnect users who are connected to the local computer outside their user account's valid logon hours. It affects the SMB component. If you enable this policy setting, client sessions with the SMB service will be forcibly disconnected when the client's logon hours expire. If you disable this policy setting, established client sessions will be maintained after the client's logon hours expire. If you enable this policy setting you should also enable Network security: Force logoff when logon hours expire. <br /> If your organization configures logon hours for users, this policy setting is necessary to ensure they are effective.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network server: Disconnect clients when logon hours expire")
	if (LocalPolicies.SMBServerNameHardeningLevel() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Microsoft network server \ Microsoft network server: Server SPN target name validation level")
		a.append("(L1) Ensure 'Microsoft network server: Server SPN target name validation level' is set to 'Accept if provided by client' or higher")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the level of validation a computer with shared folders or printers (the server) performs on the service principal name (SPN) that is provided by the client computer when it establishes a session using the server message block (SMB) protocol. <br /> The server message block (SMB) protocol provides the basis for file and print sharing and other networking operations, such as remote Windows administration. The SMB protocol supports validating the SMB server service principal name (SPN) within the authentication blob provided by a SMB client to prevent a class of attacks against SMB servers referred to as SMB relay attacks. This setting will affect both SMB1 and SMB2. <br /> This security setting determines the level of validation a SMB server performs on the service principal name (SPN) provided by the SMB client when trying to establish a session to an SMB server.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Accept if provided by client (configuring to Required from client also conforms with the benchmark): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Microsoft network server: Server SPN target name validation level")
	if (LocalPolicies.LSAAnonymousNameLookup() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Allow anonymous SID/Name translation")
		a.append("(L1) Ensure 'Network access: Allow anonymous SID/Name translation' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether an anonymous user can request security identifier (SID) attributes for another user, or use a SID to obtain its corresponding user name. Disable this policy setting to prevent unauthenticated users from obtaining user names that are associated with their respective SIDs.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Allow anonymous SID/Name translation")
	if (LocalPolicies.RestrictAnonymousSAM() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Do not allow anonymous enumeration of SAM accounts")
		a.append("(L1) Ensure 'Network access: Do not allow anonymous enumeration of SAM accounts' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the ability of anonymous users to enumerate the accounts in the Security Accounts Manager (SAM). If you enable this policy setting, users with anonymous connections cannot enumerate domain account user names on the workstations in your environment. This policy setting also allows additional restrictions on anonymous connections.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Do not allow anonymous enumeration of SAM accounts")
	if (LocalPolicies.RestrictAnonymous() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Do not allow anonymous enumeration of SAM accounts and shares")
		a.append("(L1) Ensure 'Network access: Do not allow anonymous enumeration of SAM accounts and shares' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the ability of anonymous users to enumerate SAM accounts as well as shares. If you enable this policy setting, anonymous users will not be able to enumerate domain account user names and network share names on the workstations in your environment. <br /> The Network access: Do not allow anonymous enumeration of SAM accounts and shares setting is configured to Enabled for the two environments that are discussed in this guide.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Do not allow anonymous enumeration of SAM accounts and shares")
	if (LocalPolicies.disabledomaincreds() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Do not allow storage of passwords and credentials for network authentication")
		a.append("(L1) Ensure 'Network access: Do not allow storage of passwords and credentials for network authentication' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the Stored User Names and Passwords feature may save passwords or credentials for later use when it gains domain authentication. If you enable this policy setting, the Stored User Names and Passwords feature of Windows does not store passwords and credentials.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Do not allow storage of passwords and credentials for network authentication")
	if (LocalPolicies.EveryoneIncludesAnonymous() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Let Everyone permissions apply to anonymous users")
		a.append("(L1) Ensure 'Network access: Let Everyone permissions apply to anonymous users' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines what additional permissions are assigned for anonymous connections to the computer. If you enable this policy setting, anonymous Windows users are allowed to perform certain activities, such as enumerate the names of domain accounts and network shares. An unauthorized user could anonymously list account names and shared resources and use the information to guess passwords or perform social engineering attacks.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Let Everyone permissions apply to anonymous users")
	if (LocalPolicies.NullSessionPipes() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Named Pipes that can be accessed anonymously")
		a.append("(L1) Ensure 'Network access: Named Pipes that can be accessed anonymously' is set to 'None'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which communication sessions, or pipes, will have attributes and permissions that allow anonymous access.")
		d.append("To establish the recommended configuration via GP, set the following UI path to <blank> (i.e. None): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Named Pipes that can be accessed anonymously")
	if (LocalPolicies.AllowedExactPaths() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Remotely accessible registry paths")
		a.append("(L1) Ensure 'Network access: Remotely accessible registry paths'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting determines which registry paths will be accessible after referencing the WinReg key to determine access permissions to the paths. <br /> Note: This setting does not exist in Windows XP. There was a setting with that name in Windows XP, but it is called "Network access: Remotely accessible registry paths and sub-paths" in Windows Server 2003, Windows Vista, and Windows Server 2008. <br /> Note: When you configure this setting you specify a list of one or more objects. The delimiter used when entering the list is a line feed or carriage return, that is, type the first object on the list, press the Enter button, type the next object, press Enter again, etc. The setting value is stored as a comma-delimited list in group policy security templates. It is also rendered as a comma-delimited list in Group Policy Editor's display pane and the Resultant Set of Policy console. It is recorded in the registry as a line-feed delimited list in a REG_MULTI_SZ value.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to: <br /> System\CurrentControlSet\Control\ProductOptions <br /> System\CurrentControlSet\Control\Server Applications <br /> SOFTWARE\Microsoft\Windows NT\CurrentVersion <br /> Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Remotely accessible registry paths")
	if (LocalPolicies.AllowedPaths() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Remotely accessible registry paths and sub-paths")
		a.append("(L1) Ensure 'Network access: Remotely accessible registry paths and sub-paths'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting determines which registry paths and sub-paths will be accessible when an application or process references the WinReg key to determine access permissions. <br /> Note: In Windows XP this setting is called "Network access: Remotely accessible registry paths," the setting with that same name in Windows Vista, Windows Server 2008, and Windows Server 2003 does not exist in Windows XP. <br /> Note #2: When you configure this setting you specify a list of one or more objects. The delimiter used when entering the list is a line feed or carriage return, that is, type the first object on the list, press the Enter button, type the next object, press Enter again, etc. The setting value is stored as a comma-delimited list in group policy security templates. It is also rendered as a comma-delimited list in Group Policy Editor's display pane and the Resultant Set of Policy console. It is recorded in the registry as a line-feed delimited list in a REG_MULTI_SZ value.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to: <br /> System\CurrentControlSet\Control\Print\Printers <br /> System\CurrentControlSet\Services\Eventlog <br /> SOFTWARE\Microsoft\OLAP Server <br /> SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print <br /> SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows <br /> System\CurrentControlSet\Control\ContentIndex <br /> System\CurrentControlSet\Control\Terminal Server <br /> System\CurrentControlSet\Control\Terminal Server\UserConfig <br /> System\CurrentControlSet\Control\Terminal Server\DefaultUserConfiguration <br /> SOFTWARE\Microsoft\Windows NT\CurrentVersion\Perflib <br /> System\CurrentControlSet\Services\SysmonLog <br /> Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Remotely accessible registry paths and sub-paths")
	if (LocalPolicies.restrictnullsessaccess() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Restrict anonymous access to Named Pipes and Shares")
		a.append("(L1) Ensure 'Network access: Restrict anonymous access to Named Pipes and Shares' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("When enabled, this policy setting restricts anonymous access to only those shares and pipes that are named in the Network access: Named pipes that can be accessed anonymously and Network access: Shares that can be accessed anonymously settings. This policy setting controls null session access to shares on your computers by adding RestrictNullSessAccess with the value 1 in the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\LanManServer\Parameters registry key. This registry value toggles null session shares on or off to control whether the server service restricts unauthenticated clients' access to named resources.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Restrict anonymous access to Named Pipes and Shares")
	if (LocalPolicies.NullSessionShares() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Shares that can be accessed anonymously")
		a.append("(L1) Ensure 'Network access: Shares that can be accessed anonymously' is set to 'None'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which network shares can be accessed by anonymous users. The default configuration for this policy setting has little effect because all users have to be authenticated before they can access shared resources on the server.")
		d.append("To establish the recommended configuration via GP, set the following UI path to <blank> (i.e. None): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Shares that can be accessed anonymously")
	if (LocalPolicies.ForceGuest() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network access \ Network access: Sharing and security model for local accounts ")
		a.append("(L1) Ensure 'Network access: Sharing and security model for local accounts' is set to 'Classic - local users authenticate as themselves'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines how network logons that use local accounts are authenticated. The Classic option allows precise control over access to resources, including the ability to assign different types of access to different users for the same resource. The Guest only option allows you to treat all users equally. In this context, all users authenticate as Guest only to receive the same access level to a given resource.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Classic - local users authenticate as themselves: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network access: Sharing and security model for local accounts")
	if (LocalPolicies.UseMachineId() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: Allow Local System to use computer identity for NTLM")
		a.append("(L1) Ensure 'Network security: Allow Local System to use computer identity for NTLM' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("When enabled, this policy setting causes Local System services that use Negotiate to use the computer identity when NTLM authentication is selected by the negotiation. This policy is supported on at least Windows 7 or Windows Server 2008 R2.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: Allow Local System to use computer identity for NTLM")
	if (LocalPolicies.allownullsessionfallback() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: Allow LocalSystem NULL session fallback")
		a.append("(L1) Ensure 'Network security: Allow LocalSystem NULL session fallback' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Allow NTLM to fall back to NULL session when used with LocalSystem. The default is TRUE up to Windows Vista / Server 2008 and FALSE from Windows 7 / Server 2008 R2 and beyond.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: Allow LocalSystem NULL session fallback")
	if (LocalPolicies.AllowOnlineID() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network Security: Allow PKU2U authentication requests to this computer to use online identities")
		a.append("(L1) Ensure 'Network Security: Allow PKU2U authentication requests to this computer to use online identities' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines if online identities are able to authenticate to this computer. <br /> Windows 7 and Windows Server 2008 R2 introduced an extension to the Negotiate authentication package, Spnego.dll. In previous versions of Windows, Negotiate decides whether to use Kerberos or NTLM for authentication. The extension SSP for Negotiate, Negoexts, which is treated as an authentication protocol by Windows, supports Microsoft SSPs including PKU2U. <br /> When computers are configured to accept authentication requests by using online IDs, Negoexts.dll calls the PKU2U SSP on the computer that is used to log on. The PKU2U SSP obtains a local certificate and exchanges the policy between the peer computers. When validated on the peer computer, the certificate within the metadata is sent to the logon peer for validation and associates the user's certificate to a security token and the logon process completes.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network Security: Allow PKU2U authentication requests to this computer to use online identities")
	if (LocalPolicies.SupportedEncryptionTypes() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network Security: Configure encryption types allowed for Kerberos")
		a.append("(L1) Ensure 'Network Security: Configure encryption types allowed for Kerberos' is set to 'RC4_HMAC_MD5, AES128_HMAC_SHA1, AES256_HMAC_SHA1, Future encryption types'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to set the encryption types that Kerberos is allowed to use. This policy is supported on at least Windows 7 or Windows Server 2008 R2.")
		d.append("To establish the recommended configuration via GP, set the following UI path to RC4_HMAC_MD5, AES128_HMAC_SHA1, AES256_HMAC_SHA1, Future encryption types: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network Security: Configure encryption types allowed for Kerberos")
	if (LocalPolicies.NoLMHash() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: Do not store LAN Manager hash value on next password change")
		a.append("(L1) Ensure 'Network security: Do not store LAN Manager hash value on next password change' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether the LAN Manager (LM) hash value for the new password is stored when the password is changed. The LM hash is relatively weak and prone to attack compared to the cryptographically stronger Microsoft Windows NT hash. <br /> Note: Older operating systems and some third-party applications may fail when this policy setting is enabled. Also, note that the password will need to be changed on all accounts after you enable this setting to gain the proper benefit.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: Do not store LAN Manager hash value on next password change")
	if (LocalPolicies.enableforcedlogoff1() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: Force logoff when logon hours expire")
		a.append("(L1) Ensure 'Network security: Force logoff when logon hours expire' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting, which determines whether to disconnect users who are connected to the local computer outside their user account's valid logon hours, affects the SMB component. If you enable this policy setting, client sessions with the SMB server will be disconnected when the client's logon hours expire. If you disable this policy setting, established client sessions will be maintained after the client's logon hours expire.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled. Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: Force logoff when logon hours expire")
	if (LocalPolicies.LmCompatibilityLevel() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: LAN Manager authentication level")
		a.append("(L1) Ensure 'Network security: LAN Manager authentication level' is set to 'Send NTLMv2 response only. Refuse LM & NTLM'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("LAN Manager (LM) is a family of early Microsoft client/server software that allows users to link personal computers together on a single network. Network capabilities include transparent file and print sharing, user security features, and network administration tools. In Active Directory domains, the Kerberos protocol is the default authentication protocol. However, if the Kerberos protocol is not negotiated for some reason, Active Directory will use LM, NTLM, or NTLMv2. LAN Manager authentication includes the LM, NTLM, and NTLM version 2 (NTLMv2) variants, and is the protocol that is used to authenticate all Windows clients when they perform the following operations: <br /> &#9679 Join a domain <br /> &#9679 Authenticate between Active Directory forests <br /> &#9679 Authenticate to down-level domains <br /> &#9679 Authenticate to computers that do not run Windows 2000, Windows Server 2003, or Windows XP) <br /> &#9679 Authenticate to computers that are not in the domain <br /> The possible values for the Network security: LAN Manager authentication level setting are: <br /> &#9679 Send LM & NTLM responses <br /> &#9679 Send LM & NTLM - use NTLMv2 session security if negotiated <br /> &#9679 Send NTLM responses only <br /> &#9679 Send NTLMv2 responses only <br /> &#9679 Send NTLMv2 responses only\\refuse LM <br /> &#9679 Send NTLMv2 responses only\\refuse LM & NTLM <br /> &#9679 Not Defined <br /> The Network security: LAN Manager authentication level setting determines which challenge/response authentication protocol is used for network logons. This choice affects the authentication protocol level that clients use, the session security level that the computers negotiate, and the authentication level that servers accept as follows: <br /> &#9679 Send LM & NTLM responses. Clients use LM and NTLM authentication and never use NTLMv2 session security. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Send LM & NTLM - use NTLMv2 session security if negotiated. Clients use LM and NTLM authentication and use NTLMv2 session security if the server supports it. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Send NTLM response only. Clients use NTLM authentication only and use NTLMv2 session security if the server supports it. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Send NTLMv2 response only. Clients use NTLMv2 authentication only and use NTLMv2 session security if the server supports it. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Send NTLMv2 response only\refuse LM. Clients use NTLMv2 authentication only and use NTLMv2 session security if the server supports it. Domain controllers refuse LM (accept only NTLM and NTLMv2 authentication). <br /> &#9679 Send NTLMv2 response only\refuse LM & NTLM. Clients use NTLMv2 authentication only and use NTLMv2 session security if the server supports it. Domain controllers refuse LM and NTLM (accept only NTLMv2 authentication). <br /> &#9679 These settings correspond to the levels discussed in other Microsoft documents as follows: <br /> &#9679 Level 0 - Send LM and NTLM response; never use NTLMv2 session security. Clients use LM and NTLM authentication, and never use NTLMv2 session security. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Level 1 - Use NTLMv2 session security if negotiated. Clients use LM and NTLM authentication, and use NTLMv2 session security if the server supports it. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Level 2 - Send NTLM response only. Clients use only NTLM authentication, and use NTLMv2 session security if the server supports it. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Level 3 - Send NTLMv2 response only. Clients use NTLMv2 authentication, and use NTLMv2 session security if the server supports it. Domain controllers accept LM, NTLM, and NTLMv2 authentication. <br /> &#9679 Level 4 - Domain controllers refuse LM responses. Clients use NTLM authentication, and use NTLMv2 session security if the server supports it. Domain controllers refuse LM authentication, that is, they accept NTLM and NTLMv2. <br /> &#9679 Level 5 - Domain controllers refuse LM and NTLM responses (accept only NTLMv2). Clients use NTLMv2 authentication, use and NTLMv2 session security if the server supports it. Domain controllers refuse NTLM and LM authentication (they accept only NTLMv2).")
		d.append("To establish the recommended configuration via GP, set the following UI path to: Send NTLMv2 response only. Refuse LM & NTLM: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: LAN Manager authentication level")
	if (LocalPolicies.LDAPClientIntegrity() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: LDAP client signing requirements")
		a.append("(L1) Ensure 'Network security: LDAP client signing requirements' is set to 'Negotiate signing' or higher")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the level of data signing that is requested on behalf of clients that issue LDAP BIND requests, as follows: <br /> - None. The LDAP BIND request is issued with the caller-specified options. <br /> - Negotiate signing. If Transport Layer Security/Secure Sockets Layer (TLS/SSL) has not been started, the LDAP BIND request is initiated with the LDAP data signing option set in addition to the caller-specified options. If TLS/SSL has been started, the LDAP BIND request is initiated with the caller-specified options. <br /> - Require signature. This level is the same as Negotiate signing. However, if the LDAP server's intermediate saslBindInProgress response does not indicate that LDAP traffic signing is required, the caller is told that the LDAP BIND command request failed. <br /> Note: This policy setting does not have any impact on ldap_simple_bind or ldap_simple_bind_s. No Microsoft LDAP clients that are included with Windows XP Professional use ldap_simple_bind or ldap_simple_bind_s to communicate with a domain controller. <br /> The possible values for the Network security: LDAP client signing requirements setting are: <br /> - None <br /> - Negotiate signing <br /> - Require signature <br /> - Not Defined ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Negotiate signing (configuring to Require signing also conforms with the benchmark): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: LDAP client signing requirements ")
	if (LocalPolicies.NTLMMinClientSec() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: Minimum session security for NTLM SSP based (including secure RPC) clients ")
		a.append("(L1) Ensure 'Network security: Minimum session security for NTLM SSP based (including secure RPC) clients' is set to 'Require NTLMv2 session security, Require 128-bit encryption' ")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which behaviors are allowed for applications using the NTLM Security Support Provider (SSP). The SSP Interface (SSPI) is used by applications that need authentication services. The setting does not modify how the authentication sequence works but instead require certain behaviors in applications that use the SSPI. <br /> The possible values for the Network security: Minimum session security for NTLM SSP based (including secure RPC) clients setting are: <br /> - Require message confidentiality. This option is only available in Windows XP and Windows Server 2003, the connection will fail if encryption is not negotiated. Encryption converts data into a form that is not readable until decrypted. <br /> - Require message integrity. This option is only available in Windows XP and Windows Server 2003, the connection will fail if message integrity is not negotiated. The integrity of a message can be assessed through message signing. Message signing proves that the message has not been tampered with; it attaches a cryptographic signature that identifies the sender and is a numeric representation of the contents of the message. <br /> - Require 128-bit encryption. The connection will fail if strong encryption (128-bit) is not negotiated. <br /> - Require NTLMv2 session security. The connection will fail if the NTLMv2 protocol is not negotiated. <br /> - Not Defined. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Require NTLMv2 session security, Require 128-bit encryption: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: Minimum session security for NTLM SSP based (including secure RPC) clients")
	if (LocalPolicies.NTLMMinServerSec() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ Network security \ Network security: Minimum session security for NTLM SSP based (including secure RPC) servers")
		a.append("(L1) Ensure 'Network security: Minimum session security for NTLM SSP based (including secure RPC) servers' is set to 'Require NTLMv2 session security, Require 128-bit encryption'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines which behaviors are allowed for applications using the NTLM Security Support Provider (SSP). The SSP Interface (SSPI) is used by applications that need authentication services. The setting does not modify how the authentication sequence works but instead require certain behaviors in applications that use the SSPI. <br /> The possible values for the Network security: Minimum session security for NTLM SSP based (including secure RPC) servers setting are: <br /> - Require message confidentiality. This option is only available in Windows XP and Windows Server 2003, the connection will fail if encryption is not negotiated. Encryption converts data into a form that is not readable until decrypted. <br /> - Require message integrity. This option is only available in Windows XP and Windows Server 2003, the connection will fail if message integrity is not negotiated. The integrity of a message can be assessed through message signing. Message signing proves that the message has not been tampered with; it attaches a cryptographic signature that identifies the sender and is a numeric representation of the contents of the message. <br > - Require 128-bit encryption. The connection will fail if strong encryption (128-bit) is not negotiated. <br /> - Require NTLMv2 session security. The connection will fail if the NTLMv2 protocol is not negotiated. <br /> - Not Defined. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Require NTLMv2 session security, Require 128-bit encryption: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\Network security: Minimum session security for NTLM SSP based (including secure RPC) servers")
	if (LocalPolicies.ForceKeyProtection() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ System cryptography \ System cryptography: Force strong key protection for user keys stored on the computer")
		a.append("(L2) Ensure 'System cryptography: Force strong key protection for user keys stored on the computer' is set to 'User is prompted when the key is first used' or higher")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting determines whether users' private keys (such as their S-MIME keys) require a password to be used. If you configure this policy setting so that users must provide a password-distinct from their domain password-every time that they use a key, then it will be more difficult for an attacker to access locally stored keys, even an attacker who discovers logon passwords.")
		d.append("To establish the recommended configuration via GP, set the following UI path to User is prompted when the key is first used (configuring to User must enter a password each time they use a key also conforms with the benchmark): Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\System cryptography: Force strong key protection for user keys stored on the computer")
	if (LocalPolicies.ObCaseInsensitive() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ System objects \ System objects: Require case insensitivity for non-Windows subsystems ")
		a.append("(L1) Ensure 'System objects: Require case insensitivity for non-Windows subsystems' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether case insensitivity is enforced for all subsystems. The Microsoft Win32' subsystem is case insensitive. However, the kernel supports case sensitivity for other subsystems, such as the Portable Operating System Interface for UNIX (POSIX). Because Windows is case insensitive (but the POSIX subsystem will support case sensitivity), failure to enforce this policy setting makes it possible for a user of the POSIX subsystem to create a file with the same name as another file by using mixed case to label it. Such a situation can block access to these files by another user who uses typical Win32 tools, because only one of the files will be available.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\System objects: Require case insensitivity for non-Windows subsystems")
	if (LocalPolicies.ProtectionMode() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ System objects \ System objects: Strengthen default permissions of internal system objects (e.g. Symbolic Links)")
		a.append("(L1) Ensure 'System objects: Strengthen default permissions of internal system objects (e.g. Symbolic Links)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the strength of the default discretionary access control list (DACL) for objects. The setting helps secure objects that can be located and shared among processes and its default configuration strengthens the DACL, because it allows users who are not administrators to read shared objects but does not allow them to modify any that they did not create.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\System objects: Strengthen default permissions of internal system objects (e.g. Symbolic Links)")
	if (LocalPolicies.Optional() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ System settings \ System settings: Optional subsystems")
		a.append("(L1) Ensure 'System settings: Optional subsystems' is set to 'Defined: (blank)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This security setting determines which subsystems can optionally be started up to support your applications.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Defined: (blank): Computer Configuration\Security Settings\Local Policies\Security Options\System settings: Optional subsystems")
	if (LocalPolicies.FilterAdministratorToken() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Admin Approval Mode for the Built-in Administrator account")
		a.append("(L1) Ensure 'User Account Control: Admin Approval Mode for the Built-in Administrator account' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the behavior of Admin Approval Mode for the built-in Administrator account. <br /> <br /> The options are: <br /> - Enabled: The built-in Administrator account uses Admin Approval Mode. By default, any operation that requires elevation of privilege will prompt the user to approve the operation. <br /> - Disabled: (Default) The built-in Administrator account runs all applications with full administrative privilege.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Admin Approval Mode for the Built-in Administrator account")
	if (LocalPolicies.EnableUIADesktopToggle() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Allow UIAccess applications to prompt for elevation without using the secure desktop")
		a.append("(L1) Ensure 'User Account Control: Allow UIAccess applications to prompt for elevation without using the secure desktop' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting controls whether User Interface Accessibility (UIAccess or UIA) programs can automatically disable the secure desktop for elevation prompts used by a standard user. <br /> - Enabled: UIA programs, including Windows Remote Assistance, automatically disable the secure desktop for elevation prompts. If you do not disable the "User Account Control: Switch to the secure desktop when prompting for elevation" policy setting, the prompts appear on the interactive user's desktop instead of the secure desktop. <br />  - Disabled: (Default) The secure desktop can be disabled only by the user of the interactive desktop or by disabling the "User Account Control: Switch to the secure desktop when prompting for elevation" policy setting.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Allow UIAccess applications to prompt for elevation without using the secure desktop")
	if (LocalPolicies.ConsentPromptBehaviorAdmin() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode")
		a.append("(L1) Ensure 'User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode' is set to 'Prompt for consent on the secure desktop'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the behavior of the elevation prompt for administrators. <br /> <br /> The options are: <br /> - Elevate without prompting: Allows privileged accounts to perform an operation that requires elevation without requiring consent or credentials. Note: Use this option only in the most constrained environments. <br /> - Prompt for credentials on the secure desktop: When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a privileged user name and password. If the user enters valid credentials, the operation continues with the user's highest available privilege. <br /> - Prompt for consent on the secure desktop: When an operation requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny. If the user selects Permit, the operation continues with the user's highest available privilege. <br /> - Prompt for credentials: When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password. If the user enters valid credentials, the operation continues with the applicable privilege. <br /> - Prompt for consent: When an operation requires elevation of privilege, the user is prompted to select either Permit or Deny. If the user selects Permit, the operation continues with the user's highest available privilege. <br /> - Prompt for consent for non-Windows binaries: (Default) When an operation for a non-Microsoft application requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny. If the user selects Permit, the operation continues with the user's highest available privilege. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Prompt for consent on the secure desktop: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode")
	if (LocalPolicies.ConsentPromptBehaviorUser() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Behavior of the elevation prompt for standard users")
		a.append("(L1) Ensure 'User Account Control: Behavior of the elevation prompt for standard users' is set to 'Automatically deny elevation requests'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the behavior of the elevation prompt for standard users. The options are: <br /> &#9679 Prompt for credentials: When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password. If the user enters valid credentials, the operation continues with the applicable privilege. <br /> &#9679 Automatically deny elevation requests: When an operation requires elevation of privilege, a configurable access denied error message is displayed. An enterprise that is running desktops as standard user may choose this setting to reduce help desk calls. <br /> &#9679 Prompt for credentials on the secure desktop: (Default) When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a different user name and password. If the user enters valid credentials, the operation continues with the applicable privilege. Note that this option was introduced in Windows 7 and it is not applicable to computers running Windows Vista or Windows Server 2008.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Automatically deny elevation requests: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Behavior of the elevation prompt for standard users")
	if (LocalPolicies.EnableInstallerDetection() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Detect application installations and prompt for elevation")
		a.append("(L1) Ensure 'User Account Control: Detect application installations and prompt for elevation' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the behavior of application installation detection for the computer. <br /> <br /> The options are: <br /> - Enabled: (Default for home) When an application installation package is detected that requires elevation of privilege, the user is prompted to enter an administrative user name and password. If the user enters valid credentials, the operation continues with the applicable privilege. <br /> - Disabled: (Default for enterprise) Application installation packages are not detected and prompted for elevation. Enterprises that are running standard user desktops and use delegated installation technologies such as Group Policy Software Installation or Systems Management Server (SMS) should disable this policy setting. In this case, installer detection is unnecessary.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Detect application installations and prompt for elevation")
	if (LocalPolicies.EnableSecureUIAPaths() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Only elevate UIAccess applications that are installed in secure locations")
		a.append("(L1) Ensure 'User Account Control: Only elevate UIAccess applications that are installed in secure locations' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls whether applications that request to run with a User Interface Accessibility (UIAccess) integrity level must reside in a secure location in the file system. Secure locations are limited to the following: <br /> - ...\Program Files\, including subfolders <br /> - ...\Windows\system32\ <br /> - ...\Program Files (x86)\, including subfolders for 64-bit versions of Windows <br /> Note: Windows enforces a public key infrastructure (PKI) signature check on any interactive application that requests to run with a UIAccess integrity level regardless of the state of this security setting. <br /> <br /> The options are: <br /> - Enabled: (Default) If an application resides in a secure location in the file system, it runs only with UIAccess integrity. <br /> - Disabled: An application runs with UIAccess integrity even if it does not reside in a secure location in the file system. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Only elevate UIAccess applications that are installed in secure locations")
	if (LocalPolicies.EnableLUA() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Run all administrators in Admin Approval Mode")
		a.append("(L1) Ensure 'User Account Control: Run all administrators in Admin Approval Mode' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls the behavior of all User Account Control (UAC) policy settings for the computer. If you change this policy setting, you must restart your computer. <br /> <br /> The options are: <br /> - Enabled: (Default) Admin Approval Mode is enabled. This policy must be enabled and related UAC policy settings must also be set appropriately to allow the built-in Administrator account and all other users who are members of the Administrators group to run in Admin Approval Mode. <br /> - Disabled: Admin Approval Mode and all related UAC policy settings are disabled. Note: If this policy setting is disabled, the Security Center notifies you that the overall security of the operating system has been reduced. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Run all administrators in Admin Approval Mode")
	if (LocalPolicies.PromptOnSecureDesktop() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Switch to the secure desktop when prompting for elevation")
		a.append("(L1) Ensure 'User Account Control: Switch to the secure desktop when prompting for elevation' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls whether the elevation request prompt is displayed on the interactive user's desktop or the secure desktop. <br /> The options are: <br /> - Enabled: (Default) All elevation requests go to the secure desktop regardless of prompt behavior policy settings for administrators and standard users. <br /> - Disabled: All elevation requests go to the interactive user's desktop. Prompt behavior policy settings for administrators and standard users are used.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Switch to the secure desktop when prompting for elevation")
	if (LocalPolicies.EnableVirtualization() == 'WARNING') ==1 :  
		temp.append("Local Policies \ Security Options \ User Account Control \ User Account Control: Virtualize file and registry write failures to per-user locations")
		a.append("(L1) Ensure 'User Account Control: Virtualize file and registry write failures to per-user locations' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls whether application write failures are redirected to defined registry and file system locations. This policy setting mitigates applications that run as administrator and write run-time application data to %ProgramFiles%, %Windir%, %Windir%\system32, or HKEY_LOCAL_MACHINE\Software. <br /> The options are: <br /> - Enabled: (Default) Application write failures are redirected at run time to defined user locations for both the file system and registry. <br /> - Disabled: Applications that write data to protected locations fail.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Windows Settings\Security Settings\Local Policies\Security Options\User Account Control: Virtualize file and registry write failures to per-user locations")
	if (AdministrativeTemplatesComputer.NCStdDomainUserSetLocation() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Network Connections \ Windows Firewall \ Require domain users to elevate when setting a network's location")
		a.append("(L1) Ensure 'Require domain users to elevate when setting a network's location' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines whether to require domain users to elevate when setting a network's location.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Network\Network Connections\Require domain users to elevate when setting a network's location")
	if (AdministrativeTemplatesComputer.SafeDllSearchMode() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (SafeDllSearchMode) Enable Safe DLL search mode (recommended)")
		a.append("(L1) Ensure 'MSS: (SafeDllSearchMode) Enable Safe DLL search mode (recommended)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("The DLL search order can be configured to search for DLLs that are requested by running processes in one of two ways: <br /> &#9679 Search folders specified in the system path first, and then search the current working folder. <br /> &#9679 Search current working folder first, and then search the folders specified in the system path. <br /> When enabled, the registry value is set to 1. With a setting of 1, the system first searches the folders that are specified in the system path and then searches the current working folder. When disabled the registry value is set to 0 and the system first searches the current working folder and then searches the folders that are specified in the system path.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (SafeDllSearchMode) Enable Safe DLL search mode (recommended) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.AllowBasic() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Management (WinRM) \ WinRM Client \ Allow Basic authentication")
		a.append("(L1) Ensure 'Allow Basic authentication' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the Windows Remote Management (WinRM) client uses Basic authentication. <br /> If you enable this policy setting, the WinRM client will use Basic authentication. If WinRM is configured to use HTTP transport, then the user name and password are sent over the network as clear text. <br /> If you disable or do not configure this policy setting, then the WinRM client will not use Basic authentication.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Remote Management (WinRM)\WinRM Client\Allow Basic authentication")
	if (AdministrativeTemplatesComputer.NtpServer() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Troubleshooting and Diagnostics \ Windows Time Service \ Time Providers \ Enable Windows NTP Server")
		a.append("(L2) Ensure 'Enable Windows NTP Server' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to specify whether the Windows NTP Server is enabled.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Windows Time Service\Time Providers\Enable Windows NTP Server")
	if (AdministrativeTemplatesComputer.AllowIndexingEncryptedStoresOrItems() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Search \ OCR \ Allow indexing of encrypted files")
		a.append("(L1) Ensure 'Allow indexing of encrypted files' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows encrypted items to be indexed. If you enable this policy setting, indexing will attempt to decrypt and index the content (access restrictions will still apply). If you disable this policy setting, the search service components (including non-Microsoft components) are expected not to index encrypted items or encrypted stores. This policy setting is not configured by default. If you do not configure this policy setting, the local setting, configured through Control Panel, will be used. By default, the Control Panel setting is set to not index encrypted content. When this setting is enabled or disabled, the index is rebuilt completely. Full volume encryption (such as BitLocker Drive Encryption or a non-Microsoft solution) must be used for the location of the index to maintain security for encrypted files.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Search\Allow indexing of encrypted files <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (Search.admx/adml) is required - it is included with the Microsoft Windows Vista, 2008, 7/2008R2, 8/2012, 8.1/2012R2 and Windows 10 Administrative Templates.")
	if (AdministrativeTemplatesComputer.ExitOnMSICW() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Internet Connection Wizard if URL connection is referring to Microsoft.com")
		a.append("(L2) Ensure 'Turn off Internet Connection Wizard if URL connection is referring to Microsoft.com' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether the Internet Connection Wizard can connect to Microsoft to download a list of Internet Service Providers (ISPs).")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Internet Connection Wizard if URL connection is referring to Microsoft.com")
	if (AdministrativeTemplatesComputer.Nonamereleaseondemand() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (NoNameReleaseOnDemand) Allow the computer to ignore NetBIOS name release requests except from WINS servers")
		a.append("(L1) Ensure 'MSS: (NoNameReleaseOnDemand) Allow the computer to ignore NetBIOS name release requests except from WINS servers' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("NetBIOS over TCP/IP is a network protocol that among other things provides a way to easily resolve NetBIOS names that are registered on Windows-based systems to the IP addresses that are configured on those systems. This setting determines whether the computer releases its NetBIOS name when it receives a name-release request.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (NoNameReleaseOnDemand) Allow the computer to ignore NetBIOS name release requests except from WINS servers <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.NoBackgroundPolicy() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Group Policy \ Configure registry policy processing: Do not apply during periodic background processing")
		a.append("(L1) Ensure 'Configure registry policy processing: Do not apply during periodic background processing' is set to 'Enabled: FALSE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''The "Do not apply during periodic background processing" option prevents the system from updating affected policies in the background while the computer is in use. When background updates are disabled, policy changes will not take effect until the next user logon or system restart.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, then set the Do not apply during periodic background processing option to FALSE (unchecked): Computer Configuration\Policies\Administrative Templates\System\Group Policy\Configure registry policy processing")
	if (AdministrativeTemplatesComputer.fAllowUnsolicited() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Remote Assistance \ Configure Offer Remote Assistance")
		a.append("(L1) Ensure 'Configure Offer Remote Assistance' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting allows you to turn on or turn off Offer (Unsolicited) Remote Assistance on this computer. <br /> If you enable this policy setting, users on this computer can get help from their corporate technical support staff using Offer (Unsolicited) Remote Assistance. <br /> If you disable this policy setting, users on this computer cannot get help from their corporate technical support staff using Offer (Unsolicited) Remote Assistance. <br /> If you do not configure this policy setting, users on this computer cannot get help from their corporate technical support staff using Offer (Unsolicited) Remote Assistance. <br /> If you enable this policy setting, you have two ways to allow helpers to provide Remote Assistance: "Allow helpers to only view the computer" or "Allow helpers to remotely control the computer." When you configure this policy setting, you also specify the list of users or user groups that are allowed to offer remote assistance. <br /> To configure the list of helpers, click "Show." In the window that opens, you can enter the names of the helpers. Add each user or group one by one. When you enter the name of the helper user or user groups, use the following format: <br /> <Domain Name>\<User Name> or <br /> <Domain Name>\<Group Name> <br /> If you enable this policy setting, you should also enable firewall exceptions to allow Remote Assistance communications. The firewall exceptions required for Offer (Unsolicited) Remote Assistance depend on the version of Windows you are running: <br /> Windows Vista and later: <br /> Enable the Remote Assistance exception for the domain profile. The exception must contain: <br /> Port 135:TCP <br /> %WINDIR%\System32\msra.exe <br /> %WINDIR%\System32\\raserver.exe <br /> Windows XP with Service Pack 2 (SP2) and Windows XP Professional x64 Edition with Service Pack 1 (SP1): <br /> Port 135:TCP <br /> %WINDIR%\PCHealth\HelpCtr\Binaries\Helpsvc.exe <br /> %WINDIR%\PCHealth\HelpCtr\Binaries\Helpctr.exe <br /> %WINDIR%\System32\Sessmgr.exe <br /> For computers running Windows Server 2003 with Service Pack 1 (SP1) <br /> Port 135:TCP <br /> %WINDIR%\PCHealth\HelpCtr\Binaries\Helpsvc.exe <br /> %WINDIR%\PCHealth\HelpCtr\Binaries\Helpctr.exe <br /> Allow Remote Desktop Exception''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Remote Assistance\Configure Offer Remote Assistance")
	if (AdministrativeTemplatesComputer.LocalAccountTokenFilterPolicy() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ SCM: Pass the Hash Mitigations \ Apply UAC restrictions to local accounts on network logons")
		a.append("(L1) Ensure 'Apply UAC restrictions to local accounts on network logons' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This setting controls whether local accounts can be used for remote administration via network logon (e.g., NET USE, connecting to C$, etc.). Local accounts are at high risk for credential theft when the same account and password is configured on multiple systems. Enabling this policy significantly reduces that risk. <br /> Enabled: Applies UAC token-filtering to local accounts on network logons. Membership in powerful group such as Administrators is disabled and powerful privileges are removed from the resulting access token. This configures the LocalAccountTokenFilterPolicy registry value to 0. This is the default behavior for Windows. <br /> Disabled: Allows local accounts to have full administrative rights when authenticating via network logon, by configuring the LocalAccountTokenFilterPolicy registry value to 1. <br /> For more information about local accounts and credential theft, review the "<a href="https://www.microsoft.com/en-us/download/details.aspx?id=36036"> Mitigating Pass-the-Hash (PtH) Attacks and Other Credential Theft Techniques </a> "documents <br /> For more information about LocalAccountTokenFilterPolicy, see Microsoft Knowledge Base article 951016: <a href="https://support.microsoft.com/en-us/kb/951016"> Description of User Account Control and remote restrictions in Windows Vista. </a> ''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\SCM: Pass the Hash Mitigations\Apply UAC restrictions to local accounts on network logons <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (PtH.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.Retention3() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ System \ System: Control Event Log behavior when the log file reaches its maximum size")
		a.append("(L1) Ensure 'System: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting controls Event Log behavior when the log file reaches its maximum size. <br /> If you enable this policy setting and a log file reaches its maximum size, new events are not written to the log and are lost. <br /> If you disable or do not configure this policy setting and a log file reaches its maximum size, new events overwrite old events. <br /> Note: Old events may or may not be retained according to the "Backup log automatically when full"* policy setting.''')
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\System\Control Event Log behavior when the log file reaches its maximum size")
	if (AdministrativeTemplatesComputer.EnableUserControl() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Installer \ Allow user control over installs")
		a.append("(L1) Ensure 'Allow user control over installs' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Permits users to change installation options that typically are available only to system administrators. The security features of Windows Installer prevent users from changing installation options typically reserved for system administrators, such as specifying the directory to which files are installed. If Windows Installer detects that an installation package has permitted the user to change a protected option, it stops the installation and displays a message. These security features operate only when the installation program is running in a privileged security context in which it has access to directories denied to the user.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Installer\Allow user control over installs")
	if (AdministrativeTemplatesComputer.RDVPassphrase() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Configure use of passwords for removable data drives")
		a.append("(BL) Ensure 'Configure use of passwords for removable data drives' is set to 'Disabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to specify whether smart cards can be used to authenticate user access to BitLocker-protected removable data drives on a computer. <br /> If you enable this policy setting smart cards can be used to authenticate user access to the drive. You can require a smart card authentication by selecting the "Require use of smart cards on removable data drives" check box. <br /> Note: These settings are enforced when turning on BitLocker, not when unlocking a drive. BitLocker will allow unlocking a drive with any of the protectors available on the drive. <br /> If you disable this policy setting, users are not allowed to use smart cards to authenticate their access to BitLocker-protected removable data drives. <br /> If you do not configure this policy setting, smart cards are available to authenticate user access to a BitLocker-protected removable data drive.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Configure use of passwords for removable data drives")
	if (AdministrativeTemplatesComputer.NoHeapTerminationOnCorruption() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ File Explorer \ Previous Versions \ Turn off heap termination on corruption")
		a.append("(L1) Ensure 'Turn off heap termination on corruption' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Legacy plug-in applications may continue to function when a File Explorer session has become corrupt. Disabling this feature will prevent this.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\File Explorer\Turn off heap termination on corruption")
	if (AdministrativeTemplatesComputer.TurnonResponder() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Link-Layer Topology Discovery \ urn on Responder (RSPNDR) driver")
		a.append("(L2) Ensure 'Turn on Responder (RSPNDR) driver' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting changes the operational behavior of the Responder network protocol driver. <br /> The Responder allows a computer to participate in Link Layer Topology Discovery requests so that it can be discovered and located on the network. It also allows a computer to participate in Quality-of-Service activities such as bandwidth estimation and network health analysis.")
		d.append("To implement the recommended configuration state, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Network\Link-Layer Topology Discovery\Turn on Responder (RSPNDR) driver")
	if (AdministrativeTemplatesComputer.ScreenSaverGracePeriod() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires (0 recommended)")
		a.append("(L1) Ensure 'MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires (0 recommended)' is set to 'Enabled: 5 or fewer seconds'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Windows includes a grace period between when the screen saver is launched and when the console is actually locked automatically when screen saver locking is enabled.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 5 or fewer seconds: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (ScreenSaverGracePeriod) The time in seconds before the screen saver grace period expires (0 recommended) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.SafeForScripting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Installer \ Prevent Internet Explorer security prompt for Windows Installer scripts")
		a.append("(L2) Ensure 'Prevent Internet Explorer security prompt for Windows Installer scripts' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows Web-based programs to install software on the computer without notifying the user.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Installer\Prevent Internet Explorer security prompt for Windows Installer scripts")
	if (AdministrativeTemplatesComputer.DisablePasswordReveal() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Credential User Interface \ Do not display the password reveal button")
		a.append("(L1) Ensure 'Do not display the password reveal button' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to configure the display of the password reveal button in password entry user experiences.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Credential User Interface\Do not display the password reveal button")
	if (AdministrativeTemplatesComputer.NoPublishingWizard() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off the 'Publish to Web' task for files and folders")
		a.append("(L2) Ensure 'Turn off the 'Publish to Web' task for files and folders' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether the tasks Publish this file to the Web, Publish this folder to the Web, and Publish the selected items to the Web are available from File and Folder Tasks in Windows folders.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off the 'Publish to Web' task for files and folders")
	if (AdministrativeTemplatesComputer.RDVDiscoveryVolumeType() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Allow access to BitLocker-protected removable data drives from earlier versions of Windows")
		a.append("(BL) Ensure 'Allow access to BitLocker-protected removable data drives from earlier versions of Windows' is set to 'Disabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting configures whether or not removable data drives formatted with the FAT file system can be unlocked and viewed on computers running Windows Server 2008, Windows Vista, Windows XP with Service Pack 3 (SP3), or Windows XP with Service Pack 2 (SP2) operating systems. <br /> If this policy setting is enabled or not configured, removable data drives formatted with the FAT file system can be unlocked on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2, and their content can be viewed. These operating systems have read-only access to BitLocker-protected drives. <br /> When this policy setting is enabled, select the "Do not install BitLocker To Go Reader on FAT formatted removable drives" check box to help prevent users from running BitLocker To Go Reader from their removable drives. If BitLocker To Go Reader (bitlockertogo.exe) is present on a drive that does not have an identification field specified, or if the drive has the same identification field as specified in the "Provide unique identifiers for your organization" policy setting, the user will be prompted to update BitLocker and BitLocker To Go Reader will be deleted from the drive. In this situation, for the removable drive to be unlocked on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2, BitLocker To Go Reader must be installed on the computer. If this check box is not selected, BitLocker To Go Reader will be installed on the removable drive to enable users to unlock the drive on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2 that do not have BitLocker To Go Reader installed. <br /> If this policy setting is disabled, removable data drives formatted with the FAT file system that are BitLocker-protected cannot be unlocked on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2. Bitlockertogo.exe will not be installed. <br /> Note: This policy setting does not apply to drives that are formatted with the NTFS file system.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Allow access to BitLocker-protected removable data drives from earlier versions of Windows")
	if (AdministrativeTemplatesComputer.PasswordLength() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ LAPS \ Password Settings: Password Length")
		a.append("(L1) Ensure 'Password Settings: Password Length' is set to 'Enabled: 15 or more'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("In May 2015, Microsoft released the Local Administrator Password Solution (LAPS) tool, which is free and supported software that allows an organization to automatically set randomized and unique local Administrator account passwords on domain-attached workstations and member servers. The passwords are stored in a confidential attribute of the domain computer account and can be retrieved from Active Directory by approved Sysadmins when needed. <br /> The LAPS tool requires a small Active Directory Schema update in order to implement, as well as installation of a Group Policy Client Side Extension (CSE) on targeted computers. Please see the LAPS documentation for details. <br /> LAPS supports Windows Vista or newer workstation OSes, and Server 2003 or newer server OSes. LAPS does not support standalone computers - they must be joined to a domain. <br /> Note: Organizations that utilize 3rd-party commercial software to manage unique & complex local Administrator passwords on domain members may opt to disregard these LAPS recommendations.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, and configure the Password Length option to 15 or more: Computer Configuration\Policies\Administrative Templates\LAPS\Password Settings <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (AdmPwd.admx/adml) is required - it is included with Microsoft Local Administrator Password Solution (LAPS).")
	if (AdministrativeTemplatesComputer.RDVRecovery() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered")
	if (AdministrativeTemplatesComputer.MaxDisconnectionTime() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Session Time Limits \ Set time limit for disconnected sessions")
		a.append("(L2) Ensure 'Set time limit for disconnected sessions' is set to 'Enabled: 1 minute'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to configure a time limit for disconnected Remote Desktop Services sessions.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 1 minute: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Session Time Limits\Set time limit for disconnected sessions")
	if (AdministrativeTemplatesComputer.DisableQueryRemoteServer() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Troubleshooting and Diagnostics \ Microsoft Support Diagnostic Tool \ Microsoft Support Diagnostic Tool: Turn on MSDT interactive communication with support provider")
		a.append("(L2) Ensure 'Microsoft Support Diagnostic Tool: Turn on MSDT interactive communication with support provider' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting configures Microsoft Support Diagnostic Tool (MSDT) interactive communication with the support provider. MSDT gathers diagnostic data for analysis by support professionals.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Troubleshooting and Diagnostics\Microsoft Support Diagnostic Tool\Microsoft Support Diagnostic Tool: Turn on MSDT interactive communication with support provider")
	if (AdministrativeTemplatesComputer.NoWebServices() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Internet download for Web publishing and online ordering wizards")
		a.append("(L2) Ensure 'Turn off Internet download for Web publishing and online ordering wizards' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting controls whether Windows will download a list of providers for the Web publishing and online ordering wizards.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Internet download for Web publishing and online ordering wizards")
	if (AdministrativeTemplatesComputer.ACSettingIndex1() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Power Management \ Sleep Settings \ equire a password when a computer wakes (plugged in)")
		a.append("(L1) Ensure 'Require a password when a computer wakes (plugged in)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Specifies whether or not the user is prompted for a password when the system resumes from sleep.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Power Management\Sleep Settings\Require a password when a computer wakes (plugged in)")
	if (AdministrativeTemplatesComputer.TurnonMapperIO() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Link-Layer Topology Discovery \ Turn on Mapper I/O (LLTDIO) driver")
		a.append("(L2) Ensure 'Turn on Mapper I/O (LLTDIO) driver' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting changes the operational behavior of the Mapper I/O network protocol driver. <br /> LLTDIO allows a computer to discover the topology of a network it's connected to. It also allows a computer to initiate Quality-of-Service requests such as bandwidth estimation and network health analysis.")
		d.append("To implement the recommended configuration state, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Network\Link-Layer Topology Discovery\Turn on Mapper I/O (LLTDIO) driver")
	if (AdministrativeTemplatesComputer.fDisableLPT() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Device and Resource Redirection \ Do not allow LPT port redirection ")
		a.append("(L2) Ensure 'Do not allow LPT port redirection' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether to prevent the redirection of data to client LPT ports during a Remote Desktop Services session.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Device and Resource Redirection\Do not allow LPT port redirection")
	if (AdministrativeTemplatesComputer.MaxSize3() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ System \ System: Specify the maximum log file size (KB)")
		a.append("(L1) Ensure 'System: Specify the maximum log file size (KB)' is set to 'Enabled: 32,768 or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies the maximum size of the log file in kilobytes. If you enable this policy setting, you can configure the maximum log file size to be between 1 megabyte (1,024 kilobytes) and 2 terabytes (2,147,483,647 kilobytes) in kilobyte increments. If you disable or do not configure this policy setting, the maximum size of the log file will be set to the locally configured value. This value can be changed by the local administrator using the Log Properties dialog and it defaults to 20 megabytes.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Enabled: 32,768 or greater: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\System\Specify the maximum log file size (KB)")
	if (AdministrativeTemplatesComputer.MaxSize2() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ Setup \ Setup: Specify the maximum log file size (KB)")
		a.append("(L1) Ensure 'Setup: Specify the maximum log file size (KB)' is set to 'Enabled: 32,768 or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies the maximum size of the log file in kilobytes. If you enable this policy setting, you can configure the maximum log file size to be between 1 megabyte (1,024 kilobytes) and 2 terabytes (2,147,483,647 kilobytes) in kilobyte increments. If you disable or do not configure this policy setting, the maximum size of the log file will be set to the locally configured value. This value can be changed by the local administrator using the Log Properties dialog and it defaults to 20 megabytes.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Enabled: 32,768 or greater: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\Setup\Specify the maximum log file size (KB)")
	if (AdministrativeTemplatesComputer.MaxSize1() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ Security \ Security: Specify the maximum log file size (KB)")
		a.append("(L1) Ensure 'Security: Specify the maximum log file size (KB)' is set to 'Enabled: 196,608 or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies the maximum size of the log file in kilobytes. If you enable this policy setting, you can configure the maximum log file size to be between 1 megabyte (1,024 kilobytes) and 2 terabytes (2,147,483,647 kilobytes) in kilobyte increments. If you disable or do not configure this policy setting, the maximum size of the log file will be set to the locally configured value. This value can be changed by the local administrator using the Log Properties dialog and it defaults to 20 megabytes.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Enabled: 196,608 or greater: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\Security\Specify the maximum log file size (KB)")
	if (AdministrativeTemplatesComputer.SpynetReporting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Defender \ MAPS \ Join Microsoft MAPS")
		a.append("(L2) Ensure 'Join Microsoft MAPS' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to join Microsoft MAPS. Microsoft MAPS is the online community that helps you choose how to respond to potential threats. The community also helps stop the spread of new malicious software infections. You can choose to send basic or additional information about detected software. Additional information helps Microsoft create new definitions and help it to protect your computer. <br /> Possible options are:(0x0) Disabled (default)(0x1) Basic membership(0x2) Advanced membership Basic membership will send basic information to Microsoft about software that has been detected including where the software came from the actions that you apply or that are applied automatically and whether the actions were successful. Advanced membership in addition to basic information will send more information to Microsoft about malicious software spyware and potentially unwanted software including the location of the software file names how the software operates and how it has impacted your computer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Defender\MAPS\Join Microsoft MAPS")
	if (AdministrativeTemplatesComputer.AllowRemoteRPC() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Device Installation \ Allow remote access to the Plug and Play interface")
		a.append("(L1) Ensure 'Allow remote access to the Plug and Play interface' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to allow or deny remote access to the Plug and Play interface.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Device Installation\Allow remote access to the Plug and Play interface")
	if (AdministrativeTemplatesComputer.UseLogonCredential() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ SCM: Pass the Hash Mitigations \ WDigest Authentication")
		a.append("(L1) Ensure 'WDigest Authentication' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''When WDigest authentication is enabled, Lsass.exe retains a copy of the user's plaintext password in memory, where it can be at risk of theft. If this setting is not configured, WDigest authentication is disabled in Windows 8.1 and in Windows Server 2012 R2; it is enabled by default in earlier versions of Windows and Windows Server. <br /> For more information about local accounts and credential theft, review the " <a href="http://www.microsoft.com/en-us/download/details.aspx?id=36036"> Mitigating Pass-the-Hash (PtH) Attacks and Other Credential Theft Techniques </a> " documents. <br /> For more information about UseLogonCredential, see Microsoft Knowledge Base article 2871997: <a href="https://support.microsoft.com/en-us/kb/2871997"> Microsoft Security Advisory Update to improve credentials protection and management May 13, 2014. </a> ''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\SCM: Pass the Hash Mitigations\WDigest Authentication (disabling may require KB2871997) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (PtH.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.FDVAllowUserCert() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Configure use of smart cards on fixed data drives")
		a.append("(BL) Ensure 'Configure use of smart cards on fixed data drives' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to specify whether smart cards can be used to authenticate user access to the BitLocker-protected fixed data drives on a computer. <br /> If you enable this policy setting smart cards can be used to authenticate user access to the drive. You can require a smart card authentication by selecting the "Require use of smart cards on fixed data drives" check box. <br /> Note: These settings are enforced when turning on BitLocker, not when unlocking a drive. BitLocker will allow unlocking a drive with any of the protectors available on the drive. <br /> If you disable this policy setting, users are not allowed to use smart cards to authenticate their access to BitLocker-protected fixed data drives. <br /> If you do not configure this policy setting, smart cards can be used to authenticate user access to a BitLocker-protected drive.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Configure use of smart cards on fixed data drives")
	if (AdministrativeTemplatesComputer.NoInternetOpenWith() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Internet File Association service")
		a.append("(L2) Ensure 'Turn off Internet File Association service' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether to use the Microsoft Web service for finding an application to open a file with an unhandled file association. When a user opens a file that has an extension that is not associated with any applications on the computer, the user is given the choice to select a local application or use the Web service to find an application.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Internet File Association service")
	if (AdministrativeTemplatesComputer.PreventHandwritingDataSharing() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off handwriting personalization data sharing")
		a.append("(L2) Ensure 'Turn off handwriting personalization data sharing' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This setting turns off data sharing from the handwriting recognition personalization tool. <br /> The handwriting recognition personalization tool enables Tablet PC users to adapt handwriting recognition to their own writing style by providing writing samples. The tool can optionally share user writing samples with Microsoft to improve handwriting recognition in future versions of Windows. The tool generates reports and transmits them to Microsoft over a secure connection. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off handwriting personalization data sharing <br /> Note: This Group Policy setting is provided by the Group Policy template 'ShapeCollector.admx/adml' that is included with the Microsoft Windows 7/2008R2, 8/2012, 8.1/2012R2 and Windows 10 Administrative Templates.")
	if (AdministrativeTemplatesComputer.DisableIPSourceRouting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (DisableIPSourceRouting) IP source routing protection level (protects against packet spoofing)")
		a.append("(L1) Ensure 'MSS: (DisableIPSourceRouting) IP source routing protection level (protects against packet spoofing)' is set to 'Enabled: Highest protection, source routing is completely disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("IP source routing is a mechanism that allows the sender to determine the IP route that a datagram should take through the network. It is recommended to configure this setting to Not Defined for enterprise environments and to Highest Protection for high security environments to completely disable source routing.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Highest protection, source routing is completely disabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (DisableIPSourceRouting) IP source routing protection level (protects against packet spoofing) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.ScenarioExecutionEnabled() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Troubleshooting and Diagnostics \ Windows Performance PerfTrack \ Enable/Disable PerfTrack")
		a.append("(L2) Ensure 'Enable/Disable PerfTrack' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether to enable or disable tracking of responsiveness events.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Troubleshooting and Diagnostics\Windows Performance PerfTrack\Enable/Disable PerfTrack")
	if (AdministrativeTemplatesComputer.DisableWebPnPDownload() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off downloading of print drivers over HTTP")
		a.append("(L2) Ensure 'Turn off downloading of print drivers over HTTP' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting controls whether the computer can download print driver packages over HTTP. To set up HTTP printing, printer drivers that are not available in the standard operating system installation might need to be downloaded over HTTP.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off downloading of print drivers over HTTP")
	if (AdministrativeTemplatesComputer.EnableAuthEpResolution() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Remote Procedure Call \ Enable RPC Endpoint Mapper Client Authentication")
		a.append("(L1) Ensure 'Enable RPC Endpoint Mapper Client Authentication' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls whether RPC clients authenticate with the Endpoint Mapper Service when the call they are making contains authentication information. The Endpoint Mapper Service on computers running Windows NT4 (all service packs) cannot process authentication information supplied in this manner. <br /> If you disable this policy setting, RPC clients will not authenticate to the Endpoint Mapper Service, but they will be able to communicate with the Endpoint Mapper Service on Windows NT4 Server. <br /> If you enable this policy setting, RPC clients will authenticate to the Endpoint Mapper Service for calls that contain authentication information. Clients making such calls will not be able to communicate with the Windows NT4 Server Endpoint Mapper Service. <br /> If you do not configure this policy setting, it remains disabled. RPC clients will not authenticate to the Endpoint Mapper Service, but they will be able to communicate with the Windows NT4 Server Endpoint Mapper Service. <br /> Note: This policy will not be applied until the system is rebooted.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Remote Procedure Call\Enable RPC Endpoint Mapper Client Authentication")
	if (AdministrativeTemplatesComputer.EnableScriptBlockLogging() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows PowerShell \ Turn on PowerShell Script Block Logging")
		a.append("(L1) Ensure 'Turn on PowerShell Script Block Logging' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting enables logging of all PowerShell script input to the Microsoft-Windows-PowerShell/Operational event log.")
		d.append('''To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows PowerShell\Turn on PowerShell Script Block Logging <br /> Note: This Group Policy path does not exist by default. A newer version of the "powershellexecutionpolicy.admx/adml" Administrative Template is required - it is included with the Microsoft Windows 10 Administrative Templates.''')
	if (AdministrativeTemplatesComputer.DCSettingIndex1() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Power Management \ Sleep Settings \ Require a password when a computer wakes (on battery)")
		a.append("(L1) Ensure 'Require a password when a computer wakes (on battery)' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Specifies whether or not the user is prompted for a password when the system resumes from sleep.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Power Management\Sleep Settings\Require a password when a computer wakes (on battery)")
	if (AdministrativeTemplatesComputer.NoOnlinePrintsWizard() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off the 'Order Prints' picture task")
		a.append("(L2) Ensure 'Turn off the 'Order Prints' picture task' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether the 'Order Prints Online' task is available from Picture Tasks in Windows folders. <br /> The Order Prints Online Wizard is used to download a list of providers and allow users to order prints online.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off the 'Order Prints' picture task")
	if (AdministrativeTemplatesComputer.FDVRecoveryKey() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Recovery Key")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Recovery Key' is set to 'Enabled: Allow 256-bit recovery key'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Allow 256-bit recovery key: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Recovery Key")
	if (AdministrativeTemplatesComputer.EncryptionMethod() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose drive encryption method and cipher strength (Windows Vista, Windows Server 2008, Windows 7, Windows Server 2008 R2)")
		a.append("(BL) Ensure 'Choose drive encryption method and cipher strength (Windows Vista, Windows Server 2008, Windows 7, Windows Server 2008 R2)' is set to 'Enabled: AES 256-bit with Diffuser'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure the algorithm and cipher strength used by BitLocker Drive Encryption. This policy setting is applied when you turn on BitLocker. Changing the encryption method has no effect if the drive is already encrypted or if encryption is in progress. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about the encryption methods available. This policy is only applicable to computers running Windows 8 and later. <br /> If you enable this policy setting you will be able to choose an encryption algorithm and key cipher strength for BitLocker to use to encrypt drives <br /> If you disable or do not configure this policy setting, BitLocker will use AES with the same bit strength (128-bit or 256-bit) as the "Choose drive encryption method and cipher strength (Windows Vista, Windows Server 2008, Windows 7)" policy setting, if it is set. If neither policy is set, BitLocker will use the default encryption method of AES 128-bit or the encryption method specified by the setup script.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: AES 256-bit with Diffuser: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Choose drive encryption method and cipher strength (Windows Vista, Windows Server 2008, Windows 7, Windows Server 2008 R2)")
	if (AdministrativeTemplatesComputer.UseTPMPIN() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Require additional authentication at startup: Configure TPM startup PIN:")
		a.append("(BL) Ensure 'Require additional authentication at startup: Configure TPM startup PIN:' is set to 'Enabled: Require startup PIN with TPM'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker. <br /> Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs. <br /> If you want to use BitLocker on a computer without a TPM, select the "Allow BitLocker without a compatible TPM" check box. In this mode a USB drive is required for start-up and the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable you will need to use one of the BitLocker recovery options to access the drive. <br /> On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both. <br /> If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard. <br /> If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM. <br /> Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Require startup PIN with TPM: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Require additional authentication at startup: Configure TPM startup PIN:")
	if (AdministrativeTemplatesComputer.AutoAdminLogon() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (AutoAdminLogon) Enable Automatic Logon (not recommended)")
		a.append("(L1) Ensure 'MSS: (AutoAdminLogon) Enable Automatic Logon (not recommended)' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This setting is separate from the Welcome screen feature in Windows XP and Windows Vista; if that feature is disabled, this setting is not disabled. If you configure a computer for automatic logon, anyone who can physically gain access to the computer can also gain access to everything that is on the computer, including any network or networks to which the computer is connected. Also, if you enable automatic logon, the password is stored in the registry in plaintext, and the specific registry key that stores this value is remotely readable by the Authenticated Users group. <br /> For additional information, see Microsoft Knowledge Base article 324737: < a href="https://support.microsoft.com/en-us/kb/324737"> How to turn on automatic logon in Windows </a> .''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (AutoAdminLogon) Enable Automatic Logon (not recommended) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.EnableBDEWithNoTPM() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Require additional authentication at startup: Allow BitLocker without a compatible TPM")
		a.append("(BL) Ensure 'Require additional authentication at startup: Allow BitLocker without a compatible TPM' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker. < br /> Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs. <br /> If you want to use BitLocker on a computer without a TPM, select the "Allow BitLocker without a compatible TPM" check box. In this mode a USB drive is required for start-up and the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable you will need to use one of the BitLocker recovery options to access the drive. <br /> On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both. <br /> If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard. <br /> If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM. <br /> Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Require additional authentication at startup: Allow BitLocker without a compatible TPM")
	if (AdministrativeTemplatesComputer.RestrictRemoteClients() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Remote Procedure Call \ Restrict Unauthenticated RPC clients")
		a.append("(L1) Ensure 'Restrict Unauthenticated RPC clients' is set to 'Enabled: Authenticated'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls how the RPC server runtime handles unauthenticated RPC clients connecting to RPC servers. <br /> This policy setting impacts all RPC applications. In a domain environment this policy setting should be used with caution as it can impact a wide range of functionality including group policy processing itself. Reverting a change to this policy setting can require manual intervention on each affected machine. This policy setting should never be applied to a domain controller. <br /> If you disable this policy setting, the RPC server runtime uses the value of 'Authenticated' on Windows Client, and the value of 'None' on Windows Server versions that support this policy setting. <br /> If you do not configure this policy setting, it remains disabled. The RPC server runtime will behave as though it was enabled with the value of 'Authenticated' used for Windows Client and the value of 'None' used for Server SKUs that support this policy setting. <br /> If you enable this policy setting, it directs the RPC server runtime to restrict unauthenticated RPC clients connecting to RPC servers running on a machine. A client will be considered an authenticated client if it uses a named pipe to communicate with the server or if it uses RPC Security. RPC Interfaces that have specifically requested to be accessible by unauthenticated clients may be exempt from this restriction, depending on the selected value for this policy setting. <br /> -- 'None' allows all RPC clients to connect to RPC Servers running on the machine on which the policy setting is applied. <br /> -- 'Authenticated' allows only authenticated RPC Clients (per the definition above) to connect to RPC Servers running on the machine on which the policy setting is applied. Exemptions are granted to interfaces that have requested them. <br /> -- 'Authenticated without exceptions' allows only authenticated RPC Clients (per the definition above) to connect to RPC Servers running on the machine on which the policy setting is applied. No exceptions are allowed. This value has the potential to cause serious problems and is not recommended. <br /> Note: This policy setting will not be applied until the system is rebooted.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Authenticated: Computer Configuration\Policies\Administrative Templates\System\Remote Procedure Call\Restrict Unauthenticated RPC clients")
	if (AdministrativeTemplatesComputer.EMETInstall() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ EMET 5.5'")
		a.append("(L1) Ensure 'EMET 5.5' or higher is installed")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("The Enhanced Mitigation Experience Toolkit (EMET) is free, supported, software developed by Microsoft that allows an enterprise to apply exploit mitigations to applications that run on Windows.")
		d.append("")
	if (AdministrativeTemplatesComputer.SysSettings() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ Default Action and Mitigation Settings")
		a.append("(L1) Ensure 'Default Action and Mitigation Settings' is set to 'Enabled' (plus subsettings)")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting configures the default action after detection and advanced ROP mitigation")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\Default Action and Mitigation Settings <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.DeleteTempDirsOnExit() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Temporary folders \ Do not delete temp folders upon exit")
		a.append("(L1) Ensure 'Do not delete temp folders upon exit' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether Remote Desktop Services retains a user's per-session temporary folders at logoff.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Temporary Folders\Do not delete temp folders upon exit")
	if (AdministrativeTemplatesComputer.Peernet() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Microsoft Peer-to-Peer Networking Services \ Peer Name Resolution Protocol \ Turn off Microsoft Peer-to-Peer Networking Services")
		a.append("(L2) Ensure 'Turn off Microsoft Peer-to-Peer Networking Services' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("The Peer Name Resolution Protocol (PNRP) allows for distributed resolution of a name to an IPV6 address and port number. The protocol operates in the context of clouds. A cloud is a set of peer computers that can communicate with each other by using the same IPv6 scope. <br /> Peer-to-Peer protocols allow for applications in the areas of RTC, collaboration, content distribution and distributed processing.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Network\Microsoft Peer-to-Peer Networking Services\Turn off Microsoft Peer-to-Peer Networking Services")
	if (AdministrativeTemplatesComputer.Registrars() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Windows Connect Now  \ Configuration of wireless settings using Windows Connect Now")
		a.append("(L2) Ensure 'Configuration of wireless settings using Windows Connect Now' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows the configuration of wireless settings using Windows Connect Now (WCN). The WCN Registrar enables the discovery and configuration of devices over Ethernet (UPnP) over In-band 802.11 Wi-Fi through the Windows Portable Device API (WPD) and via USB Flash drives. Additional options are available to allow discovery and configuration over a specific medium.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Network\Windows Connect Now\Configuration of wireless settings using Windows Connect Now")
	if (AdministrativeTemplatesComputer.AllowDigest() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Management (WinRM) \ WinRM Client \ Disallow Digest authentication")
		a.append("(L1) Ensure 'Disallow Digest authentication' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the Windows Remote Management (WinRM) client will not use Digest authentication <br /> If you enable this policy setting, the WinRM client will not use Digest authentication. <br /> If you disable or do not configure this policy setting, the WinRM client will use Digest authentication.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Remote Management (WinRM)\WinRM Client\Disallow Digest authentication")
	if (AdministrativeTemplatesComputer.OSRequireActiveDirectoryBackup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for operating system drives")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for operating system drives' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for operating system drives")
	if (AdministrativeTemplatesComputer.TurnOffSidebar() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Desktop Gadgets \ Turn off desktop gadgets")
		a.append("This policy setting allows you to turn off desktop gadgets. Gadgets are small applets that display information or utilities on the desktop.")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to turn off desktop gadgets. Gadgets are small applets that display information or utilities on the desktop.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Desktop Gadgets\Turn off desktop gadgets")
	if (AdministrativeTemplatesComputer.NoAUAsDefaultShutdownOption() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Update \ Do not adjust default option to 'Install Updates and Shut Down' in Shut Down Windows dialog box")
		a.append("(L1) Ensure 'Do not adjust default option to 'Install Updates and Shut Down' in Shut Down Windows dialog box' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the 'Install Updates and Shut Down' option is allowed to be the default choice in the Shut Down Windows dialog.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Administrative Templates\Windows Components\Windows Update\Do not adjust default option to 'Install Updates and Shut Down' in Shut Down Windows dialog box")
	if (AdministrativeTemplatesComputer.NoDriveTypeAutoRun() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ AutoPlay Policies \ Turn off Autoplay")
		a.append("(L1) Ensure 'Turn off Autoplay' is set to 'Enabled: All drives'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Autoplay starts to read from a drive as soon as you insert media in the drive, which causes the setup file for programs or audio media to start immediately. An attacker could use this feature to launch a program to damage the computer or data on the computer. You can enable the Turn off Autoplay setting to disable the Autoplay feature. Autoplay is disabled by default on some removable drive types, such as floppy disk and network drives, but not on CD-ROM drives. <br /> Note: You cannot use this policy setting to enable Autoplay on computer drives in which it is disabled by default, such as floppy disk and network drives.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: All drives: Computer Configuration\Policies\Administrative Templates\Windows Components\AutoPlay Policies\Turn off Autoplay")
	if (AdministrativeTemplatesComputer.NoRegistration() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Registration if URL connection is referring to Microsoft.com")
		a.append("(L2) Ensure 'Turn off Registration if URL connection is referring to Microsoft.com' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether the Windows Registration Wizard connects to Microsoft.com for online registration.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Registration if URL connection is referring to Microsoft.com")
	if (AdministrativeTemplatesComputer.OSManageDRA() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Allow data recovery agent")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Allow data recovery agent' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Allow data recovery agent")
	if (AdministrativeTemplatesComputer.AllowUnencryptedTraffic() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Management (WinRM) \ WinRM Client \ Allow unencrypted traffic")
		a.append("(L1) Ensure 'Allow unencrypted traffic' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the Windows Remote Management (WinRM) client sends and receives unencrypted messages over the network. <br /> If you enable this policy setting, the WinRM client sends and receives unencrypted messages over the network. <br /> If you disable or do not configure this policy setting, the WinRM client sends or receives only encrypted messages over the network.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Remote Management (WinRM)\WinRM Client\Allow unencrypted traffic")
	if (AdministrativeTemplatesComputer.PreventHandwritingErrorReports() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off handwriting recognition error reporting")
		a.append("(L2) Ensure 'Turn off handwriting recognition error reporting' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("Turns off the handwriting recognition error reporting tool. <br /> The handwriting recognition error reporting tool enables users to report errors encountered in Tablet PC Input Panel. The tool generates error reports and transmits them to Microsoft over a secure connection. Microsoft uses these error reports to improve handwriting recognition in future versions of Windows.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off handwriting recognition error reporting")
	if (AdministrativeTemplatesComputer.FDVHideRecoveryPage() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Omit recovery options from the BitLocker setup wizard")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Omit recovery options from the BitLocker setup wizard' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Omit recovery options from the BitLocker setup wizard")
	if (AdministrativeTemplatesComputer.Defaults1() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ Default Protections for Recommended Software")
		a.append("(L1) Ensure 'Default Protections for Recommended Software' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This settings determine if recommended EMET mitigations are applied to WordPad, applications that are part of the Microsoft Office suite, Adobe Acrobat, Adobe Reader, and Oracle Java.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\Default Protections for Recommended Software <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.NoAutoUpdate() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Update \ Configure Automatic Updates")
		a.append("(L1) Ensure 'Configure Automatic Updates' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether computers in your environment will receive security updates from Windows Update or WSUS. If you configure this policy setting to Enabled, the operating system will recognize when a network connection is available and then use the network connection to search Windows Update or your designated intranet site for updates that apply to them. <br /> After you configure this policy setting to Enabled, select one of the following three options in the Configure Automatic Updates Properties dialog box to specify how the service will work: <br /> - Notify before downloading any updates and notify again before installing them. <br /> - Download the updates automatically and notify when they are ready to be installed. (Default setting) <br /> - Automatically download updates and install them on the schedule specified below. <br /> If you disable this policy setting, you will need to download and manually install any available updates from Windows Update.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Update\Configure Automatic Updates")
	if (AdministrativeTemplatesComputer.UseAdvancedStartup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Require additional authentication at startup")
		a.append("(BL) Ensure 'Require additional authentication at startup' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker. <br /> Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs. <br /> If you want to use BitLocker on a computer without a TPM, select the "Allow BitLocker without a compatible TPM" check box. In this mode a USB drive is required for start-up and the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable you will need to use one of the BitLocker recovery options to access the drive. <br /> On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both. <br /> If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard. <br /> If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM. <br /> Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Require additional authentication at startup")
	if (AdministrativeTemplatesComputer.FDVDiscoveryVolumeType() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Allow access to BitLocker-protected fixed data drives from earlier versions of Windows")
		a.append("(BL) Ensure 'Allow access to BitLocker-protected fixed data drives from earlier versions of Windows' is set to 'Disabled'")
		b.append("&#9679; Level 1 + BitLocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting configures whether or not fixed data drives formatted with the FAT file system can be unlocked and viewed on computers running Windows Server 2008, Windows Vista, Windows XP with Service Pack 3 (SP3), or Windows XP with Service Pack 2 (SP2) operating systems. <br /> If this policy setting is enabled or not configured, fixed data drives formatted with the FAT file system can be unlocked on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2, and their content can be viewed. These operating systems have read-only access to BitLocker-protected drives. <br /> When this policy setting is enabled, select the "Do not install BitLocker To Go Reader on FAT formatted fixed drives" check box to help prevent users from running BitLocker To Go Reader from their fixed drives. If BitLocker To Go Reader (bitlockertogo.exe) is present on a drive that does not have an identification field specified, or if the drive has the same identification field as specified in the "Provide unique identifiers for your organization" policy setting, the user will be prompted to update BitLocker and BitLocker To Go Reader will be deleted from the drive. In this situation, for the fixed drive to be unlocked on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2, BitLocker To Go Reader must be installed on the computer. If this check box is not selected, BitLocker To Go Reader will be installed on the fixed drive to enable users to unlock the drive on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2 that do not have BitLocker To Go Reader installed. <br /> If this policy setting is disabled, fixed data drives formatted with the FAT file system that are BitLocker-protected cannot be unlocked on computers running Windows Server 2008, Windows Vista, Windows XP with SP3, or Windows XP with SP2. Bitlockertogo.exe will not be installed. <br /> Note: This policy setting does not apply to drives that are formatted with the NTFS file system.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Allow access to BitLocker-protected fixed data drives from earlier versions of Windows")
	if (AdministrativeTemplatesComputer.UseTPMKeyPIN() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Require additional authentication at startup: Configure TPM startup key and PIN:")
		a.append("(BL) Ensure 'Require additional authentication at startup: Configure TPM startup key and PIN:' is set to 'Enabled: Do not allow startup key and PIN with TPM'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker. <br /> Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs. <br /> If you want to use BitLocker on a computer without a TPM, select the "Allow BitLocker without a compatible TPM" check box. In this mode a USB drive is required for start-up and the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable you will need to use one of the BitLocker recovery options to access the drive. <br /> On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both. <br /> If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard. <br /> If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM. <br /> Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not allow startup key and PIN with TPM: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Require additional authentication at startup: Configure TPM startup key and PIN:")
	if (AdministrativeTemplatesComputer.FDVRecovery() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered")
	if (AdministrativeTemplatesComputer.FDVPassphrase() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ onfigure use of passwords for fixed data drives")
		a.append("(BL) Ensure 'Configure use of passwords for fixed data drives' is set to 'Disabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting specifies whether a password is required to unlock BitLocker-protected fixed data drives. If you choose to permit the use of a password, you can require that a password be used, enforce complexity requirements on the password, and configure a minimum length for the password. For the complexity requirement setting to be effective the Group Policy setting "Password must meet complexity requirements" located in Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\ must be also enabled. <br /> Note: These settings are enforced when turning on BitLocker, not when unlocking a volume. BitLocker will allow unlocking a drive with any of the protectors available on the drive. <br /> If you enable this policy setting, users can configure a password that meets the requirements you define. To require the use of a password, select "Require password for fixed data drive". To enforce complexity requirements on the password, select "Require complexity". <br /> When set to "Require complexity" a connection to a domain controller is necessary when BitLocker is enabled to validate the complexity the password. When set to "Allow complexity" a connection to a domain controller will be attempted to validate the complexity adheres to the rules set by the policy, but if no domain controllers are found the password will still be accepted regardless of actual password complexity and the drive will be encrypted using that password as a protector. When set to "Do not allow complexity", no password complexity validation will be done. <br /> Passwords must be at least 8 characters. To configure a greater minimum length for the password, enter the desired number of characters in the "Minimum password length" box. <br /> If you disable this policy setting, the user is not allowed to use a password. <br /> If you do not configure this policy setting, passwords will be supported with the default settings, which do not include password complexity requirements and require only 8 characters. <br /> Note: Passwords cannot be used if FIPS-compliance is enabled. The "System cryptography: Use FIPS-compliant algorithms for encryption, hashing, and signing" policy setting in Computer Configuration\Windows Settings\Security Settings\Local Policies\Security Options specifies whether FIPS-compliance is enabled.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Configure use of passwords for fixed data drives")
	if (AdministrativeTemplatesComputer.ASLR() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ System ASLR")
		a.append("(L1) Ensure 'System ASLR' is set to 'Enabled: Application Opt-In'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines how applications become enrolled in address space layout randomization (ASLR).")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Application Opt-In: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\System ASLR <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.EnumerateAdministrators() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Credential User Interface \ Enumerate administrator accounts on elevation")
		a.append("(L1) Ensure 'Enumerate administrator accounts on elevation' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("By default, all administrator accounts are displayed when you attempt to elevate a running application.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Credential User Interface\Enumerate administrator accounts on elevation")
	if (AdministrativeTemplatesComputer.DisableBkGndGroupPolicy() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Group Policy \ Turn off background refresh of Group Policy")
		a.append("(L1) Ensure 'Turn off background refresh of Group Policy' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting prevents Group Policy from being updated while the computer is in use. This policy setting applies to Group Policy for computers, users and domain controllers.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Group Policy\Turn off background refresh of Group Policy")
	if (AdministrativeTemplatesComputer.RDVEnforceUserCert() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Configure use of smart cards on removable data drives: Require use of smart cards on removable data drives")
		a.append("(BL) Ensure 'Configure use of smart cards on removable data drives: Require use of smart cards on removable data drives' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting specifies whether a password is required to unlock BitLocker-protected removable data drives. If you choose to allow use of a password, you can require a password to be used, enforce complexity requirements, and configure a minimum length. For the complexity requirement setting to be effective the Group Policy setting "Password must meet complexity requirements" located in Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\ must be also enabled. <br /> Note: These settings are enforced when turning on BitLocker, not when unlocking a volume. BitLocker will allow unlocking a drive with any of the protectors available on the drive. <br /> If you enable this policy setting, users can configure a password that meets the requirements that you define. To require the use of a password, select "Require password for removable data drive". To enforce complexity requirements on the password, select "Require complexity". <br /> When set to "Require complexity" a connection to a domain controller is necessary when BitLocker is enabled to validate the complexity the password. When set to "Allow complexity" a connection to a domain controller will be attempted to validate the complexity adheres to the rules set by the policy, but if no domain controllers are found the password will still be accepted regardless of actual password complexity and the drive will be encrypted using that password as a protector. When set to "Do not allow complexity", no password complexity validation will be done. <br /> Passwords must be at least 8 characters. To configure a greater minimum length for the password, enter the desired number of characters in the "Minimum password length" box. <br /> If you disable this policy setting, the user is not allowed to use a password. <br /> If you do not configure this policy setting, passwords will be supported with the default settings, which do not include password complexity requirements and require only 8 characters. <br /> Note: Passwords cannot be used if FIPS-compliance is enabled. The "System cryptography: Use FIPS-compliant algorithms for encryption, hashing, and signing" policy setting in Computer Configuration\Windows Settings\Security Settings\Local Policies\Security Options specifies whether FIPS-compliance is enabled.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Configure use of smart cards on removable data drives: Require use of smart cards on removable data drives")
	if (AdministrativeTemplatesComputer.RDVActiveDirectoryBackup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Save BitLocker recovery information to AD DS for removable data drives")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Save BitLocker recovery information to AD DS for removable data drives' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Save BitLocker recovery information to AD DS for removable data drives")
	if (AdministrativeTemplatesComputer.RDVActiveDirectoryInfoToStore() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Configure storage of BitLocker recovery information to AD DS:")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Configure storage of BitLocker recovery information to AD DS:' is set to 'Enabled: Backup recovery passwords and key packages'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Backup recovery passwords and key packages: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Configure storage of BitLocker recovery information to AD DS:")
	if (AdministrativeTemplatesComputer.Tcpmaxdataretransmissions() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (TcpMaxDataRetransmissions) How many times unacknowledged data is retransmitted")
		a.append("(L2) Ensure 'MSS: (TcpMaxDataRetransmissions) How many times unacknowledged data is retransmitted' is set to 'Enabled: 3'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This setting controls the number of times that TCP retransmits an individual data segment (non-connect segment) before the connection is aborted. The retransmission time-out is doubled with each successive retransmission on a connection. It is reset when responses resume. The base time-out value is dynamically determined by the measured round-trip time on the connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 3: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS:(TcpMaxDataRetransmissions) How many times unacknowledged data is retransmitted <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.RDVRecoveryKey() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Recovery Key")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Recovery Key' is set to 'Enabled: Do not allow 256-bit recovery key'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not allow 256-bit recovery key: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Recovery Key")
	if (AdministrativeTemplatesComputer.PerSessionTempDir() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Temporary folders \ Do not use temporary folders per session")
		a.append("(L1) Ensure 'Do not use temporary folders per session' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''By default, Remote Desktop Services creates a separate temporary folder on the RD Session Host server for each active session that a user maintains on the RD Session Host server. The temporary folder is created on the RD Session Host server in a Temp folder under the user's profile folder and is named with the "sessionid." This temporary folder is used to store individual temporary files.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Temporary Folders\Do not use temporary folders per session")
	if (AdministrativeTemplatesComputer.NoAUShutdownOption() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Update \ Do not display 'Install Updates and Shut Down")
		a.append("(L1) Ensure 'Do not display 'Install Updates and Shut Down' option in Shut Down Windows dialog box' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the 'Install Updates and Shut Down' option is displayed in the Shut Down Windows dialog box.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Update\Do not display 'Install Updates and Shut Down' option in Shut Down Windows dialog box")
	if (AdministrativeTemplatesComputer.Defaults() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ Default Protections for Popular Software")
		a.append("(L1) Ensure 'Default Protections for Popular Software' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This settings determine if EMET mitigations are applied to other popular software.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\Default Protections for Popular Explorer <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.DisableHTTPPrinting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off printing over HTTP")
		a.append("(L2) Ensure 'Turn off printing over HTTP' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to disable the client computer's ability to print over HTTP, which allows the computer to print to printers on the intranet as well as the Internet.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off printing over HTTP")
	if (AdministrativeTemplatesComputer.DenyDeviceClasses() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Device Installation \ Device Installation Restrictions \ Prevent installation of devices using drivers that match these device setup classes")
		a.append("(BL) Ensure 'Prevent installation of devices using drivers that match these device setup classes' is set to 'Enabled'")
		b.append("&#9679; Level 1 + BitLocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to specify a list of device setup class globally unique identifiers (GUIDs) for device drivers that Windows is prevented from installing. This policy setting takes precedence over any other policy setting that allows Windows to install a device. <br /> If you enable this policy setting, Windows is prevented from installing or updating device drivers whose device setup class GUIDs appear in the list you create. If you enable this policy setting on a remote desktop server, the policy setting affects redirection of the specified devices from a remote desktop client to the remote desktop server. <br /> If you disable or do not configure this policy setting, Windows can install and update devices as allowed or prevented by other policy settings.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Device Installation\Device Installation Restrictions\Prevent installation of devices using drivers that match these device setup classes")
	if (AdministrativeTemplatesComputer.AlwaysInstallElevated() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Installer \ Always install with elevated privileges")
		a.append("(L1) Ensure 'Always install with elevated privileges' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Directs Windows Installer to use system permissions when it installs any program on the system. <br /> This setting extends elevated privileges to all programs. These privileges are usually reserved for programs that have been assigned to the user (offered on the desktop), assigned to the computer (installed automatically), or made available in Add or Remove Programs in Control Panel. This setting lets users install programs that require access to directories that the user might not have permission to view or change, including directories on highly restricted computers. <br /> If you disable this setting or do not configure it, the system applies the current user's permissions when it installs programs that a system administrator does not distribute or offer. <br /> Note: This setting appears both in the Computer Configuration and User Configuration folders. To make this setting effective, you must enable the setting in both folders. <br /> Caution: Skilled users can take advantage of the permissions this setting grants to change their privileges and gain permanent access to restricted files and folders. Note that the User Configuration version of this setting is not guaranteed to be secure.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Installer\Always install with elevated privileges")
	if (AdministrativeTemplatesComputer.DisablePasswordSaving() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Connection Client \ RemoteFX USB Device Redirection \ Do not allow passwords to be saved")
		a.append("(L1) Ensure 'Do not allow passwords to be saved' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting helps prevent Remote Desktop Services / Terminal Services clients from saving passwords on a computer. Note If this policy setting was previously configured as Disabled or Not configured, any previously saved passwords will be deleted the first time a Terminal Services client disconnects from any server.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Connection Client\Do not allow passwords to be saved")
	if (AdministrativeTemplatesComputer.WindowsErrorReporting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Windows Error Reporting")
		a.append("(L2) Ensure 'Turn off Windows Error Reporting' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting controls whether or not errors are reported to Microsoft <br /> Error Reporting is used to report information about a system or application that has failed or has stopped responding and is used to improve the quality of the product.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Windows Error Reporting")
	if (AdministrativeTemplatesComputer.fPromptForPassword() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Security \ Always prompt for password upon connection")
		a.append("(L1) Ensure 'Always prompt for password upon connection' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether Terminal Services always prompts the client computer for a password upon connection. You can use this policy setting to enforce a password prompt for users who log on to Terminal Services, even if they already provided the password in the Remote Desktop Connection client. By default, Terminal Services allows users to automatically log on if they enter a password in the Remote Desktop Connection client. <br /> Note: If you do not configure this policy setting, the local computer administrator can use the Terminal Services Configuration tool to either allow or prevent passwords from being automatically sent.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Security\Always prompt for password upon connection")
	if (AdministrativeTemplatesComputer.DisableIP6SourceRouting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (DisableIPSourceRouting IPv6) IP source routing protection level (protects against packet spoofing)")
		a.append("(L1) Ensure 'MSS: (DisableIPSourceRouting IPv6) IP source routing protection level (protects against packet spoofing)' is set to 'Enabled: Highest protection, source routing is completely disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("IP source routing is a mechanism that allows the sender to determine the IP route that a datagram should follow through the network.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Highest protection, source routing is completely disabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (DisableIPSourceRouting IPv6) IP source routing protection level (protects against packet spoofing) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.CEIP() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off the Windows Messenger Customer Experience Improvement Program")
		a.append("(L2) Ensure 'Turn off the Windows Messenger Customer Experience Improvement Program' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether Windows Messenger can collect anonymous information about how the Windows Messenger software and service is used.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off the Windows Messenger Customer Experience Improvement Program")
	if (AdministrativeTemplatesComputer.NCAllowNetBridgeNLA() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Network Connections \ Windows Firewall \ Prohibit installation and configuration of Network Bridge on your DNS domain network")
		a.append("(L1) Ensure 'Prohibit installation and configuration of Network Bridge on your DNS domain network' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("You can use this procedure to enable or disable the user's ability to install and configure a network bridge.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Network\Network Connections\Prohibit installation and configuration of Network Bridge on your DNS domain network")
	if (AdministrativeTemplatesComputer.PreXPSP2ShellProtocolBehavior() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ File Explorer \ Previous Versions \ Turn off shell protocol protected mode")
		a.append("(L1) Ensure 'Turn off shell protocol protected mode' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to configure the amount of functionality that the shell protocol can have. When using the full functionality of this protocol applications can open folders and launch files. The protected mode reduces the functionality of this protocol allowing applications to only open a limited set of folders. Applications are not able to open files with this protocol when it is in the protected mode. It is recommended to leave this protocol in the protected mode to increase the security of Windows.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\File Explorer\Turn off shell protocol protected mode")
	if (AdministrativeTemplatesComputer.AdmPwd() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ LAPS \ LAPS AdmPwd GPO Extension / CSE")
		a.append("(L1) Ensure LAPS AdmPwd GPO Extension / CSE is installed")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("In May 2015, Microsoft released the Local Administrator Password Solution (LAPS) tool, which is free and supported software that allows an organization to automatically set randomized and unique local Administrator account passwords on domain-attached workstations and member servers. The passwords are stored in a confidential attribute of the domain computer account and can be retrieved from Active Directory by approved Sysadmins when needed. <br /> The LAPS tool requires a small Active Directory Schema update in order to implement, as well as installation of a Group Policy Client Side Extension (CSE) on targeted computers. Please see the LAPS documentation for details. <br /> LAPS supports Windows Vista or newer workstation OSes, and Server 2003 or newer server OSes. LAPS does not support standalone computers - they must be joined to a domain. <br /> Note: Organizations that utilize 3rd-party commercial software to manage unique & complex local Administrator passwords on domain members may opt to disregard these LAPS recommendations.")
		d.append("In order to utilize LAPS, a minor Active Directory Schema update is required, and a Group Policy Client Side Extension (CSE) must be installed on each managed computer. When LAPS is installed, the file AdmPwd.dll must be present in the following location and registered in Windows (the LAPS AdmPwd GPO Extension / CSE installation does this for you): C:\Program Files\LAPS\CSE\AdmPwd.dll")
	if (AdministrativeTemplatesComputer.CEIPEnable() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Windows Customer Experience Improvement Program")
		a.append("(L2) Ensure 'Turn off Windows Customer Experience Improvement Program' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether Windows Messenger can collect anonymous information about how the Windows Messenger software and service is used.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Windows Customer Experience Improvement Program")
	if (AdministrativeTemplatesComputer.DisableWcnUi() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Windows Connect Now  \ Prohibit access of the Windows Connect Now wizards")
		a.append("(L2) Ensure 'Prohibit access of the Windows Connect Now wizards' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting prohibits access to Windows Connect Now (WCN) wizards")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Network\Network\Windows Connect Now\Prohibit access of the Windows Connect Now wizards")
	if (AdministrativeTemplatesComputer.Tcpmaxdataretransmissions6() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (TcpMaxDataRetransmissions IPv6) How many times unacknowledged data is retransmitted")
		a.append("(L2) Ensure 'MSS: (TcpMaxDataRetransmissions IPv6) How many times unacknowledged data is retransmitted' is set to 'Enabled: 3'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This setting controls the number of times that TCP retransmits an individual data segment (non-connect segment) before the connection is aborted. The retransmission time-out is doubled with each successive retransmission on a connection. It is reset when responses resume. The base time-out value is dynamically determined by the measured round-trip time on the connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 3: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS:(TcpMaxDataRetransmissions IPv6) How many times unacknowledged data is retransmitted <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.PwdExpirationProtection() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ LAPS \ Do not allow password expiration time longer than required by policy")
		a.append("(L1) Ensure 'Do not allow password expiration time longer than required by policy' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("In May 2015, Microsoft released the Local Administrator Password Solution (LAPS) tool, which is free and supported software that allows an organization to automatically set randomized and unique local Administrator account passwords on domain-attached workstations and member servers. The passwords are stored in a confidential attribute of the domain computer account and can be retrieved from Active Directory by approved Sysadmins when needed. <br /> The LAPS tool requires a small Active Directory Schema update in order to implement, as well as installation of a Group Policy Client Side Extension (CSE) on targeted computers. Please see the LAPS documentation for details. <br /> LAPS supports Windows Vista or newer workstation OSes, and Server 2003 or newer server OSes. LAPS does not support standalone computers - they must be joined to a domain. <br /> Note: Organizations that utilize 3rd-party commercial software to manage unique & complex local Administrator passwords on domain members may opt to disregard these LAPS recommendations")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\LAPS\Do not allow password expiration time longer than required by policy <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (AdmPwd.admx/adml) is required - it is included with Microsoft Local Administrator Password Solution (LAPS).")
	if (AdministrativeTemplatesComputer.FDVManageDRA() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Allow data recovery agent")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Allow data recovery agent' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Allow data recovery agent")
	if (AdministrativeTemplatesComputer.OSActiveDirectoryInfoToStore() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Configure storage of BitLocker recovery information to AD DS:")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Configure storage of BitLocker recovery information to AD DS:' is set to 'Enabled: Store recovery passwords and key packages'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Store recovery passwords and key packages: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Configure storage of BitLocker recovery information to AD DS:")
	if (AdministrativeTemplatesComputer.PasswordAgeDays() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ LAPS \ Password Settings: Password Age (Days)")
		a.append("(L1) Ensure 'Password Settings: Password Age (Days)' is set to 'Enabled: 30 or fewer'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("In May 2015, Microsoft released the Local Administrator Password Solution (LAPS) tool, which is free and supported software that allows an organization to automatically set randomized and unique local Administrator account passwords on domain-attached workstations and member servers. The passwords are stored in a confidential attribute of the domain computer account and can be retrieved from Active Directory by approved Sysadmins when needed. <br /> The LAPS tool requires a small Active Directory Schema update in order to implement, as well as installation of a Group Policy Client Side Extension (CSE) on targeted computers. Please see the LAPS documentation for details. <br /> LAPS supports Windows Vista or newer workstation OSes, and Server 2003 or newer server OSes. LAPS does not support standalone computers - they must be joined to a domain. <br /> Note: Organizations that utilize 3rd-party commercial software to manage unique & complex local Administrator passwords on domain members may opt to disregard these LAPS recommendations.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, and configure the Password Age (Days) option to 30 or fewer: Computer Configuration\Policies\Administrative Templates\LAPS\Password Settings <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (AdmPwd.admx/adml) is required - it is included with Microsoft Local Administrator Password Solution (LAPS).")
	if (AdministrativeTemplatesComputer.DEP() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ System DEP")
		a.append("(L1) Ensure 'System DEP' is set to 'Enabled: Application Opt-Out'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines how applications become enrolled in data execution protection (DEP).")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Application Opt-Out: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\System DEP <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.NoAutorun() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ AutoPlay Policies \ Set the default behavior for AutoRun")
		a.append("(L1) Ensure 'Set the default behavior for AutoRun' is set to 'Enabled: Do not execute any autorun commands'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting sets the default behavior for Autorun commands. Autorun commands are generally stored in autorun.inf files. They often launch the installation program or other routines.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not execute any autorun commands: Computer Configuration\Policies\Administrative Templates\Windows Components\AutoPlay Policies\Set the default behavior for AutoRun")
	if (AdministrativeTemplatesComputer.FDVRecoveryPassword() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Recovery Password")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Recovery Password' is set to 'Enabled: Allow 48-digit recovery password'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Allow 48-digit recovery password: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Recovery Password")
	if (AdministrativeTemplatesComputer.OSHideRecoveryPage() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Omit recovery options from the BitLocker setup wizard")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Omit recovery options from the BitLocker setup wizard' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Omit recovery options from the BitLocker setup wizard")
	if (AdministrativeTemplatesComputer.NoAutoRebootWithLoggedOnUsers() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Update \ No auto-restart with logged on users for scheduled automatic updates installations")
		a.append("(L1) Ensure 'No auto-restart with logged on users for scheduled automatic updates installations' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies that Automatic Updates will wait for computers to be restarted by the users who are logged on to them to complete a scheduled installation. <br /> If you enable the No auto-restart for scheduled Automatic Updates installations setting, Automatic Updates does not restart computers automatically during scheduled installations. Instead, Automatic Updates notifies users to restart their computers to complete the installations. You should note that Automatic Updates will not be able to detect future updates until restarts occur on the affected computers. If you disable or do not configure this setting, Automatic Updates will notify users that their computers will automatically restart in 5 minutes to complete the installations. <br /> The possible values for the No auto-restart for scheduled Automatic Updates installations setting are: <br /> - Enabled <br /> - Disabled <br /> - Not Configured <br /> Note: This setting applies only when you configure Automatic Updates to perform scheduled update installations. If you configure the Configure Automatic Updates setting to Disabled, this setting has no effect.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Update\No auto-restart with logged on users for scheduled automatic updates installations")
	if (AdministrativeTemplatesComputer.TurnOffUserInstalledGadgets() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Desktop Gadgets \ Turn Off user-installed desktop gadgets")
		a.append("(L1) Ensure 'Turn Off user-installed desktop gadgets' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to turn off desktop gadgets that have been installed by the user.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Desktop Gadgets\Turn Off user-installed desktop gadgets")
	if (AdministrativeTemplatesComputer.EnableICMPRedirect() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (EnableICMPRedirect) Allow ICMP redirects to override OSPF generated routes")
		a.append("(L1) Ensure 'MSS: (EnableICMPRedirect) Allow ICMP redirects to override OSPF generated routes' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Internet Control Message Protocol (ICMP) redirects cause the IPv4 stack to plumb host routes. These routes override the Open Shortest Path First (OSPF) generated routes.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (EnableICMPRedirect) Allow ICMP redirects to override OSPF generated routes <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM). ")
	if (AdministrativeTemplatesComputer.DisableLocation() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Location and Sensors \ Turn off location ")
		a.append("(L2) Ensure 'Turn off location' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting turns off the location feature for this computer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Location and Sensors\Turn off location")
	if (AdministrativeTemplatesComputer.OSActiveDirectoryBackup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Save BitLocker recovery information to AD DS for operating system drives")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Save BitLocker recovery information to AD DS for operating system drives' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Save BitLocker recovery information to AD DS for operating system drives")
	if (AdministrativeTemplatesComputer.Retention1() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ Security \ Security: Control Event Log behavior when the log file reaches its maximum size")
		a.append("(L1) Ensure 'Security: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting controls Event Log behavior when the log file reaches its maximum size. <br /> If you enable this policy setting and a log file reaches its maximum size, new events are not written to the log and are lost. <br /> If you disable or do not configure this policy setting and a log file reaches its maximum size, new events overwrite old events. <br /> Note: Old events may or may not be retained according to the "Backup log automatically when full"* policy setting.''')
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\Security\Control Event Log behavior when the log file reaches its maximum size")
	if (AdministrativeTemplatesComputer.Retention2() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ Setup \ Setup: Control Event Log behavior when the log file reaches its maximum size")
		a.append("(L1) Ensure 'Setup: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting controls Event Log behavior when the log file reaches its maximum size. <br /> If you enable this policy setting and a log file reaches its maximum size, new events are not written to the log and are lost. <br /> If you disable or do not configure this policy setting and a log file reaches its maximum size, new events overwrite old events. <br /> Note: Old events may or may not be retained according to the "Backup log automatically when full"* policy setting.''')
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\Setup\Control Event Log behavior when the log file reaches its maximum size")
	if (AdministrativeTemplatesComputer.RDVManageDRA() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Allow data recovery agent")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Allow data recovery agent' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Allow data recovery agent")
	if (AdministrativeTemplatesComputer.DCSettingIndex() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Power Management \ Sleep Settings \ Allow standby states (S1-S3) when sleeping (on battery)")
		a.append("(BL) Ensure 'Allow standby states (S1-S3) when sleeping (on battery)' is set to 'Disabled'")
		b.append("&#9679; Level 1 + BitLocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("Dictates whether or not Windows is allowed to use standby states when sleeping the computer. <br /> When this policy is enabled, Windows may use standby states to sleep the computer. If this policy is disabled, the only sleep state a computer may enter is hibernate.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Power Management\Sleep Settings\Allow standby states (S1-S3) when sleeping (on battery)")
	if (AdministrativeTemplatesComputer.UseTPMKey() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Require additional authentication at startup: Configure TPM startup key:")
		a.append("(BL) Ensure 'Require additional authentication at startup: Configure TPM startup key:' is set to 'Enabled: Do not allow startup key with TPM'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker. <br /> Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs. <br /> If you want to use BitLocker on a computer without a TPM, select the "Allow BitLocker without a compatible TPM" check box. In this mode a USB drive is required for start-up and the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable you will need to use one of the BitLocker recovery options to access the drive. <br /> On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both. <br /> If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard. <br /> If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM. <br /> Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not allow startup key with TPM: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Require additional authentication at startup: Configure TPM startup key:")
	if (AdministrativeTemplatesComputer.PasswordComplexity() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ LAPS \ Password Settings: Password Complexity")
		a.append("(L1) Ensure 'Password Settings: Password Complexity' is set to 'Enabled: Large letters + small letters + numbers + special characters'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("In May 2015, Microsoft released the Local Administrator Password Solution (LAPS) tool, which is free and supported software that allows an organization to automatically set randomized and unique local Administrator account passwords on domain-attached workstations and member servers. The passwords are stored in a confidential attribute of the domain computer account and can be retrieved from Active Directory by approved Sysadmins when needed. <br /> The LAPS tool requires a small Active Directory Schema update in order to implement, as well as installation of a Group Policy Client Side Extension (CSE) on targeted computers. Please see the LAPS documentation for details. <br /> LAPS supports Windows Vista or newer workstation OSes, and Server 2003 or newer server OSes. LAPS does not support standalone computers - they must be joined to a domain. <br /> Note: Organizations that utilize 3rd-party commercial software to manage unique & complex local Administrator passwords on domain members may opt to disregard these LAPS recommendations.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, and configure the Password Complexity option to Large letters + small letters + numbers + special characters: Computer Configuration\Policies\Administrative Templates\LAPS\Password Settings <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (AdmPwd.admx/adml) is required - it is included with Microsoft Local Administrator Password Solution (LAPS). ")
	if (AdministrativeTemplatesComputer.DenyDeviceClasses1() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Device Installation \ Device Installation Restrictions \ Prevent installation of devices using drivers that match these device setup classes: Prevent installation of devices using drivers for these device setup")
		a.append("(BL) Ensure 'Prevent installation of devices using drivers that match these device setup classes: Prevent installation of devices using drivers for these device setup' is set to '{d48179be-ec20-11d1-b6b8-00c04fa372a7}'")
		b.append("&#9679; Level 1 + BitLocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to specify a list of device setup class globally unique identifiers (GUIDs) for device drivers that Windows is prevented from installing. This policy setting takes precedence over any other policy setting that allows Windows to install a device. <br /> If you enable this policy setting, Windows is prevented from installing or updating device drivers whose device setup class GUIDs appear in the list you create. If you enable this policy setting on a remote desktop server, the policy setting affects redirection of the specified devices from a remote desktop client to the remote desktop server. <br /> If you disable or do not configure this policy setting, Windows can install and update devices as allowed or prevented by other policy settings.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, and add {d48179be-ec20-11d1-b6b8-00c04fa372a7} to the device setup classes list: Computer Configuration\Policies\Administrative Templates\System\Device Installation\Device Installation Restrictions\Prevent installation of devices using drivers that match these device setup classes")
	if (AdministrativeTemplatesComputer.AdmPwdEnabled() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ LAPS \ Enable Local Admin Password Management")
		a.append("(L1) Ensure 'Enable Local Admin Password Management' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("In May 2015, Microsoft released the Local Administrator Password Solution (LAPS) tool, which is free and supported software that allows an organization to automatically set randomized and unique local Administrator account passwords on domain-attached workstations and member servers. The passwords are stored in a confidential attribute of the domain computer account and can be retrieved from Active Directory by approved Sysadmins when needed. <br /> The LAPS tool requires a small Active Directory Schema update in order to implement, as well as installation of a Group Policy Client Side Extension (CSE) on targeted computers. Please see the LAPS documentation for details. <br /> LAPS supports Windows Vista or newer workstation OSes, and Server 2003 or newer server OSes. LAPS does not support standalone computers - they must be joined to a domain. <br /> Note: Organizations that utilize 3rd-party commercial software to manage unique & complex local Administrator passwords on domain members may opt to disregard these LAPS recommendations.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\LAPS\Enable Local Admin Password Management <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (AdmPwd.admx/adml) is required - it is included with Microsoft Local Administrator Password Solution (LAPS).")
	if (AdministrativeTemplatesComputer.LogonType() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Logon \ Always use classic logon")
		a.append("(L1) Ensure 'Always use classic logon' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting forces the user to log on to the computer using the classic logon screen. By default, a workgroup is set to use the simple logon screen. This setting only works when the computer is not on a domain.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Administrative Templates\System\Logon\Always use classic logon")
	if (AdministrativeTemplatesComputer.RescheduleWaitTime() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Update \ Reschedule Automatic Updates scheduled installations")
		a.append("(L1) Ensure 'Reschedule Automatic Updates scheduled installations' is set to 'Enabled: 1 minute'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines the amount of time before previously scheduled Automatic Update installations will proceed after system startup.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 1 minute: Computer Configuration\Administrative Templates\Windows Components\Windows Update\Reschedule Automatic Updates scheduled installations")
	if (AdministrativeTemplatesComputer.AllowUnencryptedTrafficService() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Management (WinRM) \ WinRM Service \ Allow unencrypted traffic")
		a.append("(L1) Ensure 'Allow unencrypted traffic' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the Windows Remote Management (WinRM) service sends and receives unencrypted messages over the network. <br /> If you enable this policy setting, the WinRM client sends and receives unencrypted messages over the network <br /> If you disable or do not configure this policy setting, the WinRM client sends or receives only encrypted messages over the network.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Remote Management (WinRM)\WinRM Service\Allow unencrypted traffic")
	if (AdministrativeTemplatesComputer.UseTPM() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Require additional authentication at startup: Configure TPM startup:")
		a.append("(BL) Ensure 'Require additional authentication at startup: Configure TPM startup:' is set to 'Enabled: Do not allow TPM'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to configure whether BitLocker requires additional authentication each time the computer starts and whether you are using BitLocker with or without a Trusted Platform Module (TPM). This policy setting is applied when you turn on BitLocker. <br /> Note: Only one of the additional authentication options can be required at startup, otherwise a policy error occurs. <br /> If you want to use BitLocker on a computer without a TPM, select the "Allow BitLocker without a compatible TPM" check box. In this mode a USB drive is required for start-up and the key information used to encrypt the drive is stored on the USB drive, creating a USB key. When the USB key is inserted the access to the drive is authenticated and the drive is accessible. If the USB key is lost or unavailable you will need to use one of the BitLocker recovery options to access the drive. <br /> On a computer with a compatible TPM, four types of authentication methods can be used at startup to provide added protection for encrypted data. When the computer starts, it can use only the TPM for authentication, or it can also require insertion of a USB flash drive containing a startup key, the entry of a 4-digit to 20-digit personal identification number (PIN), or both. <br /> If you enable this policy setting, users can configure advanced startup options in the BitLocker setup wizard. <br /> If you disable or do not configure this policy setting, users can configure only basic options on computers with a TPM. <br /> Note: If you want to require the use of a startup PIN and a USB flash drive, you must configure BitLocker settings using the command-line tool manage-bde instead of the BitLocker Drive Encryption setup wizard.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not allow TPM: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Require additional authentication at startup: Configure TPM startup:")
	if (AdministrativeTemplatesComputer.EnableTranscripting() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows PowerShell \ Turn on PowerShell Transcription")
		a.append("(L1) Ensure 'Turn on PowerShell Transcription' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This Policy setting lets you capture the input and output of Windows PowerShell commands into text-based transcripts.")
		d.append('''To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows PowerShell\Turn on PowerShell Transcription <br /> Note: This Group Policy path does not exist by default. A newer version of the "powershellexecutionpolicy.admx/adml" Administrative Template is required - it is included with the Microsoft Windows 10 Administrative Templates.''')
	if (AdministrativeTemplatesComputer.ACSettingIndex() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Power Management \ Sleep Settings \ llow standby states (S1-S3) when sleeping (plugged in)")
		a.append("(BL) Ensure 'Allow standby states (S1-S3) when sleeping (plugged in)' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Dictates whether or not Windows is allowed to use standby states when sleeping the computer. <br /> When this policy is enabled, Windows may use standby states to sleep the computer. If this policy is disabled, the only sleep state a computer may enter is hibernate.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Power Management\Sleep Settings\Allow standby states (S1-S3) when sleeping (plugged in)")
	if (AdministrativeTemplatesComputer.RDVRecoveryPassword() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Recovery Password")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Recovery Password' is set to 'Enabled: Do not allow 48-digit recovery password'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not allow 48-digit recovery password: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Recovery Password")
	if (AdministrativeTemplatesComputer.FDVEnforceUserCert() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Configure use of smart cards on fixed data drives: Require use of smart cards on fixed data drives")
		a.append("(BL) Ensure 'Configure use of smart cards on fixed data drives: Require use of smart cards on fixed data drives' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to specify whether smart cards can be used to authenticate user access to the BitLocker-protected fixed data drives on a computer. <br /> If you enable this policy setting smart cards can be used to authenticate user access to the drive. You can require a smart card authentication by selecting the "Require use of smart cards on fixed data drives" check box. <br /> Note: These settings are enforced when turning on BitLocker, not when unlocking a drive. BitLocker will allow unlocking a drive with any of the protectors available on the drive. <br /> If you disable this policy setting, users are not allowed to use smart cards to authenticate their access to BitLocker-protected fixed data drives. <br /> If you do not configure this policy setting, smart cards can be used to authenticate user access to a BitLocker-protected drive.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Configure use of smart cards on fixed data drives: Require use of smart cards on fixed data drives")
	if (AdministrativeTemplatesComputer.UseEnhancedPin() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Allow enhanced PINs for startup")
		a.append("(BL) Ensure 'Allow enhanced PINs for startup' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to configure whether or not enhanced startup PINs are used with BitLocker. <br /> Enhanced startup PINs permit the use of characters including uppercase and lowercase letters, symbols, numbers, and spaces. This policy setting is applied when you turn on BitLocker. <br /> If you enable this policy setting, all new BitLocker startup PINs set will be enhanced PINs. <br /> Note: Not all computers may support enhanced PINs in the pre-boot environment. It is strongly recommended that users perform a system check during BitLocker setup. <br /> If you disable or do not configure this policy setting, enhanced PINs will not be used.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Allow enhanced PINs for startup")
	if (AdministrativeTemplatesComputer.AllowBasicService() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Management (WinRM) \ WinRM Service \ Allow Basic authentication")
		a.append("(L1) Ensure 'Allow Basic authentication' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the Windows Remote Management (WinRM) service accepts Basic authentication from a remote client. <br /> If you enable this policy setting, the WinRM service will accept Basic authentication from a remote client. <br /> If you disable or do not configure this policy setting, the WinRM service will not accept Basic authentication from a remote client.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Remote Management (WinRM)\WinRM Service\Allow Basic authentication")
	if (AdministrativeTemplatesComputer.DenyDeviceClassesRetroactive() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Device Installation \ Device Installation Restrictions \ Prevent installation of devices using drivers that match these device setup classes: Also apply to matching devices that are already installed.")
		a.append("(BL) Ensure 'Prevent installation of devices using drivers that match these device setup classes: Also apply to matching devices that are already installed.' is set to 'True' (checked)")
		b.append("&#9679; Level 1 + BitLocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to specify a list of device setup class globally unique identifiers (GUIDs) for device drivers that Windows is prevented from installing. This policy setting takes precedence over any other policy setting that allows Windows to install a device. <br /> If you enable this policy setting, Windows is prevented from installing or updating device drivers whose device setup class GUIDs appear in the list you create. If you enable this policy setting on a remote desktop server, the policy setting affects redirection of the specified devices from a remote desktop client to the remote desktop server. <br /> If you disable or do not configure this policy setting, Windows can install and update devices as allowed or prevented by other policy settings.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, and check the Also apply to matching devices that are already installed. checkbox: Computer Configuration\Policies\Administrative Templates\System\Device Installation\Device Installation Restrictions\Prevent installation of devices using drivers that match these device setup classes")
	if (AdministrativeTemplatesComputer.NoGPOListChanges() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Group Policy \ Configure registry policy processing: Process even if the Group Policy objects have not changed")
		a.append("(L1) Ensure 'Configure registry policy processing: Process even if the Group Policy objects have not changed' is set to 'Enabled: TRUE'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''The "Process even if the Group Policy objects have not changed" option updates and reapplies policies even if the policies have not changed.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled, then set the Process even if the Group Policy objects have not changed option to TRUE (checked): Computer Configuration\Policies\Administrative Templates\System\Group Policy\Configure registry policy processing")
	if (AdministrativeTemplatesComputer.fDisableCcm() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Device and Resource Redirection \ ")
		a.append("(L2) Ensure 'Do not allow COM port redirection' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether to prevent the redirection of data to client COM ports from the remote computer in a Remote Desktop Services session.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Device and Resource Redirection\Do not allow COM port redirection")
	if (AdministrativeTemplatesComputer.RDVDenyWriteAccess() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Deny write access to removable drives not protected by BitLocker")
		a.append("(BL) Ensure 'Deny write access to removable drives not protected by BitLocker' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting configures whether BitLocker protection is required for a computer to be able to write data to a removable data drive. <br /> If you enable this policy setting, all removable data drives that are not BitLocker-protected will be mounted as read-only. If the drive is protected by BitLocker, it will be mounted with read and write access. <br /> If the "Deny write access to devices configured in another organization" option is selected, only drives with identification fields matching the computer's identification fields will be given write access. When a removable data drive is accessed it will be checked for valid identification field and allowed identification fields. These fields are defined by the "Provide the unique identifiers for your organization" policy setting. <br /> If you disable or do not configure this policy setting, all removable data drives on the computer will be mounted with read and write access.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Deny write access to removable drives not protected by BitLocker")
	if (AdministrativeTemplatesComputer.DisableContentFileUpdates() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Search Companion content file updates")
		a.append("(L2) Ensure 'Turn off Search Companion content file updates' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether Search Companion should automatically download content updates during local and Internet searches.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication settings\Turn off Search Companion content file updates")
	if (AdministrativeTemplatesComputer.MinEncryptionLevel() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Security \ Set client connection encryption level")
		a.append("(L1) Ensure 'Set client connection encryption level' is set to 'Enabled: High Level'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether the computer that is about to host the remote connection will enforce an encryption level for all data sent between it and the client computer for the remote session.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: High Level: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Security\Set client connection encryption level")
	if (AdministrativeTemplatesComputer.RDVDenyCrossOrg() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Deny write access to removable drives not protected by BitLocker: Do not allow write access to devices configured in another organization")
		a.append("(BL) Ensure 'Deny write access to removable drives not protected by BitLocker: Do not allow write access to devices configured in another organization' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting configures whether BitLocker protection is required for a computer to be able to write data to a removable data drive. <br /> If you enable this policy setting, all removable data drives that are not BitLocker-protected will be mounted as read-only. If the drive is protected by BitLocker, it will be mounted with read and write access. <br /> If the "Deny write access to devices configured in another organization" option is selected, only drives with identification fields matching the computer's identification fields will be given write access. When a removable data drive is accessed it will be checked for valid identification field and allowed identification fields. These fields are defined by the "Provide the unique identifiers for your organization" policy setting. <br /> If you disable or do not configure this policy setting, all removable data drives on the computer will be mounted with read and write access.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Deny write access to removable drives not protected by BitLocker: Do not allow write access to devices configured in another organization")
	if (AdministrativeTemplatesComputer.OSRecoveryPassword() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Recovery Password")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Recovery Password' is set to 'Enabled: Require 48-digit recovery password'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Require 48-digit recovery password: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Recovery Password")
	if (AdministrativeTemplatesComputer.FDVRequireActiveDirectoryBackup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for fixed data drives")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for fixed data drives' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for fixed data drives")
	if (AdministrativeTemplatesComputer.fDisablePNPRedir() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Device and Resource Redirection \ Do not allow supported Plug and Play device redirection")
		a.append("(L2) Ensure 'Do not allow supported Plug and Play device redirection' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to control the redirection of supported Plug and Play devices, such as Windows Portable Devices, to the remote computer in a Remote Desktop Services session.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Device and Resource Redirection\Do not allow supported Plug and Play device redirection")
	if (AdministrativeTemplatesComputer.OSRecoveryKey() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered: Recovery Key")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered: Recovery Key' is set to 'Enabled: Do not allow 256-bit recovery key'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Do not allow 256-bit recovery key: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered: Recovery Key")
	if (AdministrativeTemplatesComputer.ProcessCreationIncludeCmdLineEnabled() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Audit Process Creation \ Include command line in process creation events")
		a.append("(L1) Ensure 'Include command line in process creation events' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting determines what information is logged in security audit events when a new process has been created.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Audit Process Creation\Include command line in process creation events")
	if (AdministrativeTemplatesComputer.MaxSize() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ Application \ Application: Specify the maximum log file size (KB)")
		a.append("(L1) Ensure 'Application: Specify the maximum log file size (KB)' is set to 'Enabled: 32,768 or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies the maximum size of the log file in kilobytes. If you enable this policy setting, you can configure the maximum log file size to be between 1 megabyte (1,024 kilobytes) and 2 terabytes (2,147,483,647 kilobytes) in kilobyte increments. If you disable or do not configure this policy setting, the maximum size of the log file will be set to the locally configured value. This value can be changed by the local administrator using the Log Properties dialog and it defaults to 20 megabytes.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Enabled: 32,768 or greater: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\Application\Specify the maximum log file size (KB)")
	if (AdministrativeTemplatesComputer.PerformRouterDiscovery() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (PerformRouterDiscovery) Allow IRDP to detect and configure Default Gateway addresses (could lead to DoS)")
		a.append("(L2) Ensure 'MSS: (PerformRouterDiscovery) Allow IRDP to detect and configure Default Gateway addresses (could lead to DoS)' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This setting is used to enable or disable the Internet Router Discovery Protocol (IRDP), which allows the system to detect and configure default gateway addresses automatically as described in RFC 1256 on a per-interface basis.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (PerformRouterDiscovery) Allow IRDP to detect and configure Default Gateway addresses (could lead to DoS) <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.DisableHomeGroup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ HomeGroup \ Prevent the computer from joining a homegroup")
		a.append("(L1) Ensure 'Prevent the computer from joining a homegroup' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("By default, users can add their computer to a homegroup on a home network. <br /> If you enable this policy setting, a user on this computer will not be able to add this computer to a homegroup. This setting does not affect other network sharing features. <br /> If you disable or do not configure this policy setting, a user can add this computer to a homegroup. However, data on a domain-joined computer is not shared with the homegroup. Configure this setting in a manner that is consistent with security and operational requirements of your organization. ")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\HomeGroup\Prevent the computer from joining a homegroup")
	if (AdministrativeTemplatesComputer.RDVHideRecoveryPage() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Omit recovery options from the BitLocker setup wizard")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Omit recovery options from the BitLocker setup wizard' is set to 'Enabled: True'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: True (checked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Omit recovery options from the BitLocker setup wizard")
	if (AdministrativeTemplatesComputer.NoDataExecutionPrevention() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ File Explorer \ Previous Versions \ Turn off Data Execution Prevention for Explorer")
		a.append("(L1) Ensure 'Turn off Data Execution Prevention for Explorer' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Disabling data execution prevention can allow certain legacy plug-in applications to function without terminating Explorer.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\File Explorer\Turn off Data Execution Prevention for Explorer")
	if (AdministrativeTemplatesComputer.HardenedPaths() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ Network Provider \ Hardened UNC Paths and Require Integrity")
		a.append('''(L1) Ensure 'Hardened UNC Paths' is set to 'Enabled, with "Require Mutual Authentication" and "Require Integrity" set for all NETLOGON and SYSVOL shares' ''')
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting configures secure access to UNC paths. <br /> Note: If the environment exclusively contains Windows 8.0 / Server 2012 or higher systems, then the "Privacy" setting may (optionally) also be set to enable SMB encryption. However, using SMB encryption will render the targeted share paths completely inaccessible by older OSes, so only use this additional option with caution and thorough testing.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled with the following paths configured, at a minimum: <br /> \\\*\NETLOGON RequireMutualAuthentication=1, RequireIntegrity=1 <br /> \\\*\SYSVOL RequireMutualAuthentication=1, RequireIntegrity=1 <br /> Computer Configuration\Policies\Administrative Templates\Network\Network Provider\Hardened UNC Paths <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (NetworkProvider.admx/adml) is required - it is included with KB3000483 or with the Microsoft Windows 10 Administrative Templates.")
	if (AdministrativeTemplatesComputer.FDVActiveDirectoryBackup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Save BitLocker recovery information to AD DS for fixed data drives")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Save BitLocker recovery information to AD DS for fixed data drives' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Save BitLocker recovery information to AD DS for fixed data drives")
	if (AdministrativeTemplatesComputer.MinimumPIN() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Configure minimum PIN length for startup")
		a.append("(BL) Ensure 'Configure minimum PIN length for startup' is set to 'Enabled: 7 or more characters'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to configure a minimum length for a Trusted Platform Module (TPM) startup PIN. This policy setting is applied when you turn on BitLocker. The startup PIN must have a minimum length of 4 digits and can have a maximum length of 20 digits. < br /> If you enable this policy setting, you can require a minimum number of digits to be used when setting the startup PIN. <br /> If you disable or do not configure this policy setting, users can configure a startup PIN of any length between 4 and 20 digits.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 7 or more characters: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Configure minimum PIN length for startup")
	if (AdministrativeTemplatesComputer.RDVRequireActiveDirectoryBackup() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Choose how BitLocker-protected removable drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for removable data drives")
		a.append("(BL) Ensure 'Choose how BitLocker-protected removable drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for removable data drives' is set to 'Enabled: False'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected removable data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected removable data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services" choose which BitLocker recovery information to store in AD DS for removable data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. If you select "Backup recovery password only" only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for removable data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected removable data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: False (unchecked): Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Choose how BitLocker-protected removable drives can be recovered: Do not enable BitLocker until recovery information is stored to AD DS for removable data drives")
	if (AdministrativeTemplatesComputer.fDenyTSConnections() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Connections \ Allow users to connect remotely by using Remote Desktop Services")
		a.append("(L2) Ensure 'Allow users to connect remotely by using Remote Desktop Services' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to configure remote access to computers by using Remote Desktop Services. <br /> If you enable this policy setting, users who are members of the Remote Desktop Users group on the target computer can connect remotely to the target computer by using Remote Desktop Services. <br /> If you disable this policy setting, users cannot connect remotely to the target computer by using Remote Desktop Services. The target computer will maintain any current connections, but will not accept any new incoming connections. <br /> If you do not configure this policy setting, Remote Desktop Services uses the Remote Desktop setting on the target computer to determine whether the remote connection is allowed. This setting is found on the Remote tab in the System properties sheet. By default, remote connections are not allowed. <br /> Note: You can limit which clients are able to connect remotely by using Remote Desktop Services by configuring the policy setting at Computer Configuration\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Security\Require user authentication for remote connections by using Network Level Authentication. <br /> You can limit the number of users who can connect simultaneously by configuring the policy setting at Computer Configuration\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Connections\Limit number of connections, or by configuring the policy setting Maximum Connections by using the Remote Desktop Session Host WMI Provider.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Connections\Allow users to connect remotely by using Remote Desktop Services")
	if (AdministrativeTemplatesComputer.fAllowToGetHelp() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Remote Assistance \ Configure Solicited Remote Assistance")
		a.append("(L1) Ensure 'Configure Solicited Remote Assistance' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append('''This policy setting allows you to turn on or turn off Solicited (Ask for) Remote Assistance on this computer. <br /> If you enable this policy setting, users on this computer can use email or file transfer to ask someone for help. Also, users can use instant messaging programs to allow connections to this computer, and you can configure additional Remote Assistance settings. <br /> If you disable this policy setting, users on this computer cannot use email or file transfer to ask someone for help. Also, users cannot use instant messaging programs to allow connections to this computer. <br /> If you do not configure this policy setting, users can turn on or turn off Solicited (Ask for) Remote Assistance themselves in System Properties in Control Panel. Users can also configure Remote Assistance settings. <br /> If you enable this policy setting, you have two ways to allow helpers to provide Remote Assistance: "Allow helpers to only view the computer" or "Allow helpers to remotely control the computer." <br /> The "Maximum ticket time" policy setting sets a limit on the amount of time that a Remote Assistance invitation created by using email or file transfer can remain open <br /> The "Select the method for sending email invitations" setting specifies which email standard to use to send Remote Assistance invitations. Depending on your email program, you can use either the Mailto standard (the invitation recipient connects through an Internet link) or the SMAPI (Simple MAPI) standard (the invitation is attached to your email message). This policy setting is not available in Windows Vista since SMAPI is the only method supported. <br /> If you enable this policy setting you should also enable appropriate firewall exceptions to allow Remote Assistance communications.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: Computer Configuration\Policies\Administrative Templates\System\Remote Assistance\Configure Solicited Remote Assistance")
	if (AdministrativeTemplatesComputer.Disablesavepassword() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (DisableSavePassword) Prevent the dial-up password from being saved")
		a.append("(L2) Ensure 'MSS: (DisableSavePassword) Prevent the dial-up password from being saved' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("When you dial a phonebook or VPN entry in Dial-Up Networking, you can use the 'Save Password' option so that your Dial-Up Networking password is cached and you will not need to enter it on successive dial attempts. For security, administrators may want to prevent users from caching passwords.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS:(DisableSavePassword) Prevent the dial-up password from being saved <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.MaxIdleTime() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Session Time Limits \ Set time limit for active but idle Remote Desktop Services sessions")
		a.append("(L2) Ensure 'Set time limit for active but idle Remote Desktop Services sessions' is set to 'Enabled: 15 minutes or less'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to specify the maximum amount of time that an active Remote Desktop Services session can be idle (without user input) before it is automatically disconnected.")
		d.append("")
	if (AdministrativeTemplatesComputer.AllowRemoteShellAccess() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Shell \ Allow Remote Shell Access")
		a.append("(L2) Ensure 'Allow Remote Shell Access' is set to 'Disabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting allows you to manage configuration of remote access to all supported shells to execute scripts and commands.")
		d.append("To implement the recommended configuration state, set the following Group Policy setting to Disabled. Computer Configuration\Administrative Templates\Windows Components\Windows Remote Shell\Allow Remote Shell Access")
	if (AdministrativeTemplatesComputer.DisabledComponents() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Network \ TCPIP Settings \ Parameters \ Disable IPv6")
		a.append("(L2) Disable IPv6 (Ensure TCPIP6 Parameter 'DisabledComponents' is set to '0xff (255)')")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("Internet Protocol version 6 (IPv6) is a set of protocols that computers use to exchange information over the Internet and over home and business networks. IPv6 allows for many more IP addresses to be assigned than IPv4 did. Older networking, hosts and operating systems may not support IPv6 natively.")
		d.append('''To establish the recommended configuration, set the following Registry value to 0xff (255) (DWORD): HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TCPIP6\Parameters:DisabledComponents <br /> Note: Although Microsoft does not provide an ADMX template to configure this registry value, a custom .ADM template (Disable-IPv6-Components-KB929852.adm) is provided in the CIS Benchmark Remediation Kit to facilitate its configuration. Be aware though that simply turning off the group policy setting in the .ADM template will not "undo" the change once applied. Instead, the opposite setting must be applied to change the registry value to the opposite state.''')
	if (AdministrativeTemplatesComputer.NoAutoplayfornonVolume() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ AutoPlay Policies \ Disallow Autoplay for non-volume devices")
		a.append("(L1) Ensure 'Disallow Autoplay for non-volume devices' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting disallows AutoPlay for MTP devices like cameras or phones.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\AutoPlay Policies\Disallow Autoplay for non-volume devices")
	if (AdministrativeTemplatesComputer.WARNINGLevel() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning")
		a.append("(L1) Ensure 'MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning' is set to 'Enabled: 90% or less'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting can generate a security audit in the Security event log when the log reaches a user-defined threshold. <br /> Note: If log settings are configured to Overwrite events as needed or Overwrite events older than x days, this event will not be generated.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 90% or less: Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (WarningLevel) Percentage threshold for the security event log at which the system will generate a warning <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.fDisableCdm() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Device and Resource Redirection \ ")
		a.append("(L1) Ensure 'Do not allow drive redirection' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting prevents users from sharing the local drives on their client computers to Terminal Servers that they access. Mapped drives appear in the session folder tree in Windows Explorer in the following format: <br /> \\\TSClient\<driveletter>$ <br /> If local drives are shared they are left vulnerable to intruders who want to exploit the data that is stored on them.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Device and Resource Redirection\Do not allow drive redirection")
	if (AdministrativeTemplatesComputer.IE() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ Default Protections for Internet Explorer")
		a.append("(L1) Ensure 'Default Protections for Internet Explorer' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This settings determine if EMET mitigations are applied to Internet Explorer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\Default Protections for Internet Explorer <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.DisableRunAs() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Remote Management (WinRM) \ WinRM Service \ Disallow WinRM from storing RunAs credentials")
		a.append("(L1) Ensure 'Disallow WinRM from storing RunAs credentials' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether the Windows Remote Management (WinRM) service will not allow RunAs credentials to be stored for any plug-ins. <br /> If you enable this policy setting, the WinRM service will not allow the RunAsUser or RunAsPassword configuration values to be set for any plug-ins. If a plug-in has already set the RunAsUser and RunAsPassword configuration values, the RunAsPassword configuration value will be erased from the credential store on this computer. <br /> If you disable or do not configure this policy setting, the WinRM service will allow the RunAsUser and RunAsPassword configuration values to be set for plug-ins and the RunAsPassword value will be stored securely. <br /> If you enable and then disable this policy setting, any values that were previously configured for RunAsPassword will need to be reset.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Remote Management (WinRM)\WinRM Service\Disallow WinRM from storing RunAs credentials")
	if (AdministrativeTemplatesComputer.SEHOP() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ EMET \ System SEHOP")
		a.append("(L1) Ensure 'System SEHOP' is set to 'Enabled: Application Opt-Out'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines how applications become enrolled in structured exception handler overwrite protection (SEHOP).")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Application Opt-Out: Computer Configuration\Policies\Administrative Templates\Windows Components\EMET\System SEHOP <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (EMET.admx/adml) is required - it is included with Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
	if (AdministrativeTemplatesComputer.NtpClient() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ System \ Troubleshooting and Diagnostics \ Windows Time Service \ Time Providers \ Enable Windows NTP Client")
		a.append("(L2) Ensure 'Enable Windows NTP Client' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether the Windows NTP Client is enabled. Enabling the Windows NTP Client allows your computer to synchronize its computer clock with other NTP servers. You might want to disable this service if you decide to use a third-party time provider.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\System\Windows Time Service\Time Providers\Enable Windows NTP Client")
	if (AdministrativeTemplatesComputer.RDVAllowUserCert() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Removable Data Drives \ Configure use of smart cards on removable data drives")
		a.append("(BL) Ensure 'Configure use of smart cards on removable data drives' is set to 'Enabled'")
		b.append("&#9679; Level 1+ Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting specifies whether a password is required to unlock BitLocker-protected removable data drives. If you choose to allow use of a password, you can require a password to be used, enforce complexity requirements, and configure a minimum length. For the complexity requirement setting to be effective the Group Policy setting "Password must meet complexity requirements" located in Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\ must be also enabled. <br /> Note: These settings are enforced when turning on BitLocker, not when unlocking a volume. BitLocker will allow unlocking a drive with any of the protectors available on the drive. <br /> If you enable this policy setting, users can configure a password that meets the requirements that you define. To require the use of a password, select "Require password for removable data drive". To enforce complexity requirements on the password, select "Require complexity". <br /> When set to "Require complexity" a connection to a domain controller is necessary when BitLocker is enabled to validate the complexity the password. When set to "Allow complexity" a connection to a domain controller will be attempted to validate the complexity adheres to the rules set by the policy, but if no domain controllers are found the password will still be accepted regardless of actual password complexity and the drive will be encrypted using that password as a protector. When set to "Do not allow complexity", no password complexity validation will be done. <br /> Passwords must be at least 8 characters. To configure a greater minimum length for the password, enter the desired number of characters in the "Minimum password length" box. <br /> If you disable this policy setting, the user is not allowed to use a password. <br /> If you do not configure this policy setting, passwords will be supported with the default settings, which do not include password complexity requirements and require only 8 characters. <br /> Note: Passwords cannot be used if FIPS-compliance is enabled. The "System cryptography: Use FIPS-compliant algorithms for encryption, hashing, and signing" policy setting in Computer Configuration\Windows Settings\Security Settings\Local Policies\Security Options specifies whether FIPS-compliance is enabled.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Removable Data Drives\Configure use of smart cards on removable data drives")
	if (AdministrativeTemplatesComputer.KeepAliveTime() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ MSS (Legacy) \ MSS: (KeepAliveTime) How often keep-alive packets are sent in milliseconds")
		a.append("(L2) Ensure 'MSS: (KeepAliveTime) How often keep-alive packets are sent in milliseconds' is set to 'Enabled: 300,000 or 5 minutes (recommended)'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This value controls how often TCP attempts to verify that an idle connection is still intact by sending a keep-alive packet. If the remote computer is still reachable, it acknowledges the keep-alive packet.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 300,000 or 5 minutes (recommended): Computer Configuration\Policies\Administrative Templates\MSS (Legacy)\MSS: (KeepAliveTime) How often keep-alive packets are sent in milliseconds <br /> Note: This Group Policy path does not exist by default. An additional Group Policy template (MSS-legacy.admx/adml) is required - it is included with Microsoft Security Compliance Manager (SCM).")
	if (AdministrativeTemplatesComputer.OSRecovery() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Operating System Drives \ Choose how BitLocker-protected operating system drives can be recovered")
		a.append("(BL) Ensure 'Choose how BitLocker-protected operating system drives can be recovered' is set to 'Enabled'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected operating system drives are recovered in the absence of the required startup key information. This policy setting is applied when you turn on BitLocker. <br /> The "Allow certificate-based data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected operating system drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Domain Services", choose which BitLocker recovery information to store in AD DS for operating system drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for operating system drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected operating system drives. <br /> If this policy setting is disabled or not configured, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Operating System Drives\Choose how BitLocker-protected operating system drives can be recovered")
	if (AdministrativeTemplatesComputer.DefaultConsent() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Error Reporting \ Consent \ Configure Default consent")
		a.append("(L1) Ensure 'Configure Default consent' is set to 'Enabled: Always ask before sending data'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting allows you to set the default consent handling for error reports.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Always ask before sending data: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Error Reporting\Consent\Configure Default consent")
	if (AdministrativeTemplatesComputer.DisableEnclosureDownload() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ RSS Feeds \ Prevent downloading of enclosures")
		a.append("(L1) Ensure 'Prevent downloading of enclosures' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting prevents the user from having enclosures (file attachments) downloaded from a feed to the user's computer.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\RSS Feeds\Prevent downloading of enclosures")
	if (AdministrativeTemplatesComputer.ScheduledInstallDay() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Windows Update \ Configure Automatic Updates: Scheduled install day")
		a.append("(L1) Ensure 'Configure Automatic Updates: Scheduled install day' is set to '0 - Every day'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether computers in your environment will receive security updates from Windows Update or WSUS. If you configure this policy setting to Enabled, the operating system will recognize when a network connection is available and then use the network connection to search Windows Update or your designated intranet site for updates that apply to them. <br /> After you configure this policy setting to Enabled, select one of the following three options in the Configure Automatic Updates Properties dialog box to specify how the service will work: <br /> - Notify before downloading any updates and notify again before installing them. <br /> - Download the updates automatically and notify when they are ready to be installed. (Default setting) <br />  - Automatically download updates and install them on the schedule specified below. <br /> If you disable this policy setting, you will need to download and manually install any available updates from Windows Update.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 0 - Every day: Computer Configuration\Policies\Administrative Templates\Windows Components\Windows Update\Configure Automatic Updates: Scheduled install day")
	if (AdministrativeTemplatesComputer.FDVActiveDirectoryInfoToStore() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ BitLocker Drive Encryption \ Fixed Data Drives \ Choose how BitLocker-protected fixed drives can be recovered: Configure storage of BitLocker recovery information to AD DS")
		a.append("(BL) Ensure 'Choose how BitLocker-protected fixed drives can be recovered: Configure storage of BitLocker recovery information to AD DS' is set to 'Enabled: Backup recovery passwords and key packages'")
		b.append("&#9679; Level 1 + Bitlocker <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append('''This policy setting allows you to control how BitLocker-protected fixed data drives are recovered in the absence of the required credentials. This policy setting is applied when you turn on BitLocker. <br /> The "Allow data recovery agent" check box is used to specify whether a data recovery agent can be used with BitLocker-protected fixed data drives. Before a data recovery agent can be used it must be added from the Public Key Policies item in either the Group Policy Management Console or the Local Group Policy Editor. Consult the BitLocker Drive Encryption Deployment Guide on Microsoft TechNet for more information about adding data recovery agents. <br /> In "Configure user storage of BitLocker recovery information" select whether users are allowed, required, or not allowed to generate a 48-digit recovery password or a 256-bit recovery key. <br /> Select "Omit recovery options from the BitLocker setup wizard" to prevent users from specifying recovery options when they enable BitLocker on a drive. This means that you will not be able to specify which recovery option to use when you enable BitLocker, instead BitLocker recovery options for the drive are determined by the policy setting. <br /> In "Save BitLocker recovery information to Active Directory Doman Services" choose which BitLocker recovery information to store in AD DS for fixed data drives. If you select "Backup recovery password and key package", both the BitLocker recovery password and key package are stored in AD DS. Storing the key package supports recovering data from a drive that has been physically corrupted. If you select "Backup recovery password only," only the recovery password is stored in AD DS. <br /> Select the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box if you want to prevent users from enabling BitLocker unless the computer is connected to the domain and the backup of BitLocker recovery information to AD DS succeeds. <br /> Note: If the "Do not enable BitLocker until recovery information is stored in AD DS for fixed data drives" check box is selected, a recovery password is automatically generated. <br /> If you enable this policy setting, you can control the methods available to users to recover data from BitLocker-protected fixed data drives. <br /> If this policy setting is not configured or disabled, the default recovery options are supported for BitLocker recovery. By default a DRA is allowed, the recovery options can be specified by the user including the recovery password and recovery key, and recovery information is not backed up to AD DS.''')
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Backup recovery passwords and key packages: Computer Configuration\Policies\Administrative Templates\Windows Components\BitLocker Drive Encryption\Fixed Data Drives\Choose how BitLocker-protected fixed drives can be recovered: Configure storage of BitLocker recovery information to AD DS:")
	if (AdministrativeTemplatesComputer.fEncryptRPCTraffic() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Remote Desktop Services (formerly Terminal Services) \ Remote Desktop Session Host \ Security \ Require secure RPC communication")
		a.append("(L1) Ensure 'Require secure RPC communication' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to specify whether a terminal server requires secure remote procedure call (RPC) communication with all clients or allows unsecured communication. <br /> You can use this policy setting to strengthen the security of RPC communication with clients by allowing only authenticated and encrypted requests.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Remote Desktop Services\Remote Desktop Session Host\Security\Require secure RPC communication")
	if (AdministrativeTemplatesComputer.Retention() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (Computer) \ Windows Components \ Event Log Service \ Application \ Application: Control Event Log behavior when the log file reaches its maximum size")
		a.append("(L1) Ensure 'Application: Control Event Log behavior when the log file reaches its maximum size' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting controls Event Log behavior when the log file reaches its maximum size. If you enable this policy setting and a log file reaches its maximum size, new events are not written to the log and are lost. If you disable or do not configure this policy setting and a log file reaches its maximum size, new events overwrite old events.")
		d.append("To establish the recommended configuration via GP, set the following Group Policy setting to Disabled: Computer Configuration\Policies\Administrative Templates\Windows Components\Event Log Service\Application\Control Event Log behavior when the log file reaches its maximum size")
	if (AdministrativeTemplatesUser.NoImplicitFeedback() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ System \ Internet Communication Management \ Internet Communication settings \ Turn off Help Experience Improvement Program")
		a.append("(L2) Ensure 'Turn off Help Experience Improvement Program' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This policy setting specifies whether users can participate in the Help Experience Improvement program. The Help Experience Improvement program collects information about how customers use Windows Help so that Microsoft can improve it.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: User Configuration\Policies\Administrative Templates\System\Internet Communication Management\Internet Communication Settings\Turn off Help Experience Improvement Program")
	if (AdministrativeTemplatesUser.ScreenSaveTimeOut() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Control Panel \ Personalization \ Screen saver timeout")
		a.append("(L1) Ensure 'Screen saver timeout' is set to 'Enabled: 900 seconds or fewer, but not 0'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("If the Screen Saver Timeout setting is enabled, then the screen saver will be launched when the specified amount of time has passed since the last user action. Valid values range from 1 to 89,400 seconds (24 hours). The setting has no effect if the wait time is set to zero or no screen saver has been specified.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: 900 or fewer, but not 0: User Configuration\Policies\Administrative Templates\Control Panel\Personalization\Screen saver timeout")
	if (AdministrativeTemplatesUser.ScreenSaverIsSecure() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Control Panel \ Personalization \ Password protect the screen saver")
		a.append("(L1) Ensure 'Password protect the screen saver' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("If the Password protect the screen saver setting is enabled, then all screen savers are password protected, if it is disabled then password protection cannot be set on any screen saver.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: User Configuration\Policies\Administrative Templates\Control Panel\Personalization\Password protect the screen saver")
	if (AdministrativeTemplatesUser.ScanWithAntiVirus() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Windows Components \ Attachment Manager \ Notify antivirus programs when opening attachments")
		a.append("(L1) Ensure 'Notify antivirus programs when opening attachments' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Antivirus programs are mandatory in many environments and provide a strong defense against attack. <br /> The Notify antivirus programs when opening attachments setting allows you to manage how registered antivirus programs are notified. When enabled, this policy setting configures Windows to call the registered antivirus program and have it scan file attachments when they are opened by users. If the antivirus scan fails, the attachments are blocked from being opened. If this policy setting is disabled, Windows does not call the registered antivirus program when file attachments are opened.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: User Configuration\Policies\Administrative Templates\Windows Components\Attachment Manager\Notify antivirus programs when opening attachments")
	if (AdministrativeTemplatesUser.SaveZoneInformation() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Windows Components \ Attachment Manager \ Do not preserve zone information in file attachments")
		a.append("(L1) Ensure 'Do not preserve zone information in file attachments' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether Windows marks file attachments from Internet Explorer or Microsoft Outlook' Express with information about their zone of origin (such as restricted, Internet, intranet, or local). This policy setting requires that files be downloaded to NTFS disk partitions to function correctly. If zone information is not preserved, Windows cannot make proper risk assessments based on the zone where the attachment came from. <br /> If the Do not preserve zone information in file attachments setting is enabled, file attachments are not marked with their zone information. If this policy setting is disabled, Windows is forced to store file attachments with their zone information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: User Configuration\Policies\Administrative Templates\Windows Components\Attachment Manager\Do not preserve zone information in file attachments")
	if (AdministrativeTemplatesUser.AlwaysInstallElevated() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Windows Components \ Windows Installer \ Always install with elevated privileges")
		a.append("(L1) Ensure 'Always install with elevated privileges' is set to 'Disabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Directs Windows Installer to use system permissions when it installs any program on the system. <br /> This setting extends elevated privileges to all programs. These privileges are usually reserved for programs that have been assigned to the user (offered on the desktop), assigned to the computer (installed automatically), or made available in Add or Remove Programs in Control Panel. This setting lets users install programs that require access to directories that the user might not have permission to view or change, including directories on highly restricted computers. <br /> If you disable this setting or do not configure it, the system applies the current user's permissions when it installs programs that a system administrator does not distribute or offer. <br /> Note: This setting appears both in the Computer Configuration and User Configuration folders. To make this setting effective, you must enable the setting in both folders. <br /> Caution: Skilled users can take advantage of the permissions this setting grants to change their privileges and gain permanent access to restricted files and folders. Note that the User Configuration version of this setting is not guaranteed to be secure.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Disabled: User Configuration\Policies\Administrative Templates\Windows Components\Windows Installer\Always install with elevated privileges")
	if (AdministrativeTemplatesUser.SCRNSAVE() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Control Panel \ Personalization \ Force specific screen saver: Screen saver executable name")
		a.append("(L1) Ensure 'Force specific screen saver: Screen saver executable name' is set to 'Enabled: scrnsave.scr'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether or not screen savers run. If the Screen Saver setting is disabled screen savers do not run and the screen saver section of the Screen Saver tab in Display in Control Panel is disabled. If this setting is enabled a screen saver will run if the following two conditions are met: first, that a valid screen saver is specified on the client via the Screen Saver Executable Name group policy setting or Control Panel on the client. Second, the screensaver timeout is set to a value greater than zero via the Screen Saver Timeout group policy setting or Control Panel on the client.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: scrnsave.scr: User Configuration\Policies\Administrative Templates\Control Panel\Personalization\Force specific screen saver")
	if (AdministrativeTemplatesUser.NoInplaceSharing() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Windows Components \ Network Sharing \ Prevent users from sharing files within their profile.")
		a.append("(L1) Ensure 'Prevent users from sharing files within their profile.' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting specifies whether users can share files within their profile. By default users are allowed to share files within their profile to other users on their network after an administrator opts in the computer. An administrator can opt in the computer by using the sharing wizard to share a file within their profile.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: User Configuration\Policies\Administrative Templates\Windows Components\Network Sharing\Prevent users from sharing files within their profile.")
	if (AdministrativeTemplatesUser.PreventCodecDownload() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Windows Components \ Windows Media Player \ Playback \ Prevent Codec Download")
		a.append("(L2) Ensure 'Prevent Codec Download' is set to 'Enabled'")
		b.append("&#9679; Level 2 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 2 + BitLocker")
		c.append("This setting controls whether Windows Media Player is allowed to download additional codecs for decoding media files it does not already understand.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: User Configuration\Policies\Administrative Templates\Windows Components\Windows Media Player\Playback\Prevent Codec Download")
	if (AdministrativeTemplatesUser.ScreenSaveActive() == 'WARNING') ==1 :  
		temp.append("Administrative Templates (User) \ Control Panel \ Personalization \ Enable screen saver")
		a.append("(L1) Ensure 'Enable screen saver' is set to 'Enabled'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to manage whether or not screen savers run. If the Screen Saver setting is disabled screen savers do not run and the screen saver section of the Screen Saver tab in Display in Control Panel is disabled. If this setting is enabled a screen saver will run if the following two conditions are met: first, that a valid screen saver is specified on the client via the Screen Saver Executable Name group policy setting or Control Panel on the client. Second, the screensaver timeout is set to a value greater than zero via the Screen Saver Timeout group policy setting or Control Panel on the client.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Enabled: User Configuration\Policies\Administrative Templates\Control Panel\Personalization\Enable screen saver")
	if (AdvancedAuditPolicyConfiguration.AuditApplicationGroupManagement() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Account Management \ Audit Application Group Management \ ")
		a.append("(L1) Ensure 'Audit Application Group Management' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This policy setting allows you to audit events generated by changes to application groups such as the following: <br /> &#9679 Application group is created, changed, or deleted. <br /> &#9679 Member is added or removed from an application group. <br /> Application groups are utilized by Windows Authorization Manager, which is a flexible framework created by Microsoft for integrating role-based access control (RBAC) into applications. More information on Windows Authorization Manager is available at MSDN - Windows Authorization Manager.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Account Management\Audit Application Group Management")
	if (AdvancedAuditPolicyConfiguration.AuditSecuritySystemExtension() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ System \ Audit Security System Extension")
		a.append("(L1) Ensure 'Audit Security System Extension' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports the loading of extension code such as authentication packages by the security subsystem. Events for this subcategory include: <br /> &#9679 4610: An authentication package has been loaded by the Local Security Authority. <br /> &#9679 4611: A trusted logon process has been registered with the Local Security Authority. <br /> &#9679 4614: A notification package has been loaded by the Security Account Manager. <br /> &#9679 4622: A security package has been loaded by the Local Security Authority. <br /> &#9679 4697: A service was installed in the system. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\System\Audit Security System Extension")
	if (AdvancedAuditPolicyConfiguration.AuditCredentialValidation() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Account Logon \ Audit Credential Validation")
		a.append("(L1) Ensure 'Audit Credential Validation' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports the results of validation tests on credentials submitted for a user account logon request. These events occur on the computer that is authoritative for the credentials. For domain accounts, the domain controller is authoritative, whereas for local accounts, the local computer is authoritative. In domain environments, most of the Account Logon events occur in the Security log of the domain controllers that are authoritative for the domain accounts. However, these events can occur on other computers in the organization when local accounts are used to log on. Events for this subcategory include: <br /> &#9679 4774: An account was mapped for logon. <br /> &#9679 4775: An account could not be mapped for logon.<br /> &#9679 4776: The domain controller attempted to validate the credentials for an account.<br /> &#9679 4777: The domain controller failed to validate the credentials for an account.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Account Logon\Audit Credential Validation")
	if (AdvancedAuditPolicyConfiguration.AuditSensitivePrivilegeUse() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Privilege Use \ Audit Sensitive Privilege Use")
		a.append("(L1) Ensure 'Audit Sensitive Privilege Use' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports when a user account or service uses a sensitive privilege. A sensitive privilege includes the following user rights: Act as part of the operating system, Back up files and directories, Create a token object, Debug programs, Enable computer and user accounts to be trusted for delegation, Generate security audits, Impersonate a client after authentication, Load and unload device drivers, Manage auditing and security log, Modify firmware environment values, Replace a process-level token, Restore files and directories, and Take ownership of files or other objects. Auditing this subcategory will create a high volume of events. Events for this subcategory include: <br /> &#9679 4672: Special privileges assigned to new logon. <br /> &#9679 4673: A privileged service was called. <br /> &#9679 4674: An operation was attempted on a privileged object.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Privilege Use\Audit Sensitive Privilege Use")
	if (AdvancedAuditPolicyConfiguration.AuditAuthenticationPolicyChange() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Policy Change \ Audit Authentication Policy Change")
		a.append("(L1) Ensure 'Audit Authentication Policy Change' is set to 'Success' (")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports changes in authentication policy. Events for this subcategory include: <br /> &#9679 4706: A new trust was created to a domain. <br /> &#9679 4707: A trust to a domain was removed. <br /> &#9679 4713: Kerberos policy was changed <br /> &#9679 4716: Trusted domain information was modified. <br /> &#9679 4717: System security access was granted to an account. <br /> &#9679 4718: System security access was removed from an account. <br /> &#9679 4739: Domain Policy was changed. <br /> &#9679 4864: A namespace collision was detected. <br /> &#9679 4865: A trusted forest information entry was added. <br /> &#9679 4866: A trusted forest information entry was removed. <br /> &#9679 4867: A trusted forest information entry was modified. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Policy Change\Audit Authentication Policy Change")
	if (AdvancedAuditPolicyConfiguration.AuditLogon() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Logon/Logoff \ Audit Logon ")
		a.append("(L1) Ensure 'Audit Logon' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports when a user attempts to log on to the system. These events occur on the accessed computer. For interactive logons, the generation of these events occurs on the computer that is logged on to. If a network logon takes place to access a share, these events generate on the computer that hosts the accessed resource. If you configure this setting to No auditing, it is difficult or impossible to determine which user has accessed or attempted to access organization computers. Events for this subcategory include: <br /> &#9679 4624: An account was successfully logged on. <br /> &#9679 4625: An account failed to log on. <br /> &#9679 4648: A logon was attempted using explicit credentials <br /> &#9679 4675: SIDs were filtered")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Logon/Logoff\Audit Logon")
	if (AdvancedAuditPolicyConfiguration.AuditLogoff() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Logon/Logoff \ Audit Logoff ")
		a.append("(L1) Ensure 'Audit Logoff' is set to 'Success'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports when a user logs off from the system. These events occur on the accessed computer. For interactive logons, the generation of these events occurs on the computer that is logged on to. If a network logon takes place to access a share, these events generate on the computer that hosts the accessed resource. If you configure this setting to No auditing, it is difficult or impossible to determine which user has accessed or attempted to access organization computers. Events for this subcategory include: <br /> &#9679 4634: An account was logged off. <br /> &#9679 4647: User initiated logoff.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Logon/Logoff\Audit Logoff")
	if (AdvancedAuditPolicyConfiguration.AuditProcessCreation() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Detailed Tracking \ Audit Process Creation")
		a.append("(L1) Ensure 'Audit Process Creation' is set to 'Success'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports the creation of a process and the name of the program or user that created it. Events for this subcategory include: <br /> &#9679 4688: A new process has been created. <br /> &#9679 4696: A primary token was assigned to process. <br /> Refer to Microsoft Knowledge Base article 947226: Description of security events in Windows Vista and in Windows Server 2008 for the most recent information about this setting.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Detailed Tracking\Audit Process Creation")
	if (AdvancedAuditPolicyConfiguration.AuditOtherSystemEvents() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ System \ Audit Other System Events")
		a.append("(L1) Ensure 'Audit Other System Events' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports on other system events. Events for this subcategory include: <br /> &#9679 5024 : The Windows Firewall Service has started successfully. <br /> &#9679 5025 : The Windows Firewall Service has been stopped. <br /> &#9679 5027 : The Windows Firewall Service was unable to retrieve the security policy from the local storage. The service will continue enforcing the current policy. <br /> &#9679 5028 : The Windows Firewall Service was unable to parse the new security policy. The service will continue with currently enforced policy. <br /> &#9679 5029: The Windows Firewall Service failed to initialize the driver. The service will continue to enforce the current policy. <br /> &#9679 5030: The Windows Firewall Service failed to start. <br /> &#9679 5032: Windows Firewall was unable to notify the user that it blocked an application from accepting incoming connections on the network. <br /> &#9679 5033 : The Windows Firewall Driver has started successfully. <br /> &#9679 5034 : The Windows Firewall Driver has been stopped. <br /> &#9679 5035 : The Windows Firewall Driver failed to start. <br /> &#9679 5037 : The Windows Firewall Driver detected critical runtime error. Terminating. <br /> &#9679 5058: Key file operation. <br /> &#9679 5059: Key migration operation.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\System\Audit Other System Events")
	if (AdvancedAuditPolicyConfiguration.AuditSystemIntegrity() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ System \ Audit System Integrity")
		a.append("(L1) Ensure 'Audit System Integrity' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports on violations of integrity of the security subsystem. Events for this subcategory include: <br /> &#9679 4612 : Internal resources allocated for the queuing of audit messages have been exhausted, leading to the loss of some audits. <br /> &#9679 4615 : Invalid use of LPC port. <br /> &#9679 4618 : A monitored security event pattern has occurred. <br /> &#9679 4816 : RPC detected an integrity violation while decrypting an incoming message. <br /> &#9679 5038 : Code integrity determined that the image hash of a file is not valid. The file could be corrupt due to unauthorized modification or the invalid hash could indicate a potential disk device error. <br /> &#9679 5056: A cryptographic self test was performed. <br /> &#9679 5057: A cryptographic primitive operation failed. <br /> &#9679 5060: Verification operation failed. <br /> &#9679 5061: Cryptographic operation. <br /> &#9679 5062: A kernel-mode cryptographic self test was performed.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\System\Audit System Integrity")
	if (AdvancedAuditPolicyConfiguration.AuditAccountLockout() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Logon/Logoff \ Audit Account Lockout")
		a.append("(L1) Ensure 'Audit Account Lockout' is set to 'Success'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports when a user's account is locked out as a result of too many failed logon attempts. Events for this subcategory include: <br /> &#9679 4625: An account failed to log on.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Logon/Logoff\Audit Account Lockout")
	if (AdvancedAuditPolicyConfiguration.AuditSpecialLogon() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Logon/Logoff \ Audit Special Logon")
		a.append("(L1) Ensure 'Audit Special Logon' is set to 'Success'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports when a special logon is used. A special logon is a logon that has administrator-equivalent privileges and can be used to elevate a process to a higher level. Events for this subcategory include: <br /> &#9679 4964 : Special groups have been assigned to a new logon.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Logon/Logoff\Audit Special Logon")
	if (AdvancedAuditPolicyConfiguration.AuditOtherLogonLogoffEvents() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Logon/Logoff \ Audit Other Logon/Logoff Events")
		a.append("(L1) Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports other logon/logoff-related events, such as Terminal Services session disconnects and reconnects, using RunAs to run processes under a different account, and locking and unlocking a workstation. Events for this subcategory include: <br /> &#9679 4649: A replay attack was detected. <br /> &#9679 4778: A session was reconnected to a Window Station. <br /> &#9679 4779: A session was disconnected from a Window Station. <br /> &#9679 4800: The workstation was locked. <br /> &#9679 4801: The workstation was unlocked. <br /> &#9679 4802: The screen saver was invoked. <br /> &#9679 4803: The screen saver was dismissed. <br /> &#9679 5378: The requested credentials delegation was disallowed by policy. <br /> &#9679 5632: A request was made to authenticate to a wireless network. <br /> &#9679 5633: A request was made to authenticate to a wired network. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Logon/Logoff\Audit Other Logon/Logoff Events")
	if (AdvancedAuditPolicyConfiguration.AuditAuditPolicyChange() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Policy Change \ Audit Audit Policy Change")
		a.append("(L1) Ensure 'Audit Audit Policy Change' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports changes in audit policy including SACL changes. Events for this subcategory include: <br /> &#9679 4715: The audit policy (SACL) on an object was changed. <br /> &#9679 4719: System audit policy was changed. <br /> &#9679 4902: The Per-user audit policy table was created. <br /> &#9679 4904: An attempt was made to register a security event source. <br /> &#9679 4905: An attempt was made to unregister a security event source. <br /> &#9679 4906: The CrashOnAuditFail value has changed. <br /> &#9679 4907: Auditing settings on object were changed. <br /> &#9679 4908: Special Groups Logon table modified. <br /> &#9679 4912: Per User Audit Policy was changed.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Policy Change\Audit Audit Policy Change")
	if (AdvancedAuditPolicyConfiguration.AuditComputerAccountManagement() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Account Management \ Audit Computer Account Management")
		a.append("(L1) Ensure 'Audit Computer Account Management' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports each event of computer account management, such as when a computer account is created, changed, deleted, renamed, disabled, or enabled. Events for this subcategory include: <br /> &#9679 4741: A computer account was created. <br /> &#9679 4742: A computer account was changed. <br /> &#9679 4743: A computer account was deleted.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Account Management\Audit Computer Account Management")
	if (AdvancedAuditPolicyConfiguration.AuditOtherAccountManagementEvents() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Account Management \ Audit Other Account Management Events")
		a.append("(L1) Ensure 'Audit Other Account Management Events' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports other account management events. Events for this subcategory include: <br /> &#9679 4782: The password hash an account was accessed. <br /> &#9679 4793: The Password Policy Checking API was called. ")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Account Management\Audit Other Account Management Events")
	if (AdvancedAuditPolicyConfiguration.AuditSecurityStateChange() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ System \ Audit Security State Change")
		a.append("(L1) Ensure 'Audit Security State Change' is set to 'Success'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports changes in security state of the system, such as when the security subsystem starts and stops. Events for this subcategory include: <br /> &#9679 4608: Windows is starting up. <br /> &#9679 4609: Windows is shutting down. <br /> &#9679 4616: The system time was changed. <br /> &#9679 4621: Administrator recovered system from CrashOnAuditFail. Users who are not administrators will now be allowed to log on. Some audit-able activity might not have been recorded.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\System\Audit Security State Change")
	if (AdvancedAuditPolicyConfiguration.AuditSecurityGroupManagement() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Account Management \ Audit Security Group Management ")
		a.append("(L1) Ensure 'Audit Security Group Management' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports each event of security group management, such as when a security group is created, changed, or deleted or when a member is added to or removed from a security group. If you enable this Audit policy setting, administrators can track events to detect malicious, accidental, and authorized creation of security group accounts. Events for this subcategory include: <br /> &#9679 4727: A security-enabled global group was created. <br /> &#9679 4728: A member was added to a security-enabled global group. <br /> &#9679 4729: A member was removed from a security-enabled global group. <br /> &#9679 4730: A security-enabled global group was deleted. <br /> &#9679 4731: A security-enabled local group was created. <br /> &#9679 4732: A member was added to a security-enabled local group. <br /> &#9679 4733: A member was removed from a security-enabled local group. <br /> &#9679 4734: A security-enabled local group was deleted. <br /> &#9679 4735: A security-enabled local group was changed. <br /> &#9679 4737: A security-enabled global group was changed. <br /> &#9679 4754: A security-enabled universal group was created. <br /> &#9679 4755: A security-enabled universal group was changed. <br /> &#9679 4756: A member was added to a security-enabled universal group. <br /> &#9679 4757: A member was removed from a security-enabled universal group. <br /> &#9679 4758: A security-enabled universal group was deleted. <br /> &#9679 4764: A group's type was changed.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Account Management\Audit Security Group Management")
	if (AdvancedAuditPolicyConfiguration.AuditIPsecDriver() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ System \ Audit IPsec Driver")
		a.append("(L1) Ensure 'Audit IPsec Driver' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports on the activities of the Internet Protocol security (IPsec) driver. Events for this subcategory include: <br /> &#9679 4960: IPsec dropped an inbound packet that failed an integrity check. If this problem persists, it could indicate a network issue or that packets are being modified in transit to this computer. Verify that the packets sent from the remote computer are the same as those received by this computer. This error might also indicate interoperability problems with other IPsec implementations. <br /> &#9679 4961: IPsec dropped an inbound packet that failed a replay check. If this problem persists, it could indicate a replay attack against this computer. <br /> &#9679 4962: IPsec dropped an inbound packet that failed a replay check. The inbound packet had too low a sequence number to ensure it was not a replay. <br /> &#9679 4963: IPsec dropped an inbound clear text packet that should have been secured. This is usually due to the remote computer changing its IPsec policy without informing this computer. This could also be a spoofing attack attempt <br /> &#9679 4965: IPsec received a packet from a remote computer with an incorrect Security Parameter Index (SPI). This is usually caused by malfunctioning hardware that is corrupting packets. If these errors persist, verify that the packets sent from the remote computer are the same as those received by this computer. This error may also indicate interoperability problems with other IPsec implementations. In that case, if connectivity is not impeded, then these events can be ignored. <br /> &#9679 5478: IPsec Services has started successfully. <br /> &#9679 5479: IPsec Services has been shut down successfully. The shutdown of IPsec Services can put the computer at greater risk of network attack or expose the computer to potential security risks. <br /> &#9679 5480: IPsec Services failed to get the complete list of network interfaces on the computer. This poses a potential security risk because some of the network interfaces may not get the protection provided by the applied IPsec filters. Use the IP Security Monitor snap-in to diagnose the problem. <br /> &#9679 5483: IPsec Services failed to initialize RPC server. IPsec Services could not be started. <br /> &#9679 5484: IPsec Services has experienced a critical failure and has been shut down. The shutdown of IPsec Services can put the computer at greater risk of network attack or expose the computer to potential security risks. <br /> &#9679 5485: IPsec Services failed to process some IPsec filters on a plug-and-play event for network interfaces. This poses a potential security risk because some of the network interfaces may not get the protection provided by the applied IPsec filters. Use the IP Security Monitor snap-in to diagnose the problem.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\System\Audit IPsec Driver")
	if (AdvancedAuditPolicyConfiguration.AuditUserAccountManagement() == 'WARNING') ==1 :  
		temp.append("Advanced Audit Policy Configuration \ Account Management \ Audit User Account Management")
		a.append("(L1) Ensure 'Audit User Account Management' is set to 'Success and Failure'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This subcategory reports each event of user account management, such as when a user account is created, changed, or deleted; a user account is renamed, disabled, or enabled; or a password is set or changed. If you enable this Audit policy setting, administrators can track events to detect malicious, accidental, and authorized creation of user accounts. Events for this subcategory include: <br /> &#9679 4720: A user account was created. <br /> &#9679 4722: A user account was enabled. <br /> &#9679 4723: An attempt was made to change an account's password. <br /> &#9679 4724: An attempt was made to reset an account's password. <br /> &#9679 4725: A user account was disabled. <br /> &#9679 4726: A user account was deleted. <br /> &#9679 4738: A user account was changed. <br /> &#9679 4740: A user account was locked out. <br /> &#9679 4765: SID History was added to an account. <br /> &#9679 4766: An attempt to add SID History to an account failed. <br /> &#9679 4767: A user account was unlocked. <br /> &#9679 4780: The ACL was set on accounts which are members of administrators groups. <br /> &#9679 4781: The name of an account was changed: <br /> &#9679 4794: An attempt was made to set the Directory Services Restore Mode. <br /> &#9679 5376: Credential Manager credentials were backed up. <br /> &#9679 5377: Credential Manager credentials were restored from a backup.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Success and Failure: Computer Configuration\Policies\Windows Settings\Security Settings\Advanced Audit Policy Configuration\Audit Policies\Account Management\Audit User Account Management")
	if (FirewallDomainProfile.Applylocalconnectionsecurityrules() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Settings: Apply local connection security rules")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Settings: Apply local connection security rules' is set to 'Yes (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting controls whether local administrators are allowed to create connection security rules that apply together with connection security rules configured by Group Policy.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Settings Customize\Apply local connection security rules")
	if (FirewallDomainProfile.Firewallstate() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Firewall state")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Firewall state' is set to 'On (recommended)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Select On (recommended) to have Windows Firewall with Advanced Security use the settings for this profile to filter network traffic. If you select Off, Windows Firewall with Advanced Security will not use any of the firewall rules or connection security rules for this profile.")
		d.append("To establish the recommended configuration via GP, set the following UI path to On (recommended): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Firewall state")
	if (FirewallDomainProfile.Displayanotification() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Settings: Display a notification")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Settings: Display a notification' is set to 'No'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Select this option to have Windows Firewall with Advanced Security display notifications to the user when a program is blocked from receiving inbound connections. <br /> Note: When the Apply local firewall rules setting is configured to No, it's recommended to also configure the Display a notification setting to No. Otherwise, users will continue to receive messages that ask if they want to unblock a restricted inbound connection, but the user's response will be ignored.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Settings Customize\Display a notification")
	if (FirewallDomainProfile.Applylocalfirewallrules() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Settings: Apply local firewall rules")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Settings: Apply local firewall rules' is set to 'Yes (default)' (")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting controls whether local administrators are allowed to create local firewall rules that apply together with firewall rules configured by Group Policy.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Settings Customize\Apply local firewall rules")
	if (FirewallDomainProfile.Inboundconnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Inbound connections")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Inbound connections' is set to 'Block (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines the behavior for inbound connections that do not match an inbound firewall rule. The default behavior is to block connections unless there are firewall rules to allow the connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Block (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Inbound connections")
	if (FirewallDomainProfile.LogSuccessfulConnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Logging: Log successful connections")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Logging: Log successful connections' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to log when Windows Firewall with Advanced Security allows an inbound connection. The log records why and when the connection was formed. Look for entries with the word ALLOW in the action column of the log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Logging Customize\Log successful connections")
	if (FirewallDomainProfile.LoggingCustomizeSize() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Logging: Size limit (KB)")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Logging: Size limit (KB)' is set to '16,384 KB or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to specify the size limit of the file in which Windows Firewall will write its log information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 16,384 KB or greater: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Logging Customize\Size limit (KB)")
	if (FirewallDomainProfile.LoggingCustomizeName() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Logging: Name")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Logging: Name' is set to '%SYSTEMROOT%\System32\logfiles\\firewall\domainfw.log'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to specify the path and name of the file in which Windows Firewall will write its log information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to %SYSTEMROOT%\System32\logfiles\\firewall\domainfw.log: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Logging Customize\Name")
	if (FirewallDomainProfile.Logdroppedpackets() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Logging: Log dropped packets")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Logging: Log dropped packets' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to log when Windows Firewall with Advanced Security discards an inbound packet for any reason. The log records why and when the packet was dropped. Look for entries with the word DROP in the action column of the log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Logging Customize\Log dropped packets")
	if (FirewallDomainProfile.Outboundconnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Domain Profile \ Windows Firewall: Domain: Outbound connections")
		a.append("(L1) Ensure 'Windows Firewall: Domain: Outbound connections' is set to 'Allow (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines the behavior for outbound connections that do not match an outbound firewall rule. In Windows Vista / Server 2008 and above, the default behavior is to allow connections unless there are firewall rules that block the connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Allow (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Domain Profile\Outbound connections")
	if (FirewallPrivateProfile.Applylocalconnectionsecurityrules() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Settings: Apply local connection security rules")
		a.append("(L1) Ensure 'Windows Firewall: Private: Settings: Apply local connection security rules' is set to 'Yes (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting controls whether local administrators are allowed to create connection security rules that apply together with connection security rules configured by Group Policy.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Settings Customize\Apply local connection security rules")
	if (FirewallPrivateProfile.Firewallstate() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Firewall state")
		a.append("(L1) Ensure 'Windows Firewall: Private: Firewall state' is set to 'On (recommended)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Select On (recommended) to have Windows Firewall with Advanced Security use the settings for this profile to filter network traffic. If you select Off, Windows Firewall with Advanced Security will not use any of the firewall rules or connection security rules for this profile.")
		d.append("To establish the recommended configuration via GP, set the following UI path to On (recommended): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Firewall state")
	if (FirewallPrivateProfile.Displayanotification() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Settings: Display a notification")
		a.append("(L1) Ensure 'Windows Firewall: Private: Settings: Display a notification' is set to 'No'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Select this option to have Windows Firewall with Advanced Security display notifications to the user when a program is blocked from receiving inbound connections. <br /> Note: When the Apply local firewall rules setting is configured to No, it's recommended to also configure the Display a notification setting to No. Otherwise, users will continue to receive messages that ask if they want to unblock a restricted inbound connection, but the user's response will be ignored.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Settings Customize\Display a notification")
	if (FirewallPrivateProfile.Applylocalfirewallrules() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Settings: Apply local firewall rules")
		a.append("(L1) Ensure 'Windows Firewall: Private: Settings: Apply local firewall rules' is set to 'Yes (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting controls whether local administrators are allowed to create local firewall rules that apply together with firewall rules configured by Group Policy.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Settings Customize\Apply local firewall rules")
	if (FirewallPrivateProfile.Inboundconnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Inbound connections")
		a.append("(L1) Ensure 'Windows Firewall: Private: Inbound connections' is set to 'Block (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines the behavior for inbound connections that do not match an inbound firewall rule. The default behavior is to block connections unless there are firewall rules to allow the connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Block (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Inbound connections")
	if (FirewallPrivateProfile.LogSuccessfulConnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Logging: Log successful connections")
		a.append("(L1) Ensure 'Windows Firewall: Private: Logging: Log successful connections' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to log when Windows Firewall with Advanced Security allows an inbound connection. The log records why and when the connection was formed. Look for entries with the word ALLOW in the action column of the log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Logging Customize\Log successful connections")
	if (FirewallPrivateProfile.LoggingCustomizeSize() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Logging: Size limit (KB)")
		a.append("(L1) Ensure 'Windows Firewall: Private: Logging: Size limit (KB)' is set to '16,384 KB or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to specify the size limit of the file in which Windows Firewall will write its log information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 16,384 KB or greater: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Logging Customize\Size limit (KB)")
	if (FirewallPrivateProfile.LoggingCustomizeName() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Logging: Name")
		a.append("(L1) Ensure 'Windows Firewall: Private: Logging: Name' is set to '%SYSTEMROOT%\System32\logfiles\\firewall\privatefw.log'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to specify the path and name of the file in which Windows Firewall will write its log information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to %SYSTEMROOT%\System32\logfiles\\firewall\privatefw.log: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Logging Customize\Name")
	if (FirewallPrivateProfile.Logdroppedpackets() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Logging: Log dropped packets")
		a.append("(L1) Ensure 'Windows Firewall: Private: Logging: Log dropped packets' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to log when Windows Firewall with Advanced Security discards an inbound packet for any reason. The log records why and when the packet was dropped. Look for entries with the word DROP in the action column of the log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Logging Customize\Log dropped packets")
	if (FirewallPrivateProfile.Outboundconnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Private Profile \ Windows Firewall: Private: Outbound connections")
		a.append("(L1) Ensure 'Windows Firewall: Private: Outbound connections' is set to 'Allow (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines the behavior for outbound connections that do not match an outbound firewall rule. The default behavior is to allow connections unless there are firewall rules that block the connection. <br /> Important: If you set Outbound connections to Block and then deploy the firewall policy by using a GPO, computers that receive the GPO settings cannot receive subsequent Group Policy updates unless you create and deploy an outbound rule that enables Group Policy to work. Predefined rules for Core Networking include outbound rules that enable Group Policy to work. Ensure that these outbound rules are active, and thoroughly test firewall profiles before deploying.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Allow (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Private Profile\Outbound connections")
	if (FirewallPublicProfile.Applylocalconnectionsecurityrules() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Settings: Apply local connection security rules")
		a.append("(L1) Ensure 'Windows Firewall: Public: Settings: Apply local connection security rules' is set to 'No'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting controls whether local administrators are allowed to create connection security rules that apply together with connection security rules configured by Group Policy.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Settings Customize\Apply local connection security rules")
	if (FirewallPublicProfile.Firewallstate() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Firewall state")
		a.append("(L1) Ensure 'Windows Firewall: Public: Firewall state' is set to 'On (recommended)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Select On (recommended) to have Windows Firewall with Advanced Security use the settings for this profile to filter network traffic. If you select Off, Windows Firewall with Advanced Security will not use any of the firewall rules or connection security rules for this profile.")
		d.append("To establish the recommended configuration via GP, set the following UI path to On (recommended): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Firewall state")
	if (FirewallPublicProfile.Displayanotification() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Settings: Display a notification")
		a.append("(L1) Ensure 'Windows Firewall: Public: Settings: Display a notification' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Select this option to have Windows Firewall with Advanced Security display notifications to the user when a program is blocked from receiving inbound connections. <br /> Note: When the Apply local firewall rules setting is configured to Yes, it is also recommended to also configure the Display a notification setting to Yes. Otherwise, users will not receive messages that ask if they want to unblock a restricted inbound connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Settings Customize\Display a notification")
	if (FirewallPublicProfile.Applylocalfirewallrules() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Settings: Apply local firewall rules")
		a.append("(L1) Ensure 'Windows Firewall: Public: Settings: Apply local firewall rules' is set to 'No'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting controls whether local administrators are allowed to create local firewall rules that apply together with firewall rules configured by Group Policy.")
		d.append("To establish the recommended configuration via GP, set the following UI path to No: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Settings Customize\Apply local firewall rules")
	if (FirewallPublicProfile.Inboundconnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Inbound connections")
		a.append("(L1) Ensure 'Windows Firewall: Public: Inbound connections' is set to 'Block (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines the behavior for inbound connections that do not match an inbound firewall rule. The default behavior is to block connections unless there are firewall rules to allow the connection.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Block (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Inbound connections")
	if (FirewallPublicProfile.LogSuccessfulConnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Logging: Log successful connections")
		a.append("(L1) Ensure 'Windows Firewall: Public: Logging: Log successful connections' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to log when Windows Firewall with Advanced Security allows an inbound connection. The log records why and when the connection was formed. Look for entries with the word ALLOW in the action column of the log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes. Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Logging Customize\Log successful connections")
	if (FirewallPublicProfile.LoggingCustomizeSize() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Logging: Size limit (KB)'")
		a.append("(L1) Ensure 'Windows Firewall: Public: Logging: Size limit (KB)' is set to '16,384 KB or greater'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to specify the size limit of the file in which Windows Firewall will write its log information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to 16,384 KB or greater: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Logging Customize\Size limit (KB)")
	if (FirewallPublicProfile.LoggingCustomizeName() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Logging: Name")
		a.append("(L1) Ensure 'Windows Firewall: Public: Logging: Name' is set to '%SYSTEMROOT%\System32\logfiles\\firewall\publicfw.log'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to specify the path and name of the file in which Windows Firewall will write its log information.")
		d.append("To establish the recommended configuration via GP, set the following UI path to %SYSTEMROOT%\System32\logfiles\\firewall\publicfw.log: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Logging Customize\Name")
	if (FirewallPublicProfile.Logdroppedpackets() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Logging: Log dropped packets")
		a.append("(L1) Ensure 'Windows Firewall: Public: Logging: Log dropped packets' is set to 'Yes'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("Use this option to log when Windows Firewall with Advanced Security discards an inbound packet for any reason. The log records why and when the packet was dropped. Look for entries with the word DROP in the action column of the log.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Yes: Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Logging Customize\Log dropped packets")
	if (FirewallPublicProfile.Outboundconnections() == 'WARNING') ==1 :  
		temp.append("Windows Firewall With Advanced Security \ Public Profile \ Windows Firewall: Public: Outbound connections")
		a.append("(L1) Ensure 'Windows Firewall: Public: Outbound connections' is set to 'Allow (default)'")
		b.append("&#9679; Level 1 <br /> &nbsp; &nbsp; &nbsp; &nbsp; &#9679; Level 1 + BitLocker")
		c.append("This setting determines the behavior for outbound connections that do not match an outbound firewall rule. The default behavior is to allow connections unless there are firewall rules that block the connection. <br /> Important: If you set Outbound connections to Block and then deploy the firewall policy by using a GPO, computers that receive the GPO settings cannot receive subsequent Group Policy updates unless you create and deploy an outbound rule that enables Group Policy to work. Predefined rules for Core Networking include outbound rules that enable Group Policy to work. Ensure that these outbound rules are active, and thoroughly test firewall profiles before deploying.")
		d.append("To establish the recommended configuration via GP, set the following UI path to Allow (default): Computer Configuration\Policies\Windows Settings\Security Settings\Windows Firewall with Advanced Security\Windows Firewall with Advanced Security\Windows Firewall Properties\Public Profile\Outbound connections")
	return temp, a, b ,c ,d
